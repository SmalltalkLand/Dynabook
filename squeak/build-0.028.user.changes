

----SNAPSHOT----(9 July 2020 12:11:44) build-0.028.image priorSource: 14436134!
!Bootstrap methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 12:51:26' prior: 50782877!
bootstrapCollections: base spObjs: spObjs
| ra |
ra _ Array copyForBootstrap.
ra superclass superclass superclass superclass instVarNamed: #superclass put: (base at: #Object).
spObjs first at: 8 put: ra.
^{#Array -> ra. #ArrayedCollection -> ra superclass. #SequencableCollection -> ra superclass superclass. #Collection -> ra superclass superclass superclass} asDictionary! !
!Bootstrap methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:00:34' prior: 50782895!
bootstrapCollections: base spObjs: spObjs
| ra |
ra _ Array copyForBootstrap.
ra superclass superclass superclass superclass instVarNamed: #superclass put: (base at: #Object).
spObjs first at: 8 put: ra.
^{#Array -> ra. #ArrayedCollection -> ra superclass. #SequencableCollection -> ra superclass superclass. #Collection -> ra superclass superclass superclass} asDictionary! !
!Class methodsFor: 'upgrading' stamp: 'GDK 7/9/2020 13:01:38'!
atomic: b
| nc |
nc _ self copy.
b value: nc.
self becomeForward: nc.
^nc! !
!Class methodsFor: 'upgrading' stamp: 'GDK 7/9/2020 13:10:29' prior: 50782924!
atomic: b
| nc |
nc _ self copy.
b value: nc.
self becomeForward: nc.
^nc! !

Object subclass: #SafeMode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-SafeMode'!

!classDefinition: #SafeMode category: #'System-SafeMode' stamp: 'GDK 7/9/2020 13:12:16'!
Object subclass: #SafeMode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-SafeMode'!
!SafeMode class methodsFor: 'no messages' stamp: 'GDK 7/9/2020 13:12:22'!
enabled
^false! !
!SafeMode class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:15:14'!
bootInto
self enabled ifTrue: [^self].
self atomic: [:c|c compile: 'enabled
	^true'].
[self runningWorld doOneCycle] repeat.
self atomic: [:c|c compile: 'enabled
	^false'].! !
!SafeMode class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:33:14' prior: 50782949!
bootInto
self enabled ifTrue: [^self].
self atomic: [:c|c compile: 'enabled
	^true'].
[[self runningWorld doOneCycle] repeat.] on: Notification do: [:ex|ex tag == self ifFalse: [ex pass]].
self atomic: [:c|c compile: 'enabled
	^false'].! !
!SafeMode class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:35:44' prior: 50782958!
bootInto
self enabled ifTrue: [^self].
self atomic: [:c|c compile: 'enabled
	^true'].
[[self runningWorld doOneCycle] repeat.] on: Notification do: [:ex|ex tag = {self. #exit} ifFalse: [ex pass]].
self atomic: [:c|c compile: 'enabled
	^false'].! !
!SafeMode class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:47:49' prior: 50782969!
bootInto
self enabled ifTrue: [^self].
self atomic: [:c|c compile: 'enabled
	^true'].
[[self runningWorld doOneCycle] repeat.] on: Notification do: [:ex|ex tag = {self. #exit} ifFalse: [ex pass]].
self atomic: [:c|c compile: 'enabled
	^false'].! !

Object subclass: #PrototypicalCloner
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Prototypical'!

!classDefinition: #PrototypicalCloner category: #'System-Prototypical' stamp: 'GDK 7/9/2020 13:48:29'!
Object subclass: #PrototypicalCloner
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'System-Prototypical'!
!PrototypicalCloner class methodsFor: 'no messages' stamp: 'GDK 7/9/2020 13:48:45'!
create: obj
^self subclassResponsibility! !
!PrototypicalCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:48:52'!
getProto: obj
^self subclassResponsibility! !
!PrototypicalCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:49:01'!
setProto: obj toValue: v
^self subclassResponsibility! !

PrototypicalCloner subclass: #JSProtoCloner
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JSBridge-Prototypical'!

!classDefinition: #JSProtoCloner category: #'JSBridge-Prototypical' stamp: 'GDK 7/9/2020 13:51:06'!
PrototypicalCloner subclass: #JSProtoCloner
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'JSBridge-Prototypical'!
!JSProtoCloner class methodsFor: 'no messages' stamp: 'GDK 7/9/2020 13:51:55'!
toJS: stObj
^JSObjectProxy basicNew primSqueakAsJSObject: stObj;yourself! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:53:43' overrides: 50783003!
create: obj
| o |
o _ self toJS: (JS Object create: (self toJS: obj)).
o pointers: (JS Object create:  o pointers).! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:53:49' prior: 50783036 overrides: 50783003!
create: obj
| o |
o _ self toJS: (JS Object create: (self toJS: obj)).
o pointers: (JS Object create:  o pointers).
! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:54:42' prior: 50783044 overrides: 50783003!
create: obj
| o |
o _ self toJS: (JS Object create: (self toJS: obj)).
o pointers: (JS Object create:  o pointers).
^o yourself! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:54:56' prior: 50783052 overrides: 50783003!
create: obj
| o |
o _ self toJS: (JS Object create: (self toJS: obj)).
o pointers: (JS Object create:  o pointers).
^o JSYourself! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:58:31' overrides: 50783008!
getProto: obj
^(self toJS: obj) __proto__! !
!JSProtoCloner class methodsFor: 'as yet unclassified' stamp: 'GDK 7/9/2020 13:59:07' overrides: 50783013!
setProto: obj toValue: v
(self toJS: obj) __proto__: (self toJS: v).! !