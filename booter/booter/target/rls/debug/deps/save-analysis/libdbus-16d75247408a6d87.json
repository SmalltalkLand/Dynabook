{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4","program":"/home/grahamk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","dbus","--edition=2018","/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=16d75247408a6d87","-C","extra-filename=-16d75247408a6d87","--out-dir","/home/grahamk/dynabook/booter/booter/target/rls/debug/deps","-L","dependency=/home/grahamk/dynabook/booter/booter/target/rls/debug/deps","--extern","libc=/home/grahamk/dynabook/booter/booter/target/rls/debug/deps/liblibc-5ebde98f0133d657.rmeta","--extern","libdbus_sys=/home/grahamk/dynabook/booter/booter/target/rls/debug/deps/liblibdbus_sys-a1286497122a13cf.rmeta","--cap-lints","allow","-L","native=/usr/lib","--error-format=json","--sysroot","/home/grahamk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/grahamk/dynabook/booter/booter/target/rls/debug/deps/libdbus-16d75247408a6d87.rmeta"},"prelude":{"crate_id":{"name":"dbus","disambiguator":[8530914733459982398,13160672189518189462]},"crate_root":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src","external_crates":[{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14045440404761711878,14828778038164510514]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7820758769895212465,18238673129907254737]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9963577696039191896,9299225972135698896]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5115750228290021017,18426691258663503339]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8142361000642295370,12116541476300662820]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10087414976326374924,14391090676338821578]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8340036686731517060,16423069435016404652]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2971787223733165080,17737825855946891561]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[10338496606251499561,7959271942740760993]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17233880546926637686,13266504452914808604]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[12870332656920028317,4085626084947596610]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11596937576886367077,15208627022316773696]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15537301489062449107,1809873510282706894]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[3248978736625587480,14843280920921965555]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[8584546836761022199,10657780881138546681]}},{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","num":16,"id":{"name":"libdbus_sys","disambiguator":[160952815772182199,5440109582478367191]}}],"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":0,"byte_end":1902,"line_start":1,"line_end":68,"column_start":1,"column_end":72}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1057,"byte_end":1064,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2453},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1066,"byte_end":1077,"line_start":25,"line_end":25,"column_start":35,"column_end":46},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2839,"byte_end":2849,"line_start":24,"line_end":24,"column_start":27,"column_end":37},"alias_span":null,"name":"SignalArgs","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2892,"byte_end":2901,"line_start":27,"line_end":27,"column_start":26,"column_end":35},"alias_span":null,"name":"MatchRule","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43038,"byte_end":43042,"line_start":19,"line_end":19,"column_start":37,"column_end":41},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43046,"byte_end":43068,"line_start":19,"line_end":19,"column_start":45,"column_end":67},"name":"OrgFreedesktopDBusPeer","value":"","parent":{"krate":0,"index":241}},{"kind":"Use","ref_id":{"krate":0,"index":251},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43107,"byte_end":43121,"line_start":21,"line_end":21,"column_start":37,"column_end":51},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43125,"byte_end":43157,"line_start":21,"line_end":21,"column_start":55,"column_end":87},"name":"OrgFreedesktopDBusIntrospectable","value":"","parent":{"krate":0,"index":241}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43196,"byte_end":43206,"line_start":23,"line_end":23,"column_start":37,"column_end":47},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43210,"byte_end":43238,"line_start":23,"line_end":23,"column_start":51,"column_end":79},"name":"OrgFreedesktopDBusProperties","value":"","parent":{"krate":0,"index":241}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43277,"byte_end":43290,"line_start":25,"line_end":25,"column_start":37,"column_end":50},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43294,"byte_end":43325,"line_start":25,"line_end":25,"column_start":54,"column_end":85},"name":"OrgFreedesktopDBusObjectManager","value":"","parent":{"krate":0,"index":241}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31376,"byte_end":31386,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":2526},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31388,"byte_end":31396,"line_start":16,"line_end":16,"column_start":34,"column_end":42},"alias_span":null,"name":"ConnMsgs","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":16,"index":192},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34225,"byte_end":34245,"line_start":81,"line_end":81,"column_start":21,"column_end":41},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34249,"byte_end":34265,"line_start":81,"line_end":81,"column_start":45,"column_end":61},"name":"RequestNameReply","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":16,"index":213},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34287,"byte_end":34307,"line_start":82,"line_end":82,"column_start":21,"column_end":41},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34311,"byte_end":34327,"line_start":82,"line_end":82,"column_start":45,"column_end":61},"name":"ReleaseNameReply","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":16,"index":174},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34349,"byte_end":34360,"line_start":83,"line_end":83,"column_start":21,"column_end":32},"alias_span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34364,"byte_end":34371,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"name":"BusType","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":2572},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34408,"byte_end":34413,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"alias_span":null,"name":"Watch","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34415,"byte_end":34425,"line_start":87,"line_end":87,"column_start":30,"column_end":40},"alias_span":null,"name":"WatchEvent","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1143,"byte_end":1148,"line_start":32,"line_end":32,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3006},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1291,"byte_end":1300,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3086},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1302,"byte_end":1306,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150198,"byte_end":150201,"line_start":68,"line_end":68,"column_start":24,"column_end":27},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150203,"byte_end":150213,"line_start":68,"line_end":68,"column_start":29,"column_end":39},"alias_span":null,"name":"FixedArray","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":966},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150215,"byte_end":150218,"line_start":68,"line_end":68,"column_start":41,"column_end":44},"alias_span":null,"name":"Get","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":995},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150220,"byte_end":150227,"line_start":68,"line_end":68,"column_start":46,"column_end":53},"alias_span":null,"name":"DictKey","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150229,"byte_end":150235,"line_start":68,"line_end":68,"column_start":55,"column_end":61},"alias_span":null,"name":"Append","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150237,"byte_end":150243,"line_start":68,"line_end":68,"column_start":63,"column_end":69},"alias_span":null,"name":"RefArg","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150245,"byte_end":150254,"line_start":68,"line_end":68,"column_start":71,"column_end":80},"alias_span":null,"name":"AppendAll","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150256,"byte_end":150263,"line_start":68,"line_end":68,"column_start":82,"column_end":89},"alias_span":null,"name":"ReadAll","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150265,"byte_end":150271,"line_start":68,"line_end":68,"column_start":91,"column_end":97},"alias_span":null,"name":"ArgAll","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150273,"byte_end":150277,"line_start":68,"line_end":68,"column_start":99,"column_end":103},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":991},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150279,"byte_end":150287,"line_start":68,"line_end":68,"column_start":105,"column_end":113},"alias_span":null,"name":"cast_mut","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":4778},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150317,"byte_end":150322,"line_start":69,"line_end":69,"column_start":28,"column_end":33},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":4753},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150324,"byte_end":150328,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"alias_span":null,"name":"Dict","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150365,"byte_end":150372,"line_start":70,"line_end":70,"column_start":35,"column_end":42},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":940}},{"kind":"Use","ref_id":{"krate":0,"index":5146},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263409,"byte_end":263417,"line_start":31,"line_end":31,"column_start":23,"column_end":31},"alias_span":null,"name":"Argument","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5133},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263419,"byte_end":263423,"line_start":31,"line_end":31,"column_start":33,"column_end":37},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5182},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263453,"byte_end":263462,"line_start":32,"line_end":32,"column_start":28,"column_end":37},"alias_span":null,"name":"MethodErr","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5254},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263464,"byte_end":263474,"line_start":32,"line_end":32,"column_start":39,"column_end":49},"alias_span":null,"name":"MethodInfo","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5277},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263476,"byte_end":263484,"line_start":32,"line_end":32,"column_start":51,"column_end":59},"alias_span":null,"name":"PropInfo","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":1856},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263486,"byte_end":263498,"line_start":32,"line_end":32,"column_start":61,"column_end":73},"alias_span":null,"name":"MethodResult","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":1871},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263500,"byte_end":263510,"line_start":32,"line_end":32,"column_start":75,"column_end":85},"alias_span":null,"name":"MethodType","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":1857},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263512,"byte_end":263520,"line_start":32,"line_end":32,"column_start":87,"column_end":95},"alias_span":null,"name":"DataType","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5209},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263522,"byte_end":263526,"line_start":32,"line_end":32,"column_start":97,"column_end":101},"alias_span":null,"name":"MTFn","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5224},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263528,"byte_end":263535,"line_start":32,"line_end":32,"column_start":103,"column_end":110},"alias_span":null,"name":"MTFnMut","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5239},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263537,"byte_end":263543,"line_start":32,"line_end":32,"column_start":112,"column_end":118},"alias_span":null,"name":"MTSync","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5301},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263569,"byte_end":263575,"line_start":33,"line_end":33,"column_start":24,"column_end":30},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5314},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263577,"byte_end":263583,"line_start":33,"line_end":33,"column_start":32,"column_end":38},"alias_span":null,"name":"Signal","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5369},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263585,"byte_end":263593,"line_start":33,"line_end":33,"column_start":40,"column_end":48},"alias_span":null,"name":"Property","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5347},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263595,"byte_end":263601,"line_start":33,"line_end":33,"column_start":50,"column_end":56},"alias_span":null,"name":"Access","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5323},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263603,"byte_end":263621,"line_start":33,"line_end":33,"column_start":58,"column_end":76},"alias_span":null,"name":"EmitsChangedSignal","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5385},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263651,"byte_end":263660,"line_start":34,"line_end":34,"column_start":28,"column_end":37},"alias_span":null,"name":"Interface","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5407},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263662,"byte_end":263672,"line_start":34,"line_end":34,"column_start":39,"column_end":49},"alias_span":null,"name":"ObjectPath","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5419},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263674,"byte_end":263678,"line_start":34,"line_end":34,"column_start":51,"column_end":55},"alias_span":null,"name":"Tree","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263680,"byte_end":263690,"line_start":34,"line_end":34,"column_start":57,"column_end":67},"alias_span":null,"name":"TreeServer","value":"","parent":{"krate":0,"index":1756}},{"kind":"Use","ref_id":{"krate":0,"index":5432},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263716,"byte_end":263723,"line_start":35,"line_end":35,"column_start":24,"column_end":31},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":1756}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":0,"byte_end":1902,"line_start":1,"line_end":68,"column_start":1,"column_end":72},"name":"","qualname":"::","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":224},{"krate":0,"index":536},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":646},{"krate":0,"index":666},{"krate":0,"index":914},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":1756},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2452}],"decl_id":null,"docs":" D-Bus bindings for Rust","sig":null,"attributes":[{"value":"! D-Bus bindings for Rust","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! [D-Bus](http://dbus.freedesktop.org/) is a message bus, and is mainly used in Linux","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":32,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! for communication between processes. It is present by default on almost every","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":120,"byte_end":201,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"! Linux distribution out there, and runs in two instances - one per session, and one","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":202,"byte_end":288,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"! system-wide.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":289,"byte_end":305,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":306,"byte_end":309,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! In addition to the API documentation, which you're currently reading, you might want to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":310,"byte_end":401,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"! look in the examples directory, which contains many examples and some additional documents.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":402,"byte_end":497,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"! README.md also contains a few quick \"getting started\" examples (as well as information about","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":498,"byte_end":594,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"! the `futures` and `no-string-validation` features).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":595,"byte_end":650,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":651,"byte_end":654,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! In addition to this crate, there are some companion crates:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":655,"byte_end":718,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"!  * dbus-tokio for integrating D-Bus with [Tokio](http://tokio.rs)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":719,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"!  * dbus-codegen for generating code from D-Bus introspection data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":789,"byte_end":858,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!  * libdbus-sys contains the raw bindings to the C libdbus library.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":859,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"warn(missing_docs)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":931,"byte_end":953,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::message","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":19},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":2453},{"krate":0,"index":2483},{"krate":0,"index":2481},{"krate":0,"index":2479},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2474},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2469},{"krate":0,"index":2466},{"krate":0,"index":36},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":220},{"krate":0,"index":222}],"decl_id":null,"docs":" Contains structs and traits closely related to D-Bus messages.\n","sig":null,"attributes":[{"value":"! Contains structs and traits closely related to D-Bus messages.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":1904,"byte_end":1970,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2454},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2435,"byte_end":2445,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"MethodCall","qualname":"::message::MessageType::MethodCall","value":"MessageType::MethodCall","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" This is a method call D-Bus message\n","sig":null,"attributes":[{"value":"/ This is a method call D-Bus message","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2391,"byte_end":2430,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2457},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2566,"byte_end":2578,"line_start":16,"line_end":16,"column_start":5,"column_end":17},"name":"MethodReturn","qualname":"::message::MessageType::MethodReturn","value":"MessageType::MethodReturn","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" This is a method return Ok D-Bus message, used when the method call message was successfully processed\n","sig":null,"attributes":[{"value":"/ This is a method return Ok D-Bus message, used when the method call message was successfully processed","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2455,"byte_end":2561,"line_start":15,"line_end":15,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2701,"byte_end":2706,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Error","qualname":"::message::MessageType::Error","value":"MessageType::Error","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" This is a method return with error D-Bus message, used when the method call message could not be handled\n","sig":null,"attributes":[{"value":"/ This is a method return with error D-Bus message, used when the method call message could not be handled","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2588,"byte_end":2696,"line_start":17,"line_end":17,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2782,"byte_end":2788,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Signal","qualname":"::message::MessageType::Signal","value":"MessageType::Signal","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" This is a signal, usually sent to whoever wants to listen\n","sig":null,"attributes":[{"value":"/ This is a signal, usually sent to whoever wants to listen","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2716,"byte_end":2777,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2453},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2373,"byte_end":2384,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::message::MessageType","value":"MessageType::{MethodCall, MethodReturn, Error, Signal}","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2463}],"decl_id":null,"docs":" One of the four different message types.\n","sig":null,"attributes":[{"value":"/ One of the four different message types.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2319,"byte_end":2363,"line_start":11,"line_end":11,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23195,"byte_end":23205,"line_start":30,"line_end":30,"column_start":11,"column_end":21},"name":"SignalArgs","qualname":"::message::signalargs::SignalArgs","value":"SignalArgs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56}],"decl_id":null,"docs":" Helper methods for structs representing a Signal","sig":null,"attributes":[{"value":"/ Helper methods for structs representing a Signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22388,"byte_end":22440,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22441,"byte_end":22444,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22445,"byte_end":22458,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22459,"byte_end":22462,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Listen to InterfacesRemoved signal from org.bluez.obex.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22463,"byte_end":22522,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22523,"byte_end":22526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22527,"byte_end":22545,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ use dbus::blocking::Connection;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22546,"byte_end":22581,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ use dbus::message::SignalArgs;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22582,"byte_end":22616,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ use dbus::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved as IR;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22617,"byte_end":22709,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22710,"byte_end":22738,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22739,"byte_end":22742,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22743,"byte_end":22790,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ // Add a match for this signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22791,"byte_end":22825,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ let mr = IR::match_rule(Some(&\"org.bluez.obex\".into()), None).static_clone();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22826,"byte_end":22907,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ c.add_match(mr, |ir: IR, _, _| {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22908,"byte_end":22944,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/      println!(\"Interfaces {:?} have been removed from bluez on path {}.\", ir.interfaces, ir.object);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":22945,"byte_end":23049,"line_start":22,"line_end":22,"column_start":1,"column_end":105}},{"value":"/      true","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23050,"byte_end":23063,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23064,"byte_end":23071,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23072,"byte_end":23075,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Wait for the signal to arrive.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23076,"byte_end":23113,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ loop { c.process(Duration::from_millis(1000)).unwrap(); }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23114,"byte_end":23175,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23176,"byte_end":23183,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":48},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23247,"byte_end":23251,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"NAME","qualname":"::message::signalargs::SignalArgs::NAME","value":"&'static str","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" D-Bus name of signal\n","sig":null,"attributes":[{"value":"/ D-Bus name of signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23212,"byte_end":23236,"line_start":31,"line_end":31,"column_start":5,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":49},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23333,"byte_end":23342,"line_start":35,"line_end":35,"column_start":11,"column_end":20},"name":"INTERFACE","qualname":"::message::signalargs::SignalArgs::INTERFACE","value":"&'static str","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" D-Bus name of interface this signal belongs to\n","sig":null,"attributes":[{"value":"/ D-Bus name of interface this signal belongs to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23272,"byte_end":23322,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23415,"byte_end":23430,"line_start":38,"line_end":38,"column_start":8,"column_end":23},"name":"to_emit_message","qualname":"::message::signalargs::SignalArgs::to_emit_message","value":"fn (&self, path: &Path) -> Message","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns a message that emits the signal.\n","sig":null,"attributes":[{"value":"/ Returns a message that emits the signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23363,"byte_end":23407,"line_start":37,"line_end":37,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23943,"byte_end":23955,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"from_message","qualname":"::message::signalargs::SignalArgs::from_message","value":"fn (m: &Message) -> Option<Self>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" If the message is a signal of the correct type, return its arguments, otherwise return None.","sig":null,"attributes":[{"value":"/ If the message is a signal of the correct type, return its arguments, otherwise return None.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23690,"byte_end":23786,"line_start":44,"line_end":44,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23791,"byte_end":23794,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This does not check sender and path of the message, which is likely relevant to you as well.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23799,"byte_end":23895,"line_start":46,"line_end":46,"column_start":5,"column_end":101}},{"value":"allow(clippy :: if_same_then_else)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":23900,"byte_end":23935,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24469,"byte_end":24479,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"match_rule","qualname":"::message::signalargs::SignalArgs::match_rule","value":"fn <'a> (sender: Option<&'a BusName>, path: Option<&'a Path>) -> MatchRule<'a>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns a match rule matching this signal.","sig":null,"attributes":[{"value":"/ Returns a match rule matching this signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24334,"byte_end":24380,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24385,"byte_end":24388,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If sender and/or path is None, matches all senders and/or paths.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24393,"byte_end":24461,"line_start":59,"line_end":59,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24995,"byte_end":25004,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"match_str","qualname":"::message::signalargs::SignalArgs::match_str","value":"fn (sender: Option<&BusName>, path: Option<&Path>) -> String","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Returns a string that can be sent to `Connection::add_match`.","sig":null,"attributes":[{"value":"/ Returns a string that can be sent to `Connection::add_match`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24841,"byte_end":24906,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24911,"byte_end":24914,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If sender and/or path is None, matches all senders and/or paths.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/signalargs.rs","byte_start":24919,"byte_end":24987,"line_start":73,"line_end":73,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2484},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26417,"byte_end":26426,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"MatchRule","qualname":"::message::matchrule::MatchRule","value":"MatchRule { msg_type, sender, strict_sender, path, path_is_namespace, interface, member, eavesdrop }","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494}],"decl_id":null,"docs":" A \"match rule\", that can match Messages on its headers.","sig":null,"attributes":[{"value":"/ A \"match rule\", that can match Messages on its headers.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26234,"byte_end":26293,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26294,"byte_end":26297,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A field set to \"None\" means no filter for that header,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26298,"byte_end":26356,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/ a field set to \"Some(_)\" must match exactly.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26357,"byte_end":26405,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2486},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26503,"byte_end":26511,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"name":"msg_type","qualname":"::message::matchrule::MatchRule::msg_type","value":"std::option::Option<message::MessageType>","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Match on message type (you typically want to do this)\n","sig":null,"attributes":[{"value":"/ Match on message type (you typically want to do this)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26437,"byte_end":26494,"line_start":10,"line_end":10,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2487},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26574,"byte_end":26580,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"sender","qualname":"::message::matchrule::MatchRule::sender","value":"std::option::Option<strings::BusName<'a>>","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Match on message sender\n","sig":null,"attributes":[{"value":"/ Match on message sender","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26538,"byte_end":26565,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2488},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26738,"byte_end":26751,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"strict_sender","qualname":"::message::matchrule::MatchRule::strict_sender","value":"bool","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" If false (the default), match if sender could possibly match, due to mismatch between unique names and taken bus names\n","sig":null,"attributes":[{"value":"/ If false (the default), match if sender could possibly match, due to mismatch between unique names and taken bus names","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26607,"byte_end":26729,"line_start":14,"line_end":14,"column_start":5,"column_end":127}}]},{"kind":"Field","id":{"krate":0,"index":2489},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26804,"byte_end":26808,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"path","qualname":"::message::matchrule::MatchRule::path","value":"std::option::Option<strings::Path<'a>>","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Match on message object path\n","sig":null,"attributes":[{"value":"/ Match on message object path","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26763,"byte_end":26795,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2490},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26936,"byte_end":26953,"line_start":19,"line_end":19,"column_start":9,"column_end":26},"name":"path_is_namespace","qualname":"::message::matchrule::MatchRule::path_is_namespace","value":"bool","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" If true, will match all subpaths to the path as well as the path itself. Defaults to false.\n","sig":null,"attributes":[{"value":"/ If true, will match all subpaths to the path as well as the path itself. Defaults to false.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26832,"byte_end":26927,"line_start":18,"line_end":18,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":2491},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27004,"byte_end":27013,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"interface","qualname":"::message::matchrule::MatchRule::interface","value":"std::option::Option<strings::Interface<'a>>","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Match on message interface\n","sig":null,"attributes":[{"value":"/ Match on message interface","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":26965,"byte_end":26995,"line_start":20,"line_end":20,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2492},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27102,"byte_end":27108,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"member","qualname":"::message::matchrule::MatchRule::member","value":"std::option::Option<strings::Member<'a>>","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" Match on message member (signal or method name)\n","sig":null,"attributes":[{"value":"/ Match on message member (signal or method name)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27042,"byte_end":27093,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2493},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27217,"byte_end":27226,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"eavesdrop","qualname":"::message::matchrule::MatchRule::eavesdrop","value":"bool","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":" If true, also receive messages not intended for us. Defaults to false.\n","sig":null,"attributes":[{"value":"/ If true, also receive messages not intended for us. Defaults to false.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27134,"byte_end":27208,"line_start":24,"line_end":24,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27609,"byte_end":27618,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"match_str","qualname":"<MatchRule>::match_str","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Make a string which you can use in the call to \"add_match\".\n","sig":null,"attributes":[{"value":"/ Make a string which you can use in the call to \"add_match\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27534,"byte_end":27597,"line_start":41,"line_end":41,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":28941,"byte_end":28948,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"matches","qualname":"<MatchRule>::matches","value":"fn (&self, msg: &Message) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the message matches the rule.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the message matches the rule.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":28873,"byte_end":28929,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":29680,"byte_end":29683,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<MatchRule>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches every message.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches every message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":29616,"byte_end":29668,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":29807,"byte_end":29822,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"new_method_call","qualname":"<MatchRule>::new_method_call","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches every incoming method call message.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches every incoming method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":29722,"byte_end":29795,"line_start":89,"line_end":89,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":30032,"byte_end":30042,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"new_signal","qualname":"<MatchRule>::new_signal","value":"fn <I, N> (intf: I, name: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches signals on the interface and member name.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches signals on the interface and member name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":29941,"byte_end":30020,"line_start":96,"line_end":96,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":30356,"byte_end":30368,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"static_clone","qualname":"<MatchRule>::static_clone","value":"fn (&self) -> MatchRule<'static>","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone with no borrowed references\n","sig":null,"attributes":[{"value":"/ Returns a clone with no borrowed references","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":30297,"byte_end":30344,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3052,"byte_end":3059,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Message","qualname":"::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":87}],"decl_id":null,"docs":" A D-Bus message. A message contains headers - usually destination address, path, interface and member,\n and a list of arguments.\n","sig":null,"attributes":[{"value":"/ A D-Bus message. A message contains headers - usually destination address, path, interface and member,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":2905,"byte_end":3011,"line_start":30,"line_end":30,"column_start":1,"column_end":107}},{"value":"/ and a list of arguments.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3012,"byte_end":3040,"line_start":31,"line_end":31,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3199,"byte_end":3214,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"new_method_call","qualname":"<Message>::new_method_call","value":"fn <'d, 'p, 'i, 'm, D, P, I, M> (destination: D, path: P, iface: I, method: M) -> Result<Message, String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3149,"byte_end":3187,"line_start":39,"line_end":39,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3887,"byte_end":3898,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"method_call","qualname":"<Message>::method_call","value":"fn (destination: &BusName, path: &Path, iface: &Interface, name: &Member) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3837,"byte_end":3875,"line_start":51,"line_end":51,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":4384,"byte_end":4398,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"call_with_args","qualname":"<Message>::call_with_args","value":"fn <'d, 'p, 'i, 'm, A, D, P, I, M> (destination: D, path: P, iface: I, method: M, args: A) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":4334,"byte_end":4372,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":4815,"byte_end":4825,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"new_signal","qualname":"<Message>::new_signal","value":"fn <P, I, M> (path: P, iface: I, name: M) -> Result<Message, String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signal message.\n","sig":null,"attributes":[{"value":"/ Creates a new signal message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":4770,"byte_end":4803,"line_start":70,"line_end":70,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":5414,"byte_end":5420,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"signal","qualname":"<Message>::signal","value":"fn (path: &Path, iface: &Interface, name: &Member) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signal message.\n","sig":null,"attributes":[{"value":"/ Creates a new signal message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":5369,"byte_end":5402,"line_start":86,"line_end":86,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":5836,"byte_end":5853,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"new_method_return","qualname":"<Message>::new_method_return","value":"fn (m: &Message) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Creates a method reply for this method call.\n","sig":null,"attributes":[{"value":"/ Creates a method reply for this method call.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":5776,"byte_end":5824,"line_start":96,"line_end":96,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6111,"byte_end":6124,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"method_return","qualname":"<Message>::method_return","value":"fn (&self) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a method return (reply) for this method call.\n","sig":null,"attributes":[{"value":"/ Creates a method return (reply) for this method call.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6042,"byte_end":6099,"line_start":102,"line_end":102,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6482,"byte_end":6498,"line_start":112,"line_end":112,"column_start":12,"column_end":28},"name":"return_with_args","qualname":"<Message>::return_with_args","value":"fn <A> (&self, args: A) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a reply for a method call message.","sig":null,"attributes":[{"value":"/ Creates a reply for a method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6349,"byte_end":6395,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6400,"byte_end":6403,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Panics if called for a message which is not a method call.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6408,"byte_end":6470,"line_start":111,"line_end":111,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6706,"byte_end":6715,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"new_error","qualname":"<Message>::new_error","value":"fn (m: &Message, error_name: &str, error_message: &str) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" The old way to create a new error reply\n","sig":null,"attributes":[{"value":"/ The old way to create a new error reply","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6633,"byte_end":6676,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"deprecated","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":6681,"byte_end":6694,"line_start":119,"line_end":119,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7074,"byte_end":7079,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"error","qualname":"<Message>::error","value":"fn (&self, error_name: &ErrorName, error_message: &CStr) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error reply\n","sig":null,"attributes":[{"value":"/ Creates a new error reply","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7033,"byte_end":7062,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7615,"byte_end":7624,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"get_items","qualname":"<Message>::get_items","value":"fn (&self) -> Vec<crate::arg::messageitem::MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get the MessageItems that make up the message.","sig":null,"attributes":[{"value":"/ Get the MessageItems that make up the message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7389,"byte_end":7439,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7444,"byte_end":7447,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note: use `iter_init` or `get1`/`get2`/etc instead for faster access to the arguments.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7452,"byte_end":7542,"line_start":135,"line_end":135,"column_start":5,"column_end":95}},{"value":"/ This method is provided for backwards compatibility.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7547,"byte_end":7603,"line_start":136,"line_end":136,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7941,"byte_end":7951,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"get_serial","qualname":"<Message>::get_serial","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the D-Bus serial of a message, if one was specified.\n","sig":null,"attributes":[{"value":"/ Get the D-Bus serial of a message, if one was specified.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":7869,"byte_end":7929,"line_start":144,"line_end":144,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8183,"byte_end":8199,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"get_reply_serial","qualname":"<Message>::get_reply_serial","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the serial of the message this message is a reply to, if present.\n","sig":null,"attributes":[{"value":"/ Get the serial of the message this message is a reply to, if present.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8098,"byte_end":8171,"line_start":150,"line_end":150,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8420,"byte_end":8432,"line_start":157,"line_end":157,"column_start":12,"column_end":24},"name":"get_no_reply","qualname":"<Message>::get_no_reply","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message does not expect a reply.\n","sig":null,"attributes":[{"value":"/ Returns true if the message does not expect a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8352,"byte_end":8408,"line_start":156,"line_end":156,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8656,"byte_end":8668,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"set_no_reply","qualname":"<Message>::set_no_reply","value":"fn (&mut self, v: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the message expects a reply.","sig":null,"attributes":[{"value":"/ Set whether or not the message expects a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8514,"byte_end":8565,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8570,"byte_end":8573,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Set to true if you send a method call and do not want a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8578,"byte_end":8644,"line_start":161,"line_end":161,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8868,"byte_end":8882,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"get_auto_start","qualname":"<Message>::get_auto_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message can cause a service to be auto-started.\n","sig":null,"attributes":[{"value":"/ Returns true if the message can cause a service to be auto-started.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8785,"byte_end":8856,"line_start":166,"line_end":166,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9087,"byte_end":9101,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"set_auto_start","qualname":"<Message>::set_auto_start","value":"fn (&mut self, v: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the message can cause a service to be auto-started.","sig":null,"attributes":[{"value":"/ Sets whether or not the message can cause a service to be auto-started.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":8966,"byte_end":9041,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9046,"byte_end":9049,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Defaults to true.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9054,"byte_end":9075,"line_start":171,"line_end":171,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9450,"byte_end":9462,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"append_items","qualname":"<Message>::append_items","value":"fn (&mut self, v: &[crate::arg::messageitem::MessageItem]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add one or more MessageItems to this Message.","sig":null,"attributes":[{"value":"/ Add one or more MessageItems to this Message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9220,"byte_end":9269,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9274,"byte_end":9277,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note: using `append1`, `append2` or `append3` might be faster, especially for large arrays.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9282,"byte_end":9377,"line_start":178,"line_end":178,"column_start":5,"column_end":100}},{"value":"/ This method is provided for backwards compatibility.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9382,"byte_end":9438,"line_start":179,"line_end":179,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9745,"byte_end":9752,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"append1","qualname":"<Message>::append1","value":"fn <A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends one argument to this message.\n Use in builder style: e g `m.method_return().append1(7i32)`\n","sig":null,"attributes":[{"value":"/ Appends one argument to this message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9624,"byte_end":9665,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ Use in builder style: e g `m.method_return().append1(7i32)`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9670,"byte_end":9733,"line_start":186,"line_end":186,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10038,"byte_end":10045,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"append2","qualname":"<Message>::append2","value":"fn <A1, A2> (mut self, a1: A1, a2: A2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends two arguments to this message.\n Use in builder style: e g `m.method_return().append2(7i32, 6u8)`\n","sig":null,"attributes":[{"value":"/ Appends two arguments to this message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9911,"byte_end":9953,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ Use in builder style: e g `m.method_return().append2(7i32, 6u8)`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":9958,"byte_end":10026,"line_start":196,"line_end":196,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10377,"byte_end":10384,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"append3","qualname":"<Message>::append3","value":"fn <A1, A2, A3> (mut self, a1: A1, a2: A2, a3: A3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends three arguments to this message.\n Use in builder style: e g `m.method_return().append3(7i32, 6u8, true)`\n","sig":null,"attributes":[{"value":"/ Appends three arguments to this message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10242,"byte_end":10286,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/ Use in builder style: e g `m.method_return().append3(7i32, 6u8, true)`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10291,"byte_end":10365,"line_start":206,"line_end":206,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10748,"byte_end":10758,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"append_ref","qualname":"<Message>::append_ref","value":"fn <A> (mut self, r: &[A]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends RefArgs to this message.\n Use in builder style: e g `m.method_return().append_ref(&[7i32, 6u8, true])`\n","sig":null,"attributes":[{"value":"/ Appends RefArgs to this message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10615,"byte_end":10651,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"/ Use in builder style: e g `m.method_return().append_ref(&[7i32, 6u8, true])`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10656,"byte_end":10736,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11017,"byte_end":11027,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"append_all","qualname":"<Message>::append_all","value":"fn <A> (&mut self, a: A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends arguments to a message.\n","sig":null,"attributes":[{"value":"/ Appends arguments to a message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":10970,"byte_end":11005,"line_start":227,"line_end":227,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11311,"byte_end":11315,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"get1","qualname":"<Message>::get1","value":"fn <'a, G1> (&'a self) -> Option<G1>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first argument from the message, if that argument is of type G1.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first argument from the message, if that argument is of type G1.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11141,"byte_end":11218,"line_start":233,"line_end":233,"column_start":5,"column_end":82}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11223,"byte_end":11299,"line_start":234,"line_end":234,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11609,"byte_end":11613,"line_start":242,"line_end":242,"column_start":12,"column_end":16},"name":"get2","qualname":"<Message>::get2","value":"fn <'a, G1, G2> (&'a self) -> (Option<G1>, Option<G2>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first two arguments from the message, if those arguments are of type G1 and G2.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first two arguments from the message, if those arguments are of type G1 and G2.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11424,"byte_end":11516,"line_start":240,"line_end":240,"column_start":5,"column_end":97}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11521,"byte_end":11597,"line_start":241,"line_end":241,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":12016,"byte_end":12020,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"get3","qualname":"<Message>::get3","value":"fn <'a, G1, G2, G3> (&'a self) -> (Option<G1>, Option<G2>, Option<G3>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11825,"byte_end":11923,"line_start":249,"line_end":249,"column_start":5,"column_end":103}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":11928,"byte_end":12004,"line_start":250,"line_end":250,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":12533,"byte_end":12537,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"get4","qualname":"<Message>::get4","value":"fn <'a, G1, G2, G3, G4> (&'a self) -> (Option<G1>, Option<G2>, Option<G3>, Option<G4>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":12339,"byte_end":12440,"line_start":260,"line_end":260,"column_start":5,"column_end":106}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":12445,"byte_end":12521,"line_start":261,"line_end":261,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13245,"byte_end":13249,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"get5","qualname":"<Message>::get5","value":"fn <'a, G1, G2, G3, G4, G5> (&'a self) -> (Option<G1>, Option<G2>, Option<G3>, Option<G4>, Option<G5>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first five arguments from the message, if those arguments are of type G1, G2, G3 and G4.\n Returns None if there are not enough arguments, or if types don't match.\n Note: If you need more than five arguments, use `iter_init` instead.\n","sig":null,"attributes":[{"value":"/ Gets the first five arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":12974,"byte_end":13075,"line_start":273,"line_end":273,"column_start":5,"column_end":106}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13080,"byte_end":13156,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ Note: If you need more than five arguments, use `iter_init` instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13161,"byte_end":13233,"line_start":275,"line_end":275,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14007,"byte_end":14012,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"read1","qualname":"<Message>::read1","value":"fn <'a, G1> (&'a self) -> Result<G1, TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first argument from the message, if that argument is of type G1.","sig":null,"attributes":[{"value":"/ Gets the first argument from the message, if that argument is of type G1.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13814,"byte_end":13891,"line_start":289,"line_end":289,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13896,"byte_end":13899,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":13904,"byte_end":13995,"line_start":291,"line_end":291,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14355,"byte_end":14360,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"read2","qualname":"<Message>::read2","value":"fn <'a, G1, G2> (&'a self) -> Result<(G1, G2), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first two arguments from the message, if those arguments are of type G1 and G2.","sig":null,"attributes":[{"value":"/ Gets the first two arguments from the message, if those arguments are of type G1 and G2.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14147,"byte_end":14239,"line_start":297,"line_end":297,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14244,"byte_end":14247,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14252,"byte_end":14343,"line_start":299,"line_end":299,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14752,"byte_end":14757,"line_start":308,"line_end":308,"column_start":12,"column_end":17},"name":"read3","qualname":"<Message>::read3","value":"fn <'a, G1, G2, G3> (&'a self) -> Result<(G1, G2, G3), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","sig":null,"attributes":[{"value":"/ Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14538,"byte_end":14636,"line_start":305,"line_end":305,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14641,"byte_end":14644,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14649,"byte_end":14740,"line_start":307,"line_end":307,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15194,"byte_end":15199,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"read4","qualname":"<Message>::read4","value":"fn <'a, G1, G2, G3, G4> (&'a self) -> Result<(G1, G2, G3, G4), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","sig":null,"attributes":[{"value":"/ Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":14977,"byte_end":15078,"line_start":314,"line_end":314,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15083,"byte_end":15086,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15091,"byte_end":15182,"line_start":316,"line_end":316,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15751,"byte_end":15756,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"read5","qualname":"<Message>::read5","value":"fn <'a, G1, G2, G3, G4, G5> (&'a self) -> Result<(G1, G2, G3, G4, G5), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first five arguments from the message, if those arguments are of type G1, G2, G3, G4 and G5.","sig":null,"attributes":[{"value":"/ Gets the first five arguments from the message, if those arguments are of type G1, G2, G3, G4 and G5.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15453,"byte_end":15558,"line_start":323,"line_end":323,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15563,"byte_end":15566,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15571,"byte_end":15662,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/ Note: If you need more than five arguments, use `iter_init` instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":15667,"byte_end":15739,"line_start":326,"line_end":326,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16177,"byte_end":16185,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"read_all","qualname":"<Message>::read_all","value":"fn <R> (&self) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets arguments from a message.","sig":null,"attributes":[{"value":"/ Gets arguments from a message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16044,"byte_end":16078,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16083,"byte_end":16086,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If this was an error reply or if types mismatch, an error is returned.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16091,"byte_end":16165,"line_start":335,"line_end":335,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16419,"byte_end":16428,"line_start":342,"line_end":342,"column_start":12,"column_end":21},"name":"iter_init","qualname":"<Message>::iter_init","value":"fn (&self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns a struct for retreiving the arguments from a message. Supersedes get_items().\n","sig":null,"attributes":[{"value":"/ Returns a struct for retreiving the arguments from a message. Supersedes get_items().","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16318,"byte_end":16407,"line_start":341,"line_end":341,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16522,"byte_end":16530,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"msg_type","qualname":"<Message>::msg_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" Gets the MessageType of the Message.\n","sig":null,"attributes":[{"value":"/ Gets the MessageType of the Message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":16470,"byte_end":16510,"line_start":344,"line_end":344,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17129,"byte_end":17135,"line_start":361,"line_end":361,"column_start":12,"column_end":18},"name":"sender","qualname":"<Message>::sender","value":"fn (&self) -> Option<BusName>","parent":null,"children":[],"decl_id":null,"docs":" Gets the name of the connection that originated this message.\n","sig":null,"attributes":[{"value":"/ Gets the name of the connection that originated this message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17052,"byte_end":17117,"line_start":360,"line_end":360,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17438,"byte_end":17445,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"headers","qualname":"<Message>::headers","value":"fn (&self) -> (MessageType, Option<String>, Option<String>, Option<String>)","parent":null,"children":[],"decl_id":null,"docs":" Returns a tuple of (Message type, Path, Interface, Member) of the current message.\n","sig":null,"attributes":[{"value":"/ Returns a tuple of (Message type, Path, Interface, Member) of the current message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17322,"byte_end":17408,"line_start":366,"line_end":366,"column_start":5,"column_end":91}},{"value":"deprecated","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17413,"byte_end":17426,"line_start":367,"line_end":367,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17982,"byte_end":17986,"line_start":379,"line_end":379,"column_start":12,"column_end":16},"name":"path","qualname":"<Message>::path","value":"fn (&self) -> Option<Path>","parent":null,"children":[],"decl_id":null,"docs":" Gets the object path this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the object path this Message is being sent to.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":17915,"byte_end":17970,"line_start":378,"line_end":378,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18232,"byte_end":18243,"line_start":385,"line_end":385,"column_start":12,"column_end":23},"name":"destination","qualname":"<Message>::destination","value":"fn (&self) -> Option<BusName>","parent":null,"children":[],"decl_id":null,"docs":" Gets the destination this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the destination this Message is being sent to.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18165,"byte_end":18220,"line_start":384,"line_end":384,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18571,"byte_end":18586,"line_start":393,"line_end":393,"column_start":12,"column_end":27},"name":"set_destination","qualname":"<Message>::set_destination","value":"fn (&mut self, dest: Option<BusName>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the destination of this Message","sig":null,"attributes":[{"value":"/ Sets the destination of this Message","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18435,"byte_end":18475,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18480,"byte_end":18483,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If dest is none, that means broadcast to all relevant destinations.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18488,"byte_end":18559,"line_start":392,"line_end":392,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18874,"byte_end":18883,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"interface","qualname":"<Message>::interface","value":"fn (&self) -> Option<Interface>","parent":null,"children":[],"decl_id":null,"docs":" Gets the interface this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the interface this Message is being sent to.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":18809,"byte_end":18862,"line_start":398,"line_end":398,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19132,"byte_end":19138,"line_start":405,"line_end":405,"column_start":12,"column_end":18},"name":"member","qualname":"<Message>::member","value":"fn (&self) -> Option<Member>","parent":null,"children":[],"decl_id":null,"docs":" Gets the interface member being called.\n","sig":null,"attributes":[{"value":"/ Gets the interface member being called.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19077,"byte_end":19120,"line_start":404,"line_end":404,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19560,"byte_end":19569,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"as_result","qualname":"<Message>::as_result","value":"fn (&mut self) -> Result<&mut Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" When the remote end returns an error, the message itself is\n correct but its contents is an error. This method will\n transform such an error to a D-Bus Error or otherwise return\n the original message.\n","sig":null,"attributes":[{"value":"/ When the remote end returns an error, the message itself is","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19323,"byte_end":19386,"line_start":410,"line_end":410,"column_start":5,"column_end":68}},{"value":"/ correct but its contents is an error. This method will","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19391,"byte_end":19449,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"/ transform such an error to a D-Bus Error or otherwise return","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19454,"byte_end":19518,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ the original message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":19523,"byte_end":19548,"line_start":413,"line_end":413,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20466,"byte_end":20476,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"set_serial","qualname":"<Message>::set_serial","value":"fn (&mut self, val: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets serial number manually - should not be used in production code","sig":null,"attributes":[{"value":"/ Sets serial number manually - should not be used in production code","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20173,"byte_end":20244,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20249,"byte_end":20252,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ However, this can be very useful in test code that is supposed to handle a method call.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20257,"byte_end":20348,"line_start":435,"line_end":435,"column_start":5,"column_end":96}},{"value":"/ This way, you can create a method call and handle it without sending it to a real D-Bus instance.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20353,"byte_end":20454,"line_start":436,"line_end":436,"column_start":5,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffidisp","qualname":"::ffidisp","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":323},{"krate":0,"index":446},{"krate":0,"index":2536},{"krate":0,"index":2547},{"krate":0,"index":2543},{"krate":0,"index":449},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":2604},{"krate":0,"index":2627},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2619},{"krate":0,"index":2617},{"krate":0,"index":2616},{"krate":0,"index":2614},{"krate":0,"index":516},{"krate":0,"index":2629},{"krate":0,"index":2641},{"krate":0,"index":518},{"krate":0,"index":2643},{"krate":0,"index":2654},{"krate":0,"index":2652},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":2656},{"krate":0,"index":2662},{"krate":0,"index":2660},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":531}],"decl_id":null,"docs":" A connection that uses FFI callbacks to dispatch messages.","sig":null,"attributes":[{"value":"! A connection that uses FFI callbacks to dispatch messages.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":30958,"byte_end":31020,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31021,"byte_end":31024,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This is the legacy design used up to 0.6.x. It is not recommended for new development.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31025,"byte_end":31115,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":241},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stdintf","qualname":"::ffidisp::stdintf","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" This module contains some standard interfaces and an easy way to call them.","sig":null,"attributes":[{"value":"! This module contains some standard interfaces and an easy way to call them.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42320,"byte_end":42399,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42400,"byte_end":42403,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces) for more information about these standard interfaces.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42404,"byte_end":42569,"line_start":3,"line_end":3,"column_start":1,"column_end":166}},{"value":"! ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42570,"byte_end":42574,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"! The code here was originally created by dbus-codegen.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42575,"byte_end":42632,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42633,"byte_end":42636,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42637,"byte_end":42650,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"! ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42651,"byte_end":42658,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"! use dbus::ffidisp::{Connection, BusType};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42659,"byte_end":42704,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"! use dbus::ffidisp::stdintf::org_freedesktop_dbus::Introspectable;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42705,"byte_end":42774,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"! let c = Connection::get_private(BusType::Session).unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42775,"byte_end":42838,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"! let p = c.with_path(\"org.freedesktop.DBus\", \"/\", 10000);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42839,"byte_end":42899,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"! println!(\"Introspection XML: {}\", p.introspect().unwrap());","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42900,"byte_end":42963,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"! ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42964,"byte_end":42971,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42972,"byte_end":42975,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"allow(missing_docs)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":42977,"byte_end":43000,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":246},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43336,"byte_end":43356,"line_start":27,"line_end":27,"column_start":9,"column_end":29},"name":"org_freedesktop_dbus","qualname":"::ffidisp::stdintf::org_freedesktop_dbus","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":260},{"krate":0,"index":268},{"krate":0,"index":2504},{"krate":0,"index":2510},{"krate":0,"index":2508},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":2512},{"krate":0,"index":2517},{"krate":0,"index":2515},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":2519},{"krate":0,"index":2524},{"krate":0,"index":2522},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":251},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43567,"byte_end":43581,"line_start":32,"line_end":32,"column_start":11,"column_end":25},"name":"Introspectable","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable","value":"Introspectable","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" Method of the [org.freedesktop.DBus.Introspectable](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-introspectable) interface.\n","sig":null,"attributes":[{"value":"/ Method of the [org.freedesktop.DBus.Introspectable](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-introspectable) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43397,"byte_end":43556,"line_start":31,"line_end":31,"column_start":1,"column_end":160}}]},{"kind":"Type","id":{"krate":0,"index":252},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43593,"byte_end":43596,"line_start":33,"line_end":33,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable::Err","value":"type Err;","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43605,"byte_end":43615,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"introspect","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable::introspect","value":"fn (&self) -> Result<String, Self::Err>","parent":{"krate":0,"index":251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44266,"byte_end":44276,"line_start":51,"line_end":51,"column_start":11,"column_end":21},"name":"Properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties","value":"Properties","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266}],"decl_id":null,"docs":" Methods of the [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.\n","sig":null,"attributes":[{"value":"/ Methods of the [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44103,"byte_end":44255,"line_start":50,"line_end":50,"column_start":1,"column_end":153}}]},{"kind":"Type","id":{"krate":0,"index":261},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44288,"byte_end":44291,"line_start":52,"line_end":52,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::Err","value":"type Err;","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44300,"byte_end":44303,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"get","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::get","value":"fn <R0> (&self, interface_name: &str, property_name: &str) -> Result<R0, Self::Err>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44413,"byte_end":44420,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"get_all","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::get_all","value":"fn (&self, interface_name: &str) -> Result<::std::collections::HashMap<String,\n                                   arg::Variant<Box<dyn arg::RefArg>>>,\n       Self::Err>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44552,"byte_end":44555,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"set","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::set","value":"fn <I2> (&self, interface_name: &str, property_name: &str, value: I2) -> Result<(), Self::Err>","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2504},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46570,"byte_end":46597,"line_start":99,"line_end":99,"column_start":12,"column_end":39},"name":"PropertiesPropertiesChanged","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged","value":"PropertiesPropertiesChanged { interface_name, changed_properties, invalidated_properties }","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507}],"decl_id":null,"docs":" Struct to send/receive the PropertiesChanged signal of the\n [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the PropertiesChanged signal of the","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46358,"byte_end":46420,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/ [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46421,"byte_end":46558,"line_start":98,"line_end":98,"column_start":1,"column_end":138}}]},{"kind":"Field","id":{"krate":0,"index":2505},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46608,"byte_end":46622,"line_start":100,"line_end":100,"column_start":9,"column_end":23},"name":"interface_name","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::interface_name","value":"std::string::String","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2506},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46640,"byte_end":46658,"line_start":101,"line_end":101,"column_start":9,"column_end":27},"name":"changed_properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::changed_properties","value":"std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2507},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46741,"byte_end":46763,"line_start":102,"line_end":102,"column_start":9,"column_end":31},"name":"invalidated_properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::invalidated_properties","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":288},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47734,"byte_end":47747,"line_start":129,"line_end":129,"column_start":11,"column_end":24},"name":"ObjectManager","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager","value":"ObjectManager","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" Method of the [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Method of the [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47566,"byte_end":47723,"line_start":128,"line_end":128,"column_start":1,"column_end":158}}]},{"kind":"Type","id":{"krate":0,"index":289},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47759,"byte_end":47762,"line_start":130,"line_end":130,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager::Err","value":"type Err;","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47771,"byte_end":47790,"line_start":131,"line_end":131,"column_start":8,"column_end":27},"name":"get_managed_objects","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager::get_managed_objects","value":"fn (&self) -> Result<::std::collections::HashMap<crate::Path<'static>,\n                                   ::std::collections::HashMap<String,\n                                                               ::std::collections::HashMap<String,\n                                                                                           arg::Variant<Box<dyn arg::RefArg>>>>>,\n       Self::Err>","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2512},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49001,"byte_end":49029,"line_start":150,"line_end":150,"column_start":12,"column_end":40},"name":"ObjectManagerInterfacesAdded","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded","value":"ObjectManagerInterfacesAdded { object, interfaces }","parent":null,"children":[{"krate":0,"index":2513},{"krate":0,"index":2514}],"decl_id":null,"docs":" Struct to send/receive the InterfacesAdded signal of the\n [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the InterfacesAdded signal of the","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":48785,"byte_end":48845,"line_start":148,"line_end":148,"column_start":1,"column_end":61}},{"value":"/ [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":48846,"byte_end":48989,"line_start":149,"line_end":149,"column_start":1,"column_end":144}}]},{"kind":"Field","id":{"krate":0,"index":2513},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49040,"byte_end":49046,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"name":"object","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2514},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49078,"byte_end":49088,"line_start":152,"line_end":152,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::interfaces","value":"std::collections::HashMap<std::string::String, std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>>","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2519},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50096,"byte_end":50126,"line_start":179,"line_end":179,"column_start":12,"column_end":42},"name":"ObjectManagerInterfacesRemoved","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved","value":"ObjectManagerInterfacesRemoved { object, interfaces }","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521}],"decl_id":null,"docs":" Struct to send/receive the InterfacesRemoved signal of the\n [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the InterfacesRemoved signal of the","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49878,"byte_end":49940,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/ [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49941,"byte_end":50084,"line_start":178,"line_end":178,"column_start":1,"column_end":144}}]},{"kind":"Field","id":{"krate":0,"index":2520},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50137,"byte_end":50143,"line_start":180,"line_end":180,"column_start":9,"column_end":15},"name":"object","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50175,"byte_end":50185,"line_start":181,"line_end":181,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::interfaces","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51013,"byte_end":51017,"line_start":206,"line_end":206,"column_start":11,"column_end":15},"name":"Peer","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer","value":"Peer","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Methods of the [org.freedesktop.DBus.Peer](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-peer) interface.\n","sig":null,"attributes":[{"value":"/ Methods of the [org.freedesktop.DBus.Peer](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-peer) interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50862,"byte_end":51002,"line_start":205,"line_end":205,"column_start":1,"column_end":141}}]},{"kind":"Type","id":{"krate":0,"index":312},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51029,"byte_end":51032,"line_start":207,"line_end":207,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::Err","value":"type Err;","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51041,"byte_end":51045,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"ping","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::ping","value":"fn (&self) -> Result<(), Self::Err>","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51086,"byte_end":51100,"line_start":209,"line_end":209,"column_start":8,"column_end":22},"name":"get_machine_id","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::get_machine_id","value":"fn (&self) -> Result<String, Self::Err>","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":52912,"byte_end":52922,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"Connection","qualname":"::ffidisp::connection::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" A D-Bus connection. Start here if you want to get on the D-Bus!\n","sig":null,"attributes":[{"value":"/ A D-Bus connection. Start here if you want to get on the D-Bus!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":52833,"byte_end":52900,"line_start":27,"line_end":27,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56009,"byte_end":56020,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"new_session","qualname":"<Connection>::new_session","value":"fn () -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection to the session bus.","sig":null,"attributes":[{"value":"/ Creates a new connection to the session bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":55880,"byte_end":55928,"line_start":110,"line_end":110,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":55933,"byte_end":55936,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Just a shortcut for `get_private(BusType::Session)`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":55941,"byte_end":55997,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56224,"byte_end":56234,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"new_system","qualname":"<Connection>::new_system","value":"fn () -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection to the system bus.","sig":null,"attributes":[{"value":"/ Creates a new connection to the system bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56097,"byte_end":56144,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56149,"byte_end":56152,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Just a shortcut for `get_private(BusType::System)`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56157,"byte_end":56212,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56357,"byte_end":56368,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"get_private","qualname":"<Connection>::get_private","value":"fn (bus: BusType) -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection.\n","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56310,"byte_end":56345,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56808,"byte_end":56820,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"open_private","qualname":"<Connection>::open_private","value":"fn (address: &str) -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection to a remote address.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection to a remote address.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56634,"byte_end":56689,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56694,"byte_end":56697,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Note: for all common cases (System / Session bus) you probably want \"get_private\" instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":56702,"byte_end":56796,"line_start":132,"line_end":132,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57268,"byte_end":57276,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"register","qualname":"<Connection>::register","value":"fn (&self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new D-Bus connection with the bus.","sig":null,"attributes":[{"value":"/ Registers a new D-Bus connection with the bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57118,"byte_end":57168,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57173,"byte_end":57176,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note: `get_private` does this automatically, useful with `open_private`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57181,"byte_end":57256,"line_start":144,"line_end":144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57559,"byte_end":57571,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"is_connected","qualname":"<Connection>::is_connected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the connection is currently open.\n","sig":null,"attributes":[{"value":"/ Gets whether the connection is currently open.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57497,"byte_end":57547,"line_start":154,"line_end":154,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57791,"byte_end":57816,"line_start":161,"line_end":161,"column_start":12,"column_end":37},"name":"send_with_reply_and_block","qualname":"<Connection>::send_with_reply_and_block","value":"fn (&self, msg: Message, timeout_ms: i32) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and waits for a reply.\n This is usually used for method calls.\n","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and waits for a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57675,"byte_end":57732,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/ This is usually used for method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":57737,"byte_end":57779,"line_start":160,"line_end":160,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58337,"byte_end":58341,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"send","qualname":"<Connection>::send","value":"fn (&self, msg: Message) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus without waiting. Useful for sending signals and method call replies.\n","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus without waiting. Useful for sending signals and method call replies.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58222,"byte_end":58325,"line_start":173,"line_end":173,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58843,"byte_end":58858,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"send_with_reply","qualname":"<Connection>::send_with_reply","value":"fn <'a, F> (&self, msg: Message, f: F) -> Result<MessageReply<F>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus, returning a MessageReply.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus, returning a MessageReply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58633,"byte_end":58694,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58699,"byte_end":58702,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Call add_handler on the result to start waiting for reply. This should be done before next call to `incoming` or `iter`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":58707,"byte_end":58831,"line_start":184,"line_end":184,"column_start":5,"column_end":129}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59822,"byte_end":59833,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"add_handler","qualname":"<Connection>::add_handler","value":"fn <H> (&self, h: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a message handler to the connection.","sig":null,"attributes":[{"value":"/ Adds a message handler to the connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59055,"byte_end":59100,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59105,"byte_end":59108,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59113,"byte_end":59126,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59131,"byte_end":59134,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59139,"byte_end":59146,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use std::{cell, rc};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59151,"byte_end":59175,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/ use dbus::{ffidisp::Connection, Message};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59180,"byte_end":59225,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59230,"byte_end":59233,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59238,"byte_end":59285,"line_start":198,"line_end":198,"column_start":5,"column_end":52}},{"value":"/ let m = Message::new_method_call(\"org.freedesktop.DBus\", \"/\", \"org.freedesktop.DBus\", \"ListNames\").unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59290,"byte_end":59402,"line_start":199,"line_end":199,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59407,"byte_end":59410,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let done: rc::Rc<cell::Cell<bool>> = Default::default();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59415,"byte_end":59475,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ let done2 = done.clone();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59480,"byte_end":59509,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ c.add_handler(c.send_with_reply(m, move |reply| {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59514,"byte_end":59567,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/     let v: Vec<&str> = reply.unwrap().read1().unwrap(); ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59572,"byte_end":59632,"line_start":204,"line_end":204,"column_start":5,"column_end":65}},{"value":"/     println!(\"The names on the D-Bus are: {:?}\", v);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59637,"byte_end":59693,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/     done2.set(true);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59698,"byte_end":59722,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/ }).unwrap());","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59727,"byte_end":59744,"line_start":207,"line_end":207,"column_start":5,"column_end":22}},{"value":"/ while !done.get() { c.incoming(100).next(); }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59749,"byte_end":59798,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59803,"byte_end":59810,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60366,"byte_end":60381,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"extract_handler","qualname":"<Connection>::extract_handler","value":"fn (&self) -> Option<Box<dyn MsgHandler>>","parent":null,"children":[],"decl_id":null,"docs":" Removes a MsgHandler from the connection.","sig":null,"attributes":[{"value":"/ Removes a MsgHandler from the connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":59960,"byte_end":60005,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60010,"byte_end":60013,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If there are many MsgHandlers, it is not specified which one will be returned.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60018,"byte_end":60100,"line_start":217,"line_end":217,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60105,"byte_end":60108,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ There might be more methods added later on, which give better ways to deal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60113,"byte_end":60191,"line_start":219,"line_end":219,"column_start":5,"column_end":83}},{"value":"/ with the list of MsgHandler currently on the connection. If this would help you,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60196,"byte_end":60280,"line_start":220,"line_end":220,"column_start":5,"column_end":89}},{"value":"/ please [file an issue](https://github.com/diwic/dbus-rs/issues). ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60285,"byte_end":60354,"line_start":221,"line_end":221,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60525,"byte_end":60536,"line_start":227,"line_end":227,"column_start":12,"column_end":23},"name":"unique_name","qualname":"<Connection>::unique_name","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the connection's unique name.\n","sig":null,"attributes":[{"value":"/ Get the connection's unique name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60476,"byte_end":60513,"line_start":226,"line_end":226,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60911,"byte_end":60915,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"iter","qualname":"<Connection>::iter","value":"fn (&self, timeout_ms: i32) -> ConnectionItems","parent":null,"children":[],"decl_id":null,"docs":" Check if there are new incoming events","sig":null,"attributes":[{"value":"/ Check if there are new incoming events","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60691,"byte_end":60733,"line_start":232,"line_end":232,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60738,"byte_end":60741,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If there are no incoming events, ConnectionItems::Nothing will be returned.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60746,"byte_end":60825,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ See ConnectionItems::new if you want to customize this behaviour.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":60830,"byte_end":60899,"line_start":235,"line_end":235,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61121,"byte_end":61129,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Connection>::incoming","value":"fn (&self, timeout_ms: u32) -> ConnMsgs<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Check if there are new incoming events","sig":null,"attributes":[{"value":"/ Check if there are new incoming events","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61032,"byte_end":61074,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61079,"byte_end":61082,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Supersedes \"iter\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61087,"byte_end":61109,"line_start":242,"line_end":242,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61289,"byte_end":61309,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"register_object_path","qualname":"<Connection>::register_object_path","value":"fn (&self, path: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Register an object path.\n","sig":null,"attributes":[{"value":"/ Register an object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":61249,"byte_end":61277,"line_start":247,"line_end":247,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":62048,"byte_end":62070,"line_start":267,"line_end":267,"column_start":12,"column_end":34},"name":"unregister_object_path","qualname":"<Connection>::unregister_object_path","value":"fn (&self, path: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unregister an object path.\n","sig":null,"attributes":[{"value":"/ Unregister an object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":62006,"byte_end":62036,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":62324,"byte_end":62352,"line_start":274,"line_end":274,"column_start":12,"column_end":40},"name":"list_registered_object_paths","qualname":"<Connection>::list_registered_object_paths","value":"fn (&self, path: &str) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" List registered object paths.\n","sig":null,"attributes":[{"value":"/ List registered object paths.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":62279,"byte_end":62312,"line_start":273,"line_end":273,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63083,"byte_end":63096,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"register_name","qualname":"<Connection>::register_name","value":"fn (&self, name: &str, flags: u32) -> Result<super::RequestNameReply, Error>","parent":null,"children":[],"decl_id":null,"docs":" Register a name.\n","sig":null,"attributes":[{"value":"/ Register a name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63051,"byte_end":63071,"line_start":294,"line_end":294,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63454,"byte_end":63466,"line_start":303,"line_end":303,"column_start":12,"column_end":24},"name":"release_name","qualname":"<Connection>::release_name","value":"fn (&self, name: &str) -> Result<super::ReleaseNameReply, Error>","parent":null,"children":[],"decl_id":null,"docs":" Release a name.\n","sig":null,"attributes":[{"value":"/ Release a name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63423,"byte_end":63442,"line_start":302,"line_end":302,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64112,"byte_end":64121,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"add_match","qualname":"<Connection>::add_match","value":"fn (&self, rule: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a match rule to match messages on the message bus.","sig":null,"attributes":[{"value":"/ Add a match rule to match messages on the message bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63774,"byte_end":63832,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63837,"byte_end":63840,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ See the `unity_focused_window` example for how to use this to catch signals.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63845,"byte_end":63925,"line_start":312,"line_end":312,"column_start":5,"column_end":85}},{"value":"/ (The syntax of the \"rule\" string is specified in the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#message-bus-routing-match-rules).)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":63930,"byte_end":64100,"line_start":313,"line_end":313,"column_start":5,"column_end":175}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64455,"byte_end":64467,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"remove_match","qualname":"<Connection>::remove_match","value":"fn (&self, rule: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Remove a match rule to match messages on the message bus.\n","sig":null,"attributes":[{"value":"/ Remove a match rule to match messages on the message bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64382,"byte_end":64443,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64865,"byte_end":64874,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"watch_fds","qualname":"<Connection>::watch_fds","value":"fn (&self) -> Vec<Watch>","parent":null,"children":[],"decl_id":null,"docs":" Async I/O: Get an up-to-date list of file descriptors to watch.","sig":null,"attributes":[{"value":"/ Async I/O: Get an up-to-date list of file descriptors to watch.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64731,"byte_end":64798,"line_start":329,"line_end":329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64803,"byte_end":64806,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See the `Watch` struct for an example.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64811,"byte_end":64853,"line_start":331,"line_end":331,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65244,"byte_end":65256,"line_start":341,"line_end":341,"column_start":12,"column_end":24},"name":"watch_handle","qualname":"<Connection>::watch_handle","value":"fn (&self, fd: RawFd, flags: c_uint) -> ConnectionItems","parent":null,"children":[],"decl_id":null,"docs":" Async I/O: Call this function whenever you detected an event on the Fd,\n Flags are a set of WatchEvent bits.\n The returned iterator will return pending items only, never block for new events.","sig":null,"attributes":[{"value":"/ Async I/O: Call this function whenever you detected an event on the Fd,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":64968,"byte_end":65043,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ Flags are a set of WatchEvent bits.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65048,"byte_end":65087,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ The returned iterator will return pending items only, never block for new events.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65092,"byte_end":65177,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65182,"byte_end":65185,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ See the `Watch` struct for an example.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65190,"byte_end":65232,"line_start":340,"line_end":340,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65548,"byte_end":65557,"line_start":348,"line_end":348,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Connection>::with_path","value":"fn <'a, D, P> (&'a self, dest: D, path: P, timeout_ms: i32) -> ConnPath<'a, &'a Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a convenience struct for easier calling of many methods on the same destination and path.\n","sig":null,"attributes":[{"value":"/ Create a convenience struct for easier calling of many methods on the same destination and path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65436,"byte_end":65536,"line_start":347,"line_end":347,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68867,"byte_end":68891,"line_start":421,"line_end":421,"column_start":12,"column_end":36},"name":"replace_message_callback","qualname":"<Connection>::replace_message_callback","value":"fn (&self, f: Option<MessageCallback>) -> Option<MessageCallback>","parent":null,"children":[],"decl_id":null,"docs":" Replace the default message callback. Returns the previously set callback.","sig":null,"attributes":[{"value":"/ Replace the default message callback. Returns the previously set callback.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65792,"byte_end":65870,"line_start":353,"line_end":353,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65875,"byte_end":65878,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ By default, when you call ConnectionItems::next, all relevant incoming messages","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65883,"byte_end":65966,"line_start":355,"line_end":355,"column_start":5,"column_end":88}},{"value":"/ are returned through the ConnectionItems iterator, and ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":65971,"byte_end":66030,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ irrelevant messages are passed on to libdbus's default handler.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66035,"byte_end":66102,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/ If you need to customize this behaviour (i e, to handle all incoming messages yourself),","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66107,"byte_end":66199,"line_start":358,"line_end":358,"column_start":5,"column_end":97}},{"value":"/ you can set this message callback yourself. A few caveats apply:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66204,"byte_end":66272,"line_start":359,"line_end":359,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66277,"byte_end":66280,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Return true from the callback to disable libdbus's internal handling of the message, or","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66285,"byte_end":66376,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ false to allow it. In other words, true and false correspond to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66381,"byte_end":66448,"line_start":362,"line_end":362,"column_start":5,"column_end":72}},{"value":"/ `DBUS_HANDLER_RESULT_HANDLED` and `DBUS_HANDLER_RESULT_NOT_YET_HANDLED` respectively.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66453,"byte_end":66542,"line_start":363,"line_end":363,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66547,"byte_end":66550,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Be sure to call the previously set callback from inside your callback,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66555,"byte_end":66629,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ if you want, e.g. ConnectionItems::next to yield the message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66634,"byte_end":66699,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66704,"byte_end":66707,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ You can unset the message callback (might be useful to satisfy the borrow checker), but","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66712,"byte_end":66803,"line_start":368,"line_end":368,"column_start":5,"column_end":96}},{"value":"/ you will get a panic if you call ConnectionItems::next while the message callback is unset.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66808,"byte_end":66903,"line_start":369,"line_end":369,"column_start":5,"column_end":100}},{"value":"/ The message callback will be temporary unset while inside a message callback, so calling","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":66908,"byte_end":67000,"line_start":370,"line_end":370,"column_start":5,"column_end":97}},{"value":"/ ConnectionItems::next recursively will also result in a panic.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67005,"byte_end":67071,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67076,"byte_end":67079,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If your message callback panics, ConnectionItems::next will panic, too.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67084,"byte_end":67159,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67164,"byte_end":67167,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67172,"byte_end":67186,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67191,"byte_end":67194,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Replace the default callback with our own:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67199,"byte_end":67245,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67250,"byte_end":67253,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67258,"byte_end":67271,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use dbus::ffidisp::Connection;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67276,"byte_end":67310,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67315,"byte_end":67362,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/ // Set our callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67367,"byte_end":67390,"line_start":382,"line_end":382,"column_start":5,"column_end":28}},{"value":"/ c.replace_message_callback(Some(Box::new(move |conn, msg| {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67395,"byte_end":67458,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/     println!(\"Got message: {:?}\", msg.get_items());","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67463,"byte_end":67518,"line_start":384,"line_end":384,"column_start":5,"column_end":60}},{"value":"/     // Let libdbus handle some things by default,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67523,"byte_end":67576,"line_start":385,"line_end":385,"column_start":5,"column_end":58}},{"value":"/     // like \"nonexistent object\" error replies to method calls","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67581,"byte_end":67647,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/     false","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67652,"byte_end":67665,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ })));","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67670,"byte_end":67679,"line_start":388,"line_end":388,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67684,"byte_end":67687,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ for _ in c.iter(1000) {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67692,"byte_end":67719,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/    // Only `ConnectionItem::Nothing` would be ever yielded here.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67724,"byte_end":67792,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67797,"byte_end":67802,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67807,"byte_end":67814,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67819,"byte_end":67822,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Chain our callback to filter out some messages before `iter().next()`:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67827,"byte_end":67901,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67906,"byte_end":67909,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67914,"byte_end":67921,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use dbus::{ffidisp::Connection, MessageType};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67926,"byte_end":67975,"line_start":398,"line_end":398,"column_start":5,"column_end":54}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":67980,"byte_end":68027,"line_start":399,"line_end":399,"column_start":5,"column_end":52}},{"value":"/ // Take the previously set callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68032,"byte_end":68071,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ let mut old_cb = c.replace_message_callback(None).unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68076,"byte_end":68139,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/ // Set our callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68144,"byte_end":68167,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/ c.replace_message_callback(Some(Box::new(move |conn, msg| {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68172,"byte_end":68235,"line_start":403,"line_end":403,"column_start":5,"column_end":68}},{"value":"/     // Handle all signals on the spot","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68240,"byte_end":68281,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/     if msg.msg_type() == MessageType::Signal {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68286,"byte_end":68336,"line_start":405,"line_end":405,"column_start":5,"column_end":55}},{"value":"/         println!(\"Got signal: {:?}\", msg.get_items());","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68341,"byte_end":68399,"line_start":406,"line_end":406,"column_start":5,"column_end":63}},{"value":"/         // Stop all further processing of the message","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68404,"byte_end":68461,"line_start":407,"line_end":407,"column_start":5,"column_end":62}},{"value":"/         return true;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68466,"byte_end":68490,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68495,"byte_end":68504,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"/     // Delegate the rest of the messages to the previous callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68509,"byte_end":68578,"line_start":410,"line_end":410,"column_start":5,"column_end":74}},{"value":"/     // in chain, e.g. to have them yielded by `iter().next()`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68583,"byte_end":68648,"line_start":411,"line_end":411,"column_start":5,"column_end":70}},{"value":"/     old_cb(conn, msg)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68653,"byte_end":68678,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ })));","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68683,"byte_end":68692,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68697,"byte_end":68700,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68705,"byte_end":68721,"line_start":415,"line_end":415,"column_start":5,"column_end":21}},{"value":"/ for _ in c.iter(1000) {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68726,"byte_end":68753,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/    // `ConnectionItem::Signal` would never be yielded here.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68758,"byte_end":68821,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68826,"byte_end":68831,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68836,"byte_end":68843,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":68848,"byte_end":68855,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69776,"byte_end":69794,"line_start":437,"line_end":437,"column_start":12,"column_end":30},"name":"set_watch_callback","qualname":"<Connection>::set_watch_callback","value":"fn (&self, f: Box<dyn Fn(Watch) + Send>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called if a file descriptor status changes.","sig":null,"attributes":[{"value":"/ Sets a callback to be called if a file descriptor status changes.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69028,"byte_end":69097,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69102,"byte_end":69105,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ For async I/O. In rare cases, the number of fds to poll for read/write can change.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69110,"byte_end":69196,"line_start":427,"line_end":427,"column_start":5,"column_end":91}},{"value":"/ If this ever happens, you'll get a callback. The watch changed is provided as a parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69201,"byte_end":69295,"line_start":428,"line_end":428,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69300,"byte_end":69303,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ In rare cases this might not even happen in the thread calling anything on the connection,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69308,"byte_end":69402,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ so the callback needs to be `Send`. ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69407,"byte_end":69447,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/ A mutex is held during the callback. If you try to call set_watch_callback from a callback,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69452,"byte_end":69547,"line_start":432,"line_end":432,"column_start":5,"column_end":100}},{"value":"/ you will deadlock.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69552,"byte_end":69574,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69579,"byte_end":69582,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ (Previously, this was instead put in a ConnectionItem queue, but this was not working correctly.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69587,"byte_end":69687,"line_start":435,"line_end":435,"column_start":5,"column_end":105}},{"value":"/ see https://github.com/diwic/dbus-rs/issues/99 for additional info.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":69692,"byte_end":69764,"line_start":436,"line_end":436,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71815,"byte_end":71830,"line_start":501,"line_end":501,"column_start":12,"column_end":27},"name":"ConnectionItems","qualname":"::ffidisp::connection::ConnectionItems","value":"ConnectionItems {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":" ConnectionItem iterator\n","sig":null,"attributes":[{"value":"/ ConnectionItem iterator","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71776,"byte_end":71803,"line_start":500,"line_end":500,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72117,"byte_end":72121,"line_start":512,"line_end":512,"column_start":12,"column_end":16},"name":"with","qualname":"<ConnectionItems>::with","value":"fn <H> (mut self, h: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds a new msg handler.","sig":null,"attributes":[{"value":"/ Builder method that adds a new msg handler.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71983,"byte_end":72030,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72035,"byte_end":72038,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Note: Likely to changed/refactored/removed in next release","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72043,"byte_end":72105,"line_start":511,"line_end":511,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72794,"byte_end":72806,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"msg_handlers","qualname":"<ConnectionItems>::msg_handlers","value":"fn (&mut self) -> &mut Vec<Box<dyn MsgHandler>>","parent":null,"children":[],"decl_id":null,"docs":" Access and modify message handlers ","sig":null,"attributes":[{"value":"/ Access and modify message handlers ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72668,"byte_end":72707,"line_start":528,"line_end":528,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72712,"byte_end":72715,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Note: Likely to changed/refactored/removed in next release","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72720,"byte_end":72782,"line_start":530,"line_end":530,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73329,"byte_end":73332,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"new","qualname":"<ConnectionItems>::new","value":"fn (conn: &'a Connection, io_timeout: Option<i32>, end_on_timeout: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ConnectionItems iterator","sig":null,"attributes":[{"value":"/ Creates a new ConnectionItems iterator","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72879,"byte_end":72921,"line_start":533,"line_end":533,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72926,"byte_end":72929,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ For io_timeout, setting None means the fds will not be read/written. I e, only pending ","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":72934,"byte_end":73025,"line_start":535,"line_end":535,"column_start":5,"column_end":96}},{"value":"/ items in libdbus's internal queue will be processed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73030,"byte_end":73086,"line_start":536,"line_end":536,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73091,"byte_end":73094,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ For end_on_timeout, setting false will means that the iterator will never finish (unless","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73099,"byte_end":73191,"line_start":538,"line_end":538,"column_start":5,"column_end":97}},{"value":"/ the D-Bus server goes down). Instead, ConnectionItem::Nothing will be returned in case no","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73196,"byte_end":73289,"line_start":539,"line_end":539,"column_start":5,"column_end":98}},{"value":"/ items are in queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73294,"byte_end":73317,"line_start":540,"line_end":540,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2526},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":74958,"byte_end":74966,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"ConnMsgs","qualname":"::ffidisp::connection::ConnMsgs","value":"ConnMsgs { conn, timeout_ms }","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"decl_id":null,"docs":" Iterator over incoming messages on a connection.\n","sig":null,"attributes":[{"value":"/ Iterator over incoming messages on a connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":74870,"byte_end":74922,"line_start":579,"line_end":579,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2528},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75028,"byte_end":75032,"line_start":583,"line_end":583,"column_start":9,"column_end":13},"name":"conn","qualname":"::ffidisp::connection::ConnMsgs::conn","value":"C","parent":{"krate":0,"index":2526},"children":[],"decl_id":null,"docs":" The connection or some reference to it.\n","sig":null,"attributes":[{"value":"/ The connection or some reference to it.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":74976,"byte_end":75019,"line_start":582,"line_end":582,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2529},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75314,"byte_end":75324,"line_start":588,"line_end":588,"column_start":9,"column_end":19},"name":"timeout_ms","qualname":"::ffidisp::connection::ConnMsgs::timeout_ms","value":"std::option::Option<u32>","parent":{"krate":0,"index":2526},"children":[],"decl_id":null,"docs":" How many ms dbus should block, waiting for incoming messages until timing out.","sig":null,"attributes":[{"value":"/ How many ms dbus should block, waiting for incoming messages until timing out.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75041,"byte_end":75123,"line_start":584,"line_end":584,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75128,"byte_end":75131,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ If set to None, the dbus library will not read/write from file descriptors at all.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75136,"byte_end":75222,"line_start":586,"line_end":586,"column_start":5,"column_end":91}},{"value":"/ Instead the iterator will end when there's nothing currently in the queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75227,"byte_end":75305,"line_start":587,"line_end":587,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":2536},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31588,"byte_end":31596,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ConnPath","qualname":"::ffidisp::ConnPath","value":"ConnPath { conn, dest, path, timeout }","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542}],"decl_id":null,"docs":" A convenience struct that wraps connection, destination and path.","sig":null,"attributes":[{"value":"/ A convenience struct that wraps connection, destination and path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31400,"byte_end":31469,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31470,"byte_end":31473,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Useful if you want to make many method calls to the same destination path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31474,"byte_end":31552,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2539},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31693,"byte_end":31697,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"conn","qualname":"::ffidisp::ConnPath::conn","value":"C","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" Some way to access the connection, e g a &Connection or Rc<Connection>\n","sig":null,"attributes":[{"value":"/ Some way to access the connection, e g a &Connection or Rc<Connection>","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31610,"byte_end":31684,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2540},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31780,"byte_end":31784,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"dest","qualname":"::ffidisp::ConnPath::dest","value":"strings::BusName<'a>","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" Destination, i e what D-Bus service you're communicating with\n","sig":null,"attributes":[{"value":"/ Destination, i e what D-Bus service you're communicating with","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31706,"byte_end":31771,"line_start":25,"line_end":25,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2541},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31846,"byte_end":31850,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"path","qualname":"::ffidisp::ConnPath::path","value":"strings::Path<'a>","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" Object path on the destination\n","sig":null,"attributes":[{"value":"/ Object path on the destination","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31803,"byte_end":31837,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2542},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31928,"byte_end":31935,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"timeout","qualname":"::ffidisp::ConnPath::timeout","value":"i32","parent":{"krate":0,"index":2536},"children":[],"decl_id":null,"docs":" Timeout in milliseconds for blocking method calls\n","sig":null,"attributes":[{"value":"/ Timeout in milliseconds for blocking method calls","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31866,"byte_end":31919,"line_start":29,"line_end":29,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32109,"byte_end":32130,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"method_call_with_args","qualname":"<ConnPath>::method_call_with_args","value":"fn <F> (&self, i: &Interface, m: &Member, f: F) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a D-Bus method call, where you can append arguments inside the closure.\n","sig":null,"attributes":[{"value":"/ Make a D-Bus method call, where you can append arguments inside the closure.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32017,"byte_end":32097,"line_start":34,"line_end":34,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32480,"byte_end":32496,"line_start":42,"line_end":42,"column_start":12,"column_end":28},"name":"signal_with_args","qualname":"<ConnPath>::signal_with_args","value":"fn <F> (&self, i: &Interface, m: &Member, f: F) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Emit a D-Bus signal, where you can append arguments inside the closure.\n","sig":null,"attributes":[{"value":"/ Emit a D-Bus signal, where you can append arguments inside the closure.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32393,"byte_end":32468,"line_start":41,"line_end":41,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32832,"byte_end":32836,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"emit","qualname":"<ConnPath>::emit","value":"fn <S> (&self, signal: &S) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Emit a D-Bus signal, where the arguments are in a struct.\n","sig":null,"attributes":[{"value":"/ Emit a D-Bus signal, where the arguments are in a struct.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":32759,"byte_end":32820,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33594,"byte_end":33605,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"method_call","qualname":"<ConnPath>::method_call","value":"fn <'i, 'm, R, A, I, M> (&self, i: I, m: M, args: A) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a method call using typed input and output arguments.","sig":null,"attributes":[{"value":"/ Make a method call using typed input and output arguments.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33056,"byte_end":33118,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33123,"byte_end":33126,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33131,"byte_end":33144,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33149,"byte_end":33152,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33157,"byte_end":33164,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use dbus::ffidisp::{Connection, BusType};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33169,"byte_end":33214,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33219,"byte_end":33222,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let conn = Connection::get_private(BusType::Session)?;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33227,"byte_end":33285,"line_start":61,"line_end":61,"column_start":5,"column_end":63}},{"value":"/ let dest = conn.with_path(\"org.freedesktop.DBus\", \"/\", 5000);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33290,"byte_end":33355,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/ let (has_owner,): (bool,) = dest.method_call(\"org.freedesktop.DBus\", \"NameHasOwner\", (\"dummy.name.without.owner\",))?;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33360,"byte_end":33481,"line_start":63,"line_end":63,"column_start":5,"column_end":126}},{"value":"/ assert_eq!(has_owner, false);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33486,"byte_end":33519,"line_start":64,"line_end":64,"column_start":5,"column_end":38}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33524,"byte_end":33570,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33575,"byte_end":33582,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34130,"byte_end":34145,"line_start":79,"line_end":79,"column_start":10,"column_end":25},"name":"MessageCallback","qualname":"::ffidisp::MessageCallback","value":"Box<dyn FnMut(&Connection, Message) -> bool + 'static>","parent":null,"children":[],"decl_id":null,"docs":" The type of function to use for replacing the message callback.","sig":null,"attributes":[{"value":"/ The type of function to use for replacing the message callback.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":33960,"byte_end":34027,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34028,"byte_end":34031,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ See the documentation for Connection::replace_message_callback for more information.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34032,"byte_end":34120,"line_start":78,"line_end":78,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2552},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78431,"byte_end":78439,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Readable","qualname":"::ffidisp::watch::WatchEvent::Readable","value":"WatchEvent::Readable","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" The fd is readable\n","sig":null,"attributes":[{"value":"/ The fd is readable","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78404,"byte_end":78426,"line_start":43,"line_end":43,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2555},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78508,"byte_end":78516,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"name":"Writable","qualname":"::ffidisp::watch::WatchEvent::Writable","value":"WatchEvent::Writable","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" The fd is writable\n","sig":null,"attributes":[{"value":"/ The fd is writable","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78481,"byte_end":78503,"line_start":45,"line_end":45,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2558},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78593,"byte_end":78598,"line_start":48,"line_end":48,"column_start":5,"column_end":10},"name":"Error","qualname":"::ffidisp::watch::WatchEvent::Error","value":"WatchEvent::Error","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" An error occured on the fd\n","sig":null,"attributes":[{"value":"/ An error occured on the fd","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78558,"byte_end":78588,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2561},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78671,"byte_end":78677,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Hangup","qualname":"::ffidisp::watch::WatchEvent::Hangup","value":"WatchEvent::Hangup","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" The fd received a hangup.\n","sig":null,"attributes":[{"value":"/ The fd received a hangup.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78637,"byte_end":78666,"line_start":49,"line_end":49,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2551},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78387,"byte_end":78397,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"WatchEvent","qualname":"::ffidisp::watch::WatchEvent","value":"WatchEvent::{Readable, Writable, Error, Hangup}","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561}],"decl_id":null,"docs":" A file descriptor to watch for incoming events (for async I/O).","sig":null,"attributes":[{"value":"/ A file descriptor to watch for incoming events (for async I/O).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77319,"byte_end":77386,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77387,"byte_end":77390,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77391,"byte_end":77404,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77405,"byte_end":77412,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ extern crate libc;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77413,"byte_end":77435,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ extern crate dbus;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77436,"byte_end":77458,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ fn main() {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77459,"byte_end":77474,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/     use dbus::ffidisp::{Connection, BusType, WatchEvent};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77475,"byte_end":77536,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/     let c = Connection::get_private(BusType::Session).unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77537,"byte_end":77604,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77605,"byte_end":77608,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/     // Get a list of fds to poll for","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77609,"byte_end":77649,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/     let mut fds: Vec<_> = c.watch_fds().iter().map(|w| w.to_pollfd()).collect();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77650,"byte_end":77734,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77735,"byte_end":77738,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     // Poll them with a 1 s timeout","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77739,"byte_end":77778,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/     let r = unsafe { libc::poll(fds.as_mut_ptr(), fds.len() as libc::c_ulong, 1000) };","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77779,"byte_end":77869,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/     assert!(r >= 0);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77870,"byte_end":77894,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77895,"byte_end":77898,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // And handle incoming events","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77899,"byte_end":77936,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     for pfd in fds.iter().filter(|pfd| pfd.revents != 0) {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":77937,"byte_end":77999,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/         for item in c.watch_handle(pfd.fd, WatchEvent::from_revents(pfd.revents)) {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78000,"byte_end":78087,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/             // Handle item","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78088,"byte_end":78118,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/             println!(\"Received ConnectionItem: {:?}\", item);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78119,"byte_end":78183,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/         }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78184,"byte_end":78197,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78198,"byte_end":78207,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78208,"byte_end":78213,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78214,"byte_end":78221,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78223,"byte_end":78233,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/ The enum is here for backwards compatibility mostly.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78275,"byte_end":78331,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78332,"byte_end":78335,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It should really be bitflags instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78336,"byte_end":78377,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78863,"byte_end":78875,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"from_revents","qualname":"<WatchEvent>::from_revents","value":"fn (revents: libc::c_short) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" After running poll, this transforms the revents into a parameter you can send into `Connection::watch_handle`\n","sig":null,"attributes":[{"value":"/ After running poll, this transforms the revents into a parameter you can send into `Connection::watch_handle`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78738,"byte_end":78851,"line_start":54,"line_end":54,"column_start":5,"column_end":118}}]},{"kind":"Struct","id":{"krate":0,"index":2572},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79452,"byte_end":79457,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"Watch","qualname":"::ffidisp::watch::Watch","value":"Watch {  }","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575}],"decl_id":null,"docs":" A file descriptor, and an indication whether it should be read from, written to, or both.\n","sig":null,"attributes":[{"value":"/ A file descriptor, and an indication whether it should be read from, written to, or both.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79347,"byte_end":79440,"line_start":65,"line_end":65,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79575,"byte_end":79577,"line_start":74,"line_end":74,"column_start":12,"column_end":14},"name":"fd","qualname":"<Watch>::fd","value":"fn (&self) -> RawFd","parent":null,"children":[],"decl_id":null,"docs":" Get the RawFd this Watch is for\n","sig":null,"attributes":[{"value":"/ Get the RawFd this Watch is for","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79528,"byte_end":79563,"line_start":73,"line_end":73,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79660,"byte_end":79668,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"readable","qualname":"<Watch>::readable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add POLLIN to events to listen for\n","sig":null,"attributes":[{"value":"/ Add POLLIN to events to listen for","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79610,"byte_end":79648,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79753,"byte_end":79761,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"writable","qualname":"<Watch>::writable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add POLLOUT to events to listen for\n","sig":null,"attributes":[{"value":"/ Add POLLOUT to events to listen for","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79702,"byte_end":79741,"line_start":77,"line_end":77,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79879,"byte_end":79888,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"to_pollfd","qualname":"<Watch>::to_pollfd","value":"fn (&self) -> libc::pollfd","parent":null,"children":[],"decl_id":null,"docs":" Returns the current watch as a libc::pollfd, to use with libc::poll\n","sig":null,"attributes":[{"value":"/ Returns the current watch as a libc::pollfd, to use with libc::poll","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79796,"byte_end":79867,"line_start":79,"line_end":79,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2605},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34741,"byte_end":34757,"line_start":97,"line_end":97,"column_start":5,"column_end":21},"name":"AllowReplacement","qualname":"::ffidisp::NameFlag::AllowReplacement","value":"NameFlag::AllowReplacement","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Allow another service to become the primary owner if requested\n","sig":null,"attributes":[{"value":"/ Allow another service to become the primary owner if requested","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34670,"byte_end":34736,"line_start":96,"line_end":96,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34865,"byte_end":34880,"line_start":99,"line_end":99,"column_start":5,"column_end":20},"name":"ReplaceExisting","qualname":"::ffidisp::NameFlag::ReplaceExisting","value":"NameFlag::ReplaceExisting","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" Request to replace the current primary owner\n","sig":null,"attributes":[{"value":"/ Request to replace the current primary owner","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34812,"byte_end":34860,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2611},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35010,"byte_end":35020,"line_start":101,"line_end":101,"column_start":5,"column_end":15},"name":"DoNotQueue","qualname":"::ffidisp::NameFlag::DoNotQueue","value":"NameFlag::DoNotQueue","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" If we can not become the primary owner do not place us in the queue\n","sig":null,"attributes":[{"value":"/ If we can not become the primary owner do not place us in the queue","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34934,"byte_end":35005,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":2604},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34655,"byte_end":34663,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"name":"NameFlag","qualname":"::ffidisp::NameFlag","value":"NameFlag::{AllowReplacement, ReplaceExisting, DoNotQueue}","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611}],"decl_id":null,"docs":" Flags to use for Connection::register_name.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34451,"byte_end":34461,"line_start":90,"line_end":90,"column_start":1,"column_end":11}},{"value":"/ Flags to use for Connection::register_name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34524,"byte_end":34571,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34572,"byte_end":34575,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ More than one flag can be specified, if so just add their values.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":34576,"byte_end":34645,"line_start":94,"line_end":94,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35123,"byte_end":35128,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"value","qualname":"<NameFlag>::value","value":"fn (self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" u32 value of flag.\n","sig":null,"attributes":[{"value":"/ u32 value of flag.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35089,"byte_end":35111,"line_start":105,"line_end":105,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35372,"byte_end":35379,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::ffidisp::ConnectionItem::Nothing","value":"ConnectionItem::Nothing","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" No event between now and timeout\n","sig":null,"attributes":[{"value":"/ No event between now and timeout","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35331,"byte_end":35367,"line_start":113,"line_end":113,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35414,"byte_end":35424,"line_start":116,"line_end":116,"column_start":5,"column_end":15},"name":"MethodCall","qualname":"::ffidisp::ConnectionItem::MethodCall","value":"ConnectionItem::MethodCall(Message)","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Incoming method call\n","sig":null,"attributes":[{"value":"/ Incoming method call","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35385,"byte_end":35409,"line_start":115,"line_end":115,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2635},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35463,"byte_end":35469,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Signal","qualname":"::ffidisp::ConnectionItem::Signal","value":"ConnectionItem::Signal(Message)","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Incoming signal\n","sig":null,"attributes":[{"value":"/ Incoming signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35439,"byte_end":35458,"line_start":117,"line_end":117,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35575,"byte_end":35587,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"MethodReturn","qualname":"::ffidisp::ConnectionItem::MethodReturn","value":"ConnectionItem::MethodReturn(Message)","parent":{"krate":0,"index":2629},"children":[],"decl_id":null,"docs":" Incoming method return, including method return errors (mostly used for Async I/O)\n","sig":null,"attributes":[{"value":"/ Incoming method return, including method return errors (mostly used for Async I/O)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35484,"byte_end":35570,"line_start":119,"line_end":119,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":2629},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35310,"byte_end":35324,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"name":"ConnectionItem","qualname":"::ffidisp::ConnectionItem","value":"ConnectionItem::{Nothing, MethodCall, Signal, MethodReturn}","parent":null,"children":[{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638}],"decl_id":null,"docs":" When listening for incoming events on the D-Bus, this enum will tell you what type\n of incoming event has happened.\n","sig":null,"attributes":[{"value":"/ When listening for incoming events on the D-Bus, this enum will tell you what type","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35161,"byte_end":35247,"line_start":109,"line_end":109,"column_start":1,"column_end":87}},{"value":"/ of incoming event has happened.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35248,"byte_end":35283,"line_start":110,"line_end":110,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2644},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36314,"byte_end":36317,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"All","qualname":"::ffidisp::MsgHandlerType::All","value":"MsgHandlerType::All","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":" Handle all messages\n","sig":null,"attributes":[{"value":"/ Handle all messages","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36286,"byte_end":36309,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2646},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36371,"byte_end":36378,"line_start":147,"line_end":147,"column_start":5,"column_end":12},"name":"MsgType","qualname":"::ffidisp::MsgHandlerType::MsgType","value":"MsgHandlerType::MsgType(MessageType)","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":" Handle only messages of a specific type\n","sig":null,"attributes":[{"value":"/ Handle only messages of a specific type","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36323,"byte_end":36366,"line_start":146,"line_end":146,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2649},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36456,"byte_end":36461,"line_start":149,"line_end":149,"column_start":5,"column_end":10},"name":"Reply","qualname":"::ffidisp::MsgHandlerType::Reply","value":"MsgHandlerType::Reply(u32)","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":" Handle only method replies with this serial number\n","sig":null,"attributes":[{"value":"/ Handle only method replies with this serial number","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36397,"byte_end":36451,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2643},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36265,"byte_end":36279,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MsgHandlerType","qualname":"::ffidisp::MsgHandlerType","value":"MsgHandlerType::{All, MsgType, Reply}","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2649}],"decl_id":null,"docs":" Type of messages to be handled by a MsgHandler.","sig":null,"attributes":[{"value":"/ Type of messages to be handled by a MsgHandler.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36050,"byte_end":36101,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36102,"byte_end":36105,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Note: More variants can be added in the future; but unless you're writing your own D-Bus engine","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36106,"byte_end":36205,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ you should not have to match on these anyway.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36206,"byte_end":36255,"line_start":142,"line_end":142,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":522},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36960,"byte_end":36970,"line_start":166,"line_end":166,"column_start":11,"column_end":21},"name":"MsgHandler","qualname":"::ffidisp::MsgHandler","value":"MsgHandler","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A trait for handling incoming messages.\n","sig":null,"attributes":[{"value":"/ A trait for handling incoming messages.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36906,"byte_end":36949,"line_start":165,"line_end":165,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37162,"byte_end":37174,"line_start":170,"line_end":170,"column_start":8,"column_end":20},"name":"handler_type","qualname":"::ffidisp::MsgHandler::handler_type","value":"fn (&self) -> MsgHandlerType","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Type of messages for which the handler will be called","sig":null,"attributes":[{"value":"/ Type of messages for which the handler will be called","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36977,"byte_end":37034,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37039,"byte_end":37042,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note: The return value of this function might be cached, so it must return the same value all the time.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37047,"byte_end":37154,"line_start":169,"line_end":169,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37281,"byte_end":37291,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"handle_msg","qualname":"::ffidisp::MsgHandler::handle_msg","value":"fn (&mut self, _msg: &Message) -> Option<MsgHandlerResult>","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" Function to be called if the message matches the MsgHandlerType\n","sig":null,"attributes":[{"value":"/ Function to be called if the message matches the MsgHandlerType","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37206,"byte_end":37273,"line_start":172,"line_end":172,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2656},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37436,"byte_end":37452,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MsgHandlerResult","qualname":"::ffidisp::MsgHandlerResult","value":"MsgHandlerResult { handled, done, reply }","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659}],"decl_id":null,"docs":" The result from MsgHandler::handle.\n","sig":null,"attributes":[{"value":"/ The result from MsgHandler::handle.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37359,"byte_end":37398,"line_start":176,"line_end":176,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2657},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37555,"byte_end":37562,"line_start":180,"line_end":180,"column_start":9,"column_end":16},"name":"handled","qualname":"::ffidisp::MsgHandlerResult::handled","value":"bool","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Indicates that the message has been dealt with and should not be processed further.\n","sig":null,"attributes":[{"value":"/ Indicates that the message has been dealt with and should not be processed further.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37459,"byte_end":37546,"line_start":179,"line_end":179,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2658},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37676,"byte_end":37680,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"name":"done","qualname":"::ffidisp::MsgHandlerResult::done","value":"bool","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Indicates that this MsgHandler no longer wants to receive messages and should be removed.\n","sig":null,"attributes":[{"value":"/ Indicates that this MsgHandler no longer wants to receive messages and should be removed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37574,"byte_end":37667,"line_start":181,"line_end":181,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":2659},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37753,"byte_end":37758,"line_start":184,"line_end":184,"column_start":9,"column_end":14},"name":"reply","qualname":"::ffidisp::MsgHandlerResult::reply","value":"std::vec::Vec<message::Message>","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Messages to send (e g, a reply to a method call)\n","sig":null,"attributes":[{"value":"/ Messages to send (e g, a reply to a method call)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37692,"byte_end":37744,"line_start":183,"line_end":183,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37984,"byte_end":37996,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"MessageReply","qualname":"::ffidisp::MessageReply","value":"","parent":null,"children":[],"decl_id":null,"docs":" The struct returned from `Connection::send_and_reply`.","sig":null,"attributes":[{"value":"/ The struct returned from `Connection::send_and_reply`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37827,"byte_end":37885,"line_start":190,"line_end":190,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37886,"byte_end":37889,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ It implements the `MsgHandler` trait so you can use `Connection::add_handler`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":37890,"byte_end":37972,"line_start":192,"line_end":192,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86670,"byte_end":86675,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":546}],"decl_id":null,"docs":" D-Bus Error wrapper.\n","sig":null,"attributes":[{"value":"/ D-Bus Error wrapper.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86634,"byte_end":86658,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":87027,"byte_end":87037,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<Error>::new_custom","value":"fn <'a, N> (name: N, message: &str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom D-Bus Error.\n","sig":null,"attributes":[{"value":"/ Create a new custom D-Bus Error.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86979,"byte_end":87015,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":87438,"byte_end":87448,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"new_failed","qualname":"<Error>::new_failed","value":"fn (message: &str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new generic D-Bus Error with \"org.freedesktop.DBus.Error.Failed\" as the Error name.\n","sig":null,"attributes":[{"value":"/ Create a new generic D-Bus Error with \"org.freedesktop.DBus.Error.Failed\" as the Error name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":87330,"byte_end":87426,"line_start":30,"line_end":30,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":87936,"byte_end":87940,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Error name/type, e g 'org.freedesktop.DBus.Error.Failed'\n","sig":null,"attributes":[{"value":"/ Error name/type, e g 'org.freedesktop.DBus.Error.Failed'","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":87864,"byte_end":87924,"line_start":47,"line_end":47,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88089,"byte_end":88096,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Custom message, e g 'Could not find a matching object path'\n","sig":null,"attributes":[{"value":"/ Custom message, e g 'Could not find a matching object path'","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88014,"byte_end":88077,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":571},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":2664},{"krate":0,"index":2668},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":2670},{"krate":0,"index":2683},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2673},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":2685},{"krate":0,"index":2711},{"krate":0,"index":2709},{"krate":0,"index":2708},{"krate":0,"index":2706},{"krate":0,"index":2704},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2695},{"krate":0,"index":2713},{"krate":0,"index":2743},{"krate":0,"index":2742},{"krate":0,"index":2740},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2719},{"krate":0,"index":2717},{"krate":0,"index":598},{"krate":0,"index":2745},{"krate":0,"index":2750},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":607},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":2757},{"krate":0,"index":2780},{"krate":0,"index":2778},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2769},{"krate":0,"index":2763},{"krate":0,"index":2760},{"krate":0,"index":636},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" Connection base / building block.","sig":null,"attributes":[{"value":"! Connection base / building block.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89257,"byte_end":89294,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89295,"byte_end":89298,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains some helper structs and traits common to all Connection types.-","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89299,"byte_end":89375,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2686},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90344,"byte_end":90351,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Session","qualname":"::channel::BusType::Session","value":"BusType::Session","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":" The Session bus - local to every logged in session\n","sig":null,"attributes":[{"value":"/ The Session bus - local to every logged in session","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90285,"byte_end":90339,"line_start":37,"line_end":37,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2689},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90422,"byte_end":90428,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"System","qualname":"::channel::BusType::System","value":"BusType::System","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":" The system wide bus\n","sig":null,"attributes":[{"value":"/ The system wide bus","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90394,"byte_end":90417,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2692},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90510,"byte_end":90517,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Starter","qualname":"::channel::BusType::Starter","value":"BusType::Starter","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":" The bus that started us, if any\n","sig":null,"attributes":[{"value":"/ The bus that started us, if any","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90470,"byte_end":90505,"line_start":41,"line_end":41,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2685},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90271,"byte_end":90278,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"BusType","qualname":"::channel::BusType","value":"BusType::{Session, System, Starter}","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2692}],"decl_id":null,"docs":" Which bus to connect to\n","sig":null,"attributes":[{"value":"/ Which bus to connect to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90166,"byte_end":90193,"line_start":34,"line_end":34,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2713},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90727,"byte_end":90732,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"Watch","qualname":"::channel::Watch","value":"Watch { fd, read, write }","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716}],"decl_id":null,"docs":" A file descriptor, and an indication whether it should be read from, written to, or both.\n","sig":null,"attributes":[{"value":"/ A file descriptor, and an indication whether it should be read from, written to, or both.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90622,"byte_end":90715,"line_start":47,"line_end":47,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":2714},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90767,"byte_end":90769,"line_start":50,"line_end":50,"column_start":9,"column_end":11},"name":"fd","qualname":"::channel::Watch::fd","value":"i32","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" File descriptor\n","sig":null,"attributes":[{"value":"/ File descriptor","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90739,"byte_end":90758,"line_start":49,"line_end":49,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2715},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90869,"byte_end":90873,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"read","qualname":"::channel::Watch::read","value":"bool","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" True if wakeup should happen when the file descriptor is ready for reading\n","sig":null,"attributes":[{"value":"/ True if wakeup should happen when the file descriptor is ready for reading","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90782,"byte_end":90860,"line_start":51,"line_end":51,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":2716},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90972,"byte_end":90977,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"write","qualname":"::channel::Watch::write","value":"bool","parent":{"krate":0,"index":2713},"children":[],"decl_id":null,"docs":" True if wakeup should happen when the file descriptor is ready for writing\n","sig":null,"attributes":[{"value":"/ True if wakeup should happen when the file descriptor is ready for writing","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90885,"byte_end":90963,"line_start":53,"line_end":53,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":2752},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94878,"byte_end":94885,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Channel","qualname":"::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754}],"decl_id":null,"docs":" Low-level connection - handles read/write to the socket","sig":null,"attributes":[{"value":"/ Low-level connection - handles read/write to the socket","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94199,"byte_end":94258,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94259,"byte_end":94262,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ You probably do not need to worry about this as you would typically","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94263,"byte_end":94334,"line_start":145,"line_end":145,"column_start":1,"column_end":72}},{"value":"/ use the various blocking and non-blocking \"Connection\" structs instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94335,"byte_end":94410,"line_start":146,"line_end":146,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94411,"byte_end":94414,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This version avoids dbus_connection_dispatch, and thus avoids","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94415,"byte_end":94480,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/ callbacks from that function. Instead the same functionality","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94481,"byte_end":94545,"line_start":149,"line_end":149,"column_start":1,"column_end":65}},{"value":"/ is implemented in the various blocking and non-blocking \"Connection\" components.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94546,"byte_end":94630,"line_start":150,"line_end":150,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94631,"byte_end":94634,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Blocking operations are clearly marked as such, although if you","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94635,"byte_end":94702,"line_start":152,"line_end":152,"column_start":1,"column_end":68}},{"value":"/ try to access the connection from several threads at the same time,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94703,"byte_end":94774,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/ blocking might occur due to an internal mutex inside the dbus library.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94775,"byte_end":94849,"line_start":154,"line_end":154,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95697,"byte_end":95708,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"get_private","qualname":"<Channel>::get_private","value":"fn (bus: BusType) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95584,"byte_end":95619,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95624,"byte_end":95627,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the connection is up and running.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95632,"byte_end":95685,"line_start":187,"line_end":187,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96420,"byte_end":96432,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"open_private","qualname":"<Channel>::open_private","value":"fn (address: &str) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection to a remote address.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection to a remote address.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96183,"byte_end":96238,"line_start":202,"line_end":202,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96243,"byte_end":96246,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note: for all common cases (System / Session bus) you probably want \"get_private\" instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96251,"byte_end":96345,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96350,"byte_end":96353,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the connection is established.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96358,"byte_end":96408,"line_start":206,"line_end":206,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96957,"byte_end":96965,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"register","qualname":"<Channel>::register","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new D-Bus connection with the bus.","sig":null,"attributes":[{"value":"/ Registers a new D-Bus connection with the bus.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96727,"byte_end":96777,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96782,"byte_end":96785,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Note: `get_private` does this automatically, useful with `open_private`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96790,"byte_end":96865,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96870,"byte_end":96873,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Blocking: until a \"Hello\" response is received from the server.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":96878,"byte_end":96945,"line_start":220,"line_end":220,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97363,"byte_end":97375,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"is_connected","qualname":"<Channel>::is_connected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the connection is currently open.\n","sig":null,"attributes":[{"value":"/ Gets whether the connection is currently open.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97301,"byte_end":97351,"line_start":231,"line_end":231,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97580,"byte_end":97591,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"unique_name","qualname":"<Channel>::unique_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the connection's unique name.","sig":null,"attributes":[{"value":"/ Get the connection's unique name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97479,"byte_end":97516,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97521,"byte_end":97524,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ It's usually something like \":1.54\"","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97529,"byte_end":97568,"line_start":238,"line_end":238,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98218,"byte_end":98222,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"send","qualname":"<Channel>::send","value":"fn (&self, msg: Message) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Puts a message into libdbus out queue, and tries to send it.","sig":null,"attributes":[{"value":"/ Puts a message into libdbus out queue, and tries to send it.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97828,"byte_end":97892,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97897,"byte_end":97900,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns a serial number than can be used to match against a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97905,"byte_end":97975,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97980,"byte_end":97983,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note: usually the message is sent when this call happens, but in","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":97988,"byte_end":98056,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ case internal D-Bus buffers are full, it will be left in the out queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98061,"byte_end":98136,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ Call \"flush\" or \"read_write\" to retry flushing the out queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98141,"byte_end":98206,"line_start":253,"line_end":253,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98949,"byte_end":98974,"line_start":269,"line_end":269,"column_start":12,"column_end":37},"name":"send_with_reply_and_block","qualname":"<Channel>::send_with_reply_and_block","value":"fn (&self, msg: Message, timeout: Duration) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and waits for a reply. This is used for method calls.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and waits for a reply. This is used for method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98455,"byte_end":98543,"line_start":261,"line_end":261,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98548,"byte_end":98551,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Blocking: until a reply is received or the timeout expires.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98556,"byte_end":98619,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98624,"byte_end":98627,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Note: In case of an error reply, this is returned as an Err(), not as a Ok(Message) with the error type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98632,"byte_end":98740,"line_start":265,"line_end":265,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98745,"byte_end":98748,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note: In case pop_message and send_with_reply_and_block is called in parallel from different threads,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98753,"byte_end":98858,"line_start":267,"line_end":267,"column_start":5,"column_end":110}},{"value":"/ they might race to retreive the reply message from the internal queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":98863,"byte_end":98937,"line_start":268,"line_end":268,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99505,"byte_end":99510,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"flush","qualname":"<Channel>::flush","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flush the queue of outgoing messages.","sig":null,"attributes":[{"value":"/ Flush the queue of outgoing messages.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99391,"byte_end":99432,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99437,"byte_end":99440,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the outgoing queue is empty.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99445,"byte_end":99493,"line_start":283,"line_end":283,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99885,"byte_end":99895,"line_start":292,"line_end":292,"column_start":12,"column_end":22},"name":"read_write","qualname":"<Channel>::read_write","value":"fn (&self, timeout: Option<Duration>) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Read and write to the connection.","sig":null,"attributes":[{"value":"/ Read and write to the connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99578,"byte_end":99615,"line_start":286,"line_end":286,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99620,"byte_end":99623,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Incoming messages are put in the internal queue, outgoing messages are written.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99628,"byte_end":99711,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99716,"byte_end":99719,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Blocking: If there are no messages, for up to timeout, or forever if timeout is None.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99724,"byte_end":99813,"line_start":290,"line_end":290,"column_start":5,"column_end":94}},{"value":"/ For non-blocking behaviour, set timeout to Some(0).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":99818,"byte_end":99873,"line_start":291,"line_end":291,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100235,"byte_end":100255,"line_start":302,"line_end":302,"column_start":12,"column_end":32},"name":"has_messages_to_send","qualname":"<Channel>::has_messages_to_send","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the output message buffer is non-empty\n","sig":null,"attributes":[{"value":"/ Gets whether the output message buffer is non-empty","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100168,"byte_end":100223,"line_start":301,"line_end":301,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100682,"byte_end":100693,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"pop_message","qualname":"<Channel>::pop_message","value":"fn (&self) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Removes a message from the incoming queue, or returns None if the queue is empty.","sig":null,"attributes":[{"value":"/ Removes a message from the incoming queue, or returns None if the queue is empty.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100363,"byte_end":100448,"line_start":306,"line_end":306,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100453,"byte_end":100456,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Use \"read_write\" first, so that messages are put into the incoming queue.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100461,"byte_end":100538,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/ For unhandled messages, please call MessageDispatcher::default_dispatch to return","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100543,"byte_end":100628,"line_start":309,"line_end":309,"column_start":5,"column_end":90}},{"value":"/ default replies for method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":100633,"byte_end":100670,"line_start":310,"line_end":310,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101118,"byte_end":101138,"line_start":324,"line_end":324,"column_start":12,"column_end":32},"name":"blocking_pop_message","qualname":"<Channel>::blocking_pop_message","value":"fn (&self, timeout: Duration) -> Result<Option<Message>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Removes a message from the incoming queue, or waits until timeout if the queue is empty.","sig":null,"attributes":[{"value":"/ Removes a message from the incoming queue, or waits until timeout if the queue is empty.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101006,"byte_end":101098,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101103,"byte_end":101106,"line_start":323,"line_end":323,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101732,"byte_end":101749,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"set_watch_enabled","qualname":"<Channel>::set_watch_enabled","value":"fn (&mut self, enable: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enables watch tracking, a prequisite for calling watch.","sig":null,"attributes":[{"value":"/ Enables watch tracking, a prequisite for calling watch.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101462,"byte_end":101521,"line_start":332,"line_end":332,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101526,"byte_end":101529,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ (In theory, this could panic in case libdbus ever changes to listen to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101534,"byte_end":101608,"line_start":334,"line_end":334,"column_start":5,"column_end":79}},{"value":"/ something else than one file descriptor,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101613,"byte_end":101657,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/ but this should be extremely unlikely to ever happen.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":101662,"byte_end":101720,"line_start":336,"line_end":336,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102326,"byte_end":102331,"line_start":353,"line_end":353,"column_start":12,"column_end":17},"name":"watch","qualname":"<Channel>::watch","value":"fn (&self) -> Watch","parent":null,"children":[],"decl_id":null,"docs":" Gets the file descriptor to listen for read/write.","sig":null,"attributes":[{"value":"/ Gets the file descriptor to listen for read/write.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102006,"byte_end":102060,"line_start":346,"line_end":346,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102065,"byte_end":102068,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Panics: if set_watch_enabled is false.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102073,"byte_end":102115,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102120,"byte_end":102123,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ (In theory, this could panic in case libdbus ever changes to listen to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102128,"byte_end":102202,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ something else than one file descriptor,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102207,"byte_end":102251,"line_start":351,"line_end":351,"column_start":5,"column_end":49}},{"value":"/ but this should be extremely unlikely to ever happen.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102256,"byte_end":102314,"line_start":352,"line_end":352,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102757,"byte_end":102766,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"watch_fds","qualname":"<Channel>::watch_fds","value":"fn (&mut self) -> Result<Vec<Watch>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Get an up-to-date list of file descriptors to watch.","sig":null,"attributes":[{"value":"/ Get an up-to-date list of file descriptors to watch.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102600,"byte_end":102656,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102661,"byte_end":102664,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Obsolete - in practice, you can use watch and set_watch_enabled instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":102669,"byte_end":102745,"line_start":365,"line_end":365,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":632},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103608,"byte_end":103614,"line_start":388,"line_end":388,"column_start":11,"column_end":17},"name":"Sender","qualname":"::channel::Sender","value":"Sender","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":" Abstraction over different connections that send data\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections that send data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103540,"byte_end":103597,"line_start":387,"line_end":387,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103748,"byte_end":103752,"line_start":392,"line_end":392,"column_start":8,"column_end":12},"name":"send","qualname":"::channel::Sender::send","value":"fn (&self, msg: Message) -> Result<u32, ()>","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" Schedules a message for sending.","sig":null,"attributes":[{"value":"/ Schedules a message for sending.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103621,"byte_end":103657,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103662,"byte_end":103665,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Returns a serial number than can be used to match against a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103670,"byte_end":103740,"line_start":391,"line_end":391,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104184,"byte_end":104189,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"Token","qualname":"::channel::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Token used to identify a callback in the MatchingReceiver trait\n","sig":null,"attributes":[{"value":"/ Token used to identify a callback in the MatchingReceiver trait","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104044,"byte_end":104111,"line_start":403,"line_end":403,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":636},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104274,"byte_end":104290,"line_start":408,"line_end":408,"column_start":11,"column_end":27},"name":"MatchingReceiver","qualname":"::channel::MatchingReceiver","value":"MatchingReceiver","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"decl_id":null,"docs":" Abstraction over different connections that receive data\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections that receive data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104203,"byte_end":104263,"line_start":407,"line_end":407,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":637},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104327,"byte_end":104328,"line_start":410,"line_end":410,"column_start":10,"column_end":11},"name":"F","qualname":"::channel::MatchingReceiver::F","value":"type F;","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Type of callback\n","sig":null,"attributes":[{"value":"/ Type of callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104297,"byte_end":104317,"line_start":409,"line_end":409,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104471,"byte_end":104484,"line_start":414,"line_end":414,"column_start":8,"column_end":21},"name":"start_receive","qualname":"::channel::MatchingReceiver::start_receive","value":"fn (&self, m: MatchRule<'static>, f: Self::F) -> Token","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Add a callback to be called in case a message matches.","sig":null,"attributes":[{"value":"/ Add a callback to be called in case a message matches.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104334,"byte_end":104392,"line_start":411,"line_end":411,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104397,"byte_end":104400,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns an id that can be used to remove the callback.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104405,"byte_end":104463,"line_start":413,"line_end":413,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104588,"byte_end":104600,"line_start":416,"line_end":416,"column_start":8,"column_end":20},"name":"stop_receive","qualname":"::channel::MatchingReceiver::stop_receive","value":"fn (&self, id: Token) -> Option<(MatchRule<'static>, Self::F)>","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" Remove a previously added callback.\n","sig":null,"attributes":[{"value":"/ Remove a previously added callback.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104541,"byte_end":104580,"line_start":415,"line_end":415,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":105039,"byte_end":105052,"line_start":428,"line_end":428,"column_start":8,"column_end":21},"name":"default_reply","qualname":"::channel::default_reply","value":"fn (m: &Message) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Handles what we need to be a good D-Bus citizen.","sig":null,"attributes":[{"value":"/ Handles what we need to be a good D-Bus citizen.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104774,"byte_end":104826,"line_start":423,"line_end":423,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104827,"byte_end":104830,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ Call this if you have not handled the message yourself:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104831,"byte_end":104890,"line_start":425,"line_end":425,"column_start":1,"column_end":60}},{"value":"/ * It handles calls to org.freedesktop.DBus.Peer.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104891,"byte_end":104943,"line_start":426,"line_end":426,"column_start":1,"column_end":53}},{"value":"/ * For other method calls, it sends an error reply back that the method was unknown.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104944,"byte_end":105031,"line_start":427,"line_end":427,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":666},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blocking","qualname":"::blocking","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2897},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2930},{"krate":0,"index":2932},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2942},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2975},{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2987},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":2991},{"krate":0,"index":3002},{"krate":0,"index":2998},{"krate":0,"index":885},{"krate":0,"index":891},{"krate":0,"index":909}],"decl_id":null,"docs":" Connections and proxies that make blocking method calls.\n","sig":null,"attributes":[{"value":"! Connections and proxies that make blocking method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":109681,"byte_end":109741,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":692},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stdintf","qualname":"::blocking::stdintf","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":772},{"krate":0,"index":774}],"decl_id":null,"docs":" This module contains some standard interfaces and an easy way to call them.","sig":null,"attributes":[{"value":"! This module contains some standard interfaces and an easy way to call them.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":123496,"byte_end":123575,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":123576,"byte_end":123579,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces) for more information about these standard interfaces.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":123580,"byte_end":123745,"line_start":3,"line_end":3,"column_start":1,"column_end":166}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":123746,"byte_end":123749,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The code here was originally created by dbus-codegen.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":123750,"byte_end":123807,"line_start":5,"line_end":5,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":693},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124043,"byte_end":124063,"line_start":11,"line_end":11,"column_start":9,"column_end":29},"name":"org_freedesktop_dbus","qualname":"::blocking::stdintf::org_freedesktop_dbus","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","parent":null,"children":[{"krate":0,"index":2781},{"krate":0,"index":2803},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2796},{"krate":0,"index":2794},{"krate":0,"index":2805},{"krate":0,"index":2824},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2817},{"krate":0,"index":2815},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":704},{"krate":0,"index":2826},{"krate":0,"index":2830},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":766}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124067,"byte_end":124090,"line_start":13,"line_end":13,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124169,"byte_end":124181,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"PrimaryOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::PrimaryOwner","value":"RequestNameReply::PrimaryOwner","parent":{"krate":0,"index":2781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124191,"byte_end":124198,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"InQueue","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::InQueue","value":"RequestNameReply::InQueue","parent":{"krate":0,"index":2781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124208,"byte_end":124214,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Exists","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::Exists","value":"RequestNameReply::Exists","parent":{"krate":0,"index":2781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124224,"byte_end":124236,"line_start":20,"line_end":20,"column_start":5,"column_end":17},"name":"AlreadyOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::AlreadyOwner","value":"RequestNameReply::AlreadyOwner","parent":{"krate":0,"index":2781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2781},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124146,"byte_end":124162,"line_start":16,"line_end":16,"column_start":10,"column_end":26},"name":"RequestNameReply","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply","value":"RequestNameReply::{PrimaryOwner, InQueue, Exists, AlreadyOwner}","parent":null,"children":[{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124322,"byte_end":124330,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Released","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::Released","value":"ReleaseNameReply::Released","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124340,"byte_end":124351,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"name":"NonExistent","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::NonExistent","value":"ReleaseNameReply::NonExistent","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124361,"byte_end":124369,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"NotOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::NotOwner","value":"ReleaseNameReply::NotOwner","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2805},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124299,"byte_end":124315,"line_start":24,"line_end":24,"column_start":10,"column_end":26},"name":"ReleaseNameReply","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply","value":"ReleaseNameReply::{Released, NonExistent, NotOwner}","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":697},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124445,"byte_end":124455,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"Properties","qualname":"::blocking::stdintf::org_freedesktop_dbus::Properties","value":"Properties","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124465,"byte_end":124468,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"get","qualname":"::blocking::stdintf::org_freedesktop_dbus::Properties::get","value":"fn <R0> (&self, interface_name: &str, property_name: &str) -> Result<R0, dbus::Error>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124580,"byte_end":124587,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"get_all","qualname":"::blocking::stdintf::org_freedesktop_dbus::Properties::get_all","value":"fn (&self, interface_name: &str) -> Result<::std::collections::HashMap<String,\n                                   arg::Variant<Box<dyn arg::RefArg +\n                                                    'static>>>, dbus::Error>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124731,"byte_end":124734,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"set","qualname":"::blocking::stdintf::org_freedesktop_dbus::Properties::set","value":"fn <I2> (&self, interface_name: &str, property_name: &str, value: I2) -> Result<(), dbus::Error>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2826},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":125892,"byte_end":125919,"line_start":58,"line_end":58,"column_start":12,"column_end":39},"name":"PropertiesPropertiesChanged","qualname":"::blocking::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged","value":"PropertiesPropertiesChanged { interface_name, changed_properties, invalidated_properties }","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2827},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":125930,"byte_end":125944,"line_start":59,"line_end":59,"column_start":9,"column_end":23},"name":"interface_name","qualname":"::blocking::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::interface_name","value":"std::string::String","parent":{"krate":0,"index":2826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2828},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":125962,"byte_end":125980,"line_start":60,"line_end":60,"column_start":9,"column_end":27},"name":"changed_properties","qualname":"::blocking::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::changed_properties","value":"std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>","parent":{"krate":0,"index":2826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2829},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126073,"byte_end":126095,"line_start":61,"line_end":61,"column_start":9,"column_end":31},"name":"invalidated_properties","qualname":"::blocking::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::invalidated_properties","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126914,"byte_end":126928,"line_start":87,"line_end":87,"column_start":11,"column_end":25},"name":"Introspectable","qualname":"::blocking::stdintf::org_freedesktop_dbus::Introspectable","value":"Introspectable","parent":null,"children":[{"krate":0,"index":724}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126938,"byte_end":126948,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"introspect","qualname":"::blocking::stdintf::org_freedesktop_dbus::Introspectable::introspect","value":"fn (&self) -> Result<String, dbus::Error>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":730},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127292,"byte_end":127296,"line_start":99,"line_end":99,"column_start":11,"column_end":15},"name":"Peer","qualname":"::blocking::stdintf::org_freedesktop_dbus::Peer","value":"Peer","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127306,"byte_end":127310,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"ping","qualname":"::blocking::stdintf::org_freedesktop_dbus::Peer::ping","value":"fn (&self) -> Result<(), dbus::Error>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127353,"byte_end":127367,"line_start":101,"line_end":101,"column_start":8,"column_end":22},"name":"get_machine_id","qualname":"::blocking::stdintf::org_freedesktop_dbus::Peer::get_machine_id","value":"fn (&self) -> Result<String, dbus::Error>","parent":{"krate":0,"index":730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":739},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127818,"byte_end":127831,"line_start":116,"line_end":116,"column_start":11,"column_end":24},"name":"ObjectManager","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManager","value":"ObjectManager","parent":null,"children":[{"krate":0,"index":740}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127841,"byte_end":127860,"line_start":117,"line_end":117,"column_start":8,"column_end":27},"name":"get_managed_objects","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManager::get_managed_objects","value":"fn (&self) -> Result<::std::collections::HashMap<dbus::Path<'static>,\n                                   ::std::collections::HashMap<String,\n                                                               ::std::collections::HashMap<String,\n                                                                                           arg::Variant<Box<dyn arg::RefArg +\n                                                                                                            'static>>>>>,\n       dbus::Error>","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2832},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128734,"byte_end":128762,"line_start":129,"line_end":129,"column_start":12,"column_end":40},"name":"ObjectManagerInterfacesAdded","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded","value":"ObjectManagerInterfacesAdded { object, interfaces }","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2833},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128773,"byte_end":128779,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"object","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2834},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128810,"byte_end":128820,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::interfaces","value":"std::collections::HashMap<std::string::String, std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>>","parent":{"krate":0,"index":2832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129628,"byte_end":129658,"line_start":156,"line_end":156,"column_start":12,"column_end":42},"name":"ObjectManagerInterfacesRemoved","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved","value":"ObjectManagerInterfacesRemoved { object, interfaces }","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2838},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129669,"byte_end":129675,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"object","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2839},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129706,"byte_end":129716,"line_start":158,"line_end":158,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::interfaces","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110156,"byte_end":110171,"line_start":17,"line_end":17,"column_start":12,"column_end":27},"name":"LocalConnection","qualname":"::blocking::LocalConnection","value":"LocalConnection {  }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" A connection to D-Bus, thread local + non-async version\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, thread local + non-async version","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110085,"byte_end":110144,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110340,"byte_end":110350,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Connection","qualname":"::blocking::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":" A connection to D-Bus, non-async version where callbacks are Send but not Sync.\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, non-async version where callbacks are Send but not Sync.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110245,"byte_end":110328,"line_start":22,"line_end":22,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110489,"byte_end":110503,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"SyncConnection","qualname":"::blocking::SyncConnection","value":"SyncConnection {  }","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"decl_id":null,"docs":" A connection to D-Bus, Send + Sync + non-async version\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, Send + Sync + non-async version","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110419,"byte_end":110477,"line_start":28,"line_end":28,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":881},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116788,"byte_end":116802,"line_start":202,"line_end":202,"column_start":11,"column_end":25},"name":"BlockingSender","qualname":"::blocking::BlockingSender","value":"BlockingSender","parent":null,"children":[{"krate":0,"index":882}],"decl_id":null,"docs":" Abstraction over different connections\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116735,"byte_end":116777,"line_start":201,"line_end":201,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117049,"byte_end":117074,"line_start":206,"line_end":206,"column_start":8,"column_end":33},"name":"send_with_reply_and_block","qualname":"::blocking::BlockingSender::send_with_reply_and_block","value":"fn (&self, msg: Message, timeout: Duration) -> Result<Message, Error>","parent":{"krate":0,"index":881},"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and blocks, waiting for a reply or a timeout. This is used for method calls.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and blocks, waiting for a reply or a timeout. This is used for method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116809,"byte_end":116920,"line_start":203,"line_end":203,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116925,"byte_end":116928,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note: In case of an error reply, this is returned as an Err(), not as a Ok(Message) with the error type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116933,"byte_end":117041,"line_start":205,"line_end":205,"column_start":5,"column_end":113}}]},{"kind":"Struct","id":{"krate":0,"index":2991},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117726,"byte_end":117731,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::blocking::Proxy","value":"Proxy { destination, path, timeout, connection }","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997}],"decl_id":null,"docs":" A struct that wraps a connection, destination and path.","sig":null,"attributes":[{"value":"/ A struct that wraps a connection, destination and path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117352,"byte_end":117411,"line_start":215,"line_end":215,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117412,"byte_end":117415,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ A D-Bus \"Proxy\" is a client-side object that corresponds to a remote object on the server side.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117416,"byte_end":117515,"line_start":217,"line_end":217,"column_start":1,"column_end":100}},{"value":"/ Calling methods on the proxy object calls methods on the remote object.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117516,"byte_end":117591,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ Read more in the [D-Bus tutorial](https://dbus.freedesktop.org/doc/dbus-tutorial.html#proxies)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117592,"byte_end":117690,"line_start":219,"line_end":219,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":2994},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117819,"byte_end":117830,"line_start":223,"line_end":223,"column_start":9,"column_end":20},"name":"destination","qualname":"::blocking::Proxy::destination","value":"strings::BusName<'a>","parent":{"krate":0,"index":2991},"children":[],"decl_id":null,"docs":" Destination, i e what D-Bus service you're communicating with\n","sig":null,"attributes":[{"value":"/ Destination, i e what D-Bus service you're communicating with","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117745,"byte_end":117810,"line_start":222,"line_end":222,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2995},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117892,"byte_end":117896,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"name":"path","qualname":"::blocking::Proxy::path","value":"strings::Path<'a>","parent":{"krate":0,"index":2991},"children":[],"decl_id":null,"docs":" Object path on the destination\n","sig":null,"attributes":[{"value":"/ Object path on the destination","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117849,"byte_end":117883,"line_start":224,"line_end":224,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2996},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117949,"byte_end":117956,"line_start":227,"line_end":227,"column_start":9,"column_end":16},"name":"timeout","qualname":"::blocking::Proxy::timeout","value":"std::time::Duration","parent":{"krate":0,"index":2991},"children":[],"decl_id":null,"docs":" Timeout for method calls\n","sig":null,"attributes":[{"value":"/ Timeout for method calls","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117912,"byte_end":117940,"line_start":226,"line_end":226,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2997},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118059,"byte_end":118069,"line_start":229,"line_end":229,"column_start":9,"column_end":19},"name":"connection","qualname":"::blocking::Proxy::connection","value":"C","parent":{"krate":0,"index":2991},"children":[],"decl_id":null,"docs":" Some way to send and/or receive messages, either blocking or non-blocking.\n","sig":null,"attributes":[{"value":"/ Some way to send and/or receive messages, either blocking or non-blocking.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117972,"byte_end":118050,"line_start":228,"line_end":228,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118151,"byte_end":118154,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"fn <D, P> (dest: D, path: P, timeout: Duration, connection: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new proxy struct.\n","sig":null,"attributes":[{"value":"/ Creates a new proxy struct.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118108,"byte_end":118139,"line_start":233,"line_end":233,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119087,"byte_end":119098,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"method_call","qualname":"<Proxy>::method_call","value":"fn <'i, 'm, R, A, I, M> (&self, i: I, m: M, args: A) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a method call using typed input and output arguments, then block waiting for a reply.","sig":null,"attributes":[{"value":"/ Make a method call using typed input and output arguments, then block waiting for a reply.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118495,"byte_end":118589,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118594,"byte_end":118597,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118602,"byte_end":118615,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118620,"byte_end":118623,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118628,"byte_end":118635,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use dbus::blocking::{Connection, Proxy};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118640,"byte_end":118684,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118689,"byte_end":118692,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let conn = Connection::new_session()?;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118697,"byte_end":118739,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/ let proxy = Proxy::new(\"org.freedesktop.DBus\", \"/\", std::time::Duration::from_millis(5000), &conn);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118744,"byte_end":118847,"line_start":249,"line_end":249,"column_start":5,"column_end":108}},{"value":"/ let (has_owner,): (bool,) = proxy.method_call(\"org.freedesktop.DBus\", \"NameHasOwner\", (\"dummy.name.without.owner\",))?;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118852,"byte_end":118974,"line_start":250,"line_end":250,"column_start":5,"column_end":127}},{"value":"/ assert_eq!(has_owner, false);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118979,"byte_end":119012,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119017,"byte_end":119063,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119068,"byte_end":119075,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119883,"byte_end":119894,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"match_start","qualname":"<Proxy>::match_start","value":"fn (&self, mut mr: MatchRule<'static>, call_add_match: bool, f: <T as channel::MatchingReceiver>::F) -> Result<Token, Error>","parent":null,"children":[],"decl_id":null,"docs":" Starts matching incoming messages on this destination and path.","sig":null,"attributes":[{"value":"/ Starts matching incoming messages on this destination and path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119509,"byte_end":119576,"line_start":261,"line_end":261,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119581,"byte_end":119584,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ For matching signals, match_signal_local or match_signal_sync might be more convenient.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119589,"byte_end":119680,"line_start":263,"line_end":263,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119685,"byte_end":119688,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The match rule will be modified to include this path and destination only.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119693,"byte_end":119771,"line_start":265,"line_end":265,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119776,"byte_end":119779,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ If call_add_match is true, will notify the D-Bus server that matching should start.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":119784,"byte_end":119871,"line_start":267,"line_end":267,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":120743,"byte_end":120753,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"match_stop","qualname":"<Proxy>::match_stop","value":"fn (&self, id: Token, call_remove_match: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Stops matching a signal added with match_start, match_signal_local or match_signal_sync.","sig":null,"attributes":[{"value":"/ Stops matching a signal added with match_start, match_signal_local or match_signal_sync.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":120454,"byte_end":120546,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":120551,"byte_end":120554,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If call_add_match is true, will notify the D-Bus server that matching should stop,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":120559,"byte_end":120645,"line_start":284,"line_end":284,"column_start":5,"column_end":91}},{"value":"/ this should be true in case match_signal_local or match_signal_sync was used.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":120650,"byte_end":120731,"line_start":285,"line_end":285,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121448,"byte_end":121460,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"match_signal","qualname":"<Proxy>::match_signal","value":"fn <S, F> (&self, f: F) -> Result<Token, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sets up an incoming signal match, that calls the supplied callback every time the signal is received.","sig":null,"attributes":[{"value":"/ Sets up an incoming signal match, that calls the supplied callback every time the signal is received.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121196,"byte_end":121301,"line_start":298,"line_end":298,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121306,"byte_end":121309,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The returned value can be used to remove the match. The match is also removed if the callback","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121314,"byte_end":121411,"line_start":300,"line_end":300,"column_start":5,"column_end":102}},{"value":"/ returns \"false\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121416,"byte_end":121436,"line_start":301,"line_end":301,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":909},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121854,"byte_end":121864,"line_start":313,"line_end":313,"column_start":11,"column_end":21},"name":"MakeSignal","qualname":"::blocking::MakeSignal","value":"MakeSignal<G, S, T>","parent":null,"children":[{"krate":0,"index":913}],"decl_id":null,"docs":" Internal helper trait\n","sig":null,"attributes":[{"value":"/ Internal helper trait","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121818,"byte_end":121843,"line_start":312,"line_end":312,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121913,"byte_end":121917,"line_start":315,"line_end":315,"column_start":8,"column_end":12},"name":"make","qualname":"::blocking::MakeSignal::make","value":"fn (self, mstr: String) -> G","parent":{"krate":0,"index":909},"children":[],"decl_id":null,"docs":" Internal helper trait\n","sig":null,"attributes":[{"value":"/ Internal helper trait","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":121880,"byte_end":121905,"line_start":314,"line_end":314,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strings","qualname":"::strings","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":3006},{"krate":0,"index":3034},{"krate":0,"index":3028},{"krate":0,"index":3030},{"krate":0,"index":3023},{"krate":0,"index":3025},{"krate":0,"index":3016},{"krate":0,"index":3013},{"krate":0,"index":3010},{"krate":0,"index":3037},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3065},{"krate":0,"index":3068},{"krate":0,"index":3072},{"krate":0,"index":3076},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":931},{"krate":0,"index":3086},{"krate":0,"index":3114},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3096},{"krate":0,"index":3093},{"krate":0,"index":3090},{"krate":0,"index":3117},{"krate":0,"index":3130},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3148},{"krate":0,"index":3152},{"krate":0,"index":3156},{"krate":0,"index":3159},{"krate":0,"index":3162},{"krate":0,"index":934},{"krate":0,"index":3166},{"krate":0,"index":3194},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3176},{"krate":0,"index":3173},{"krate":0,"index":3170},{"krate":0,"index":3197},{"krate":0,"index":3210},{"krate":0,"index":3213},{"krate":0,"index":3216},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3225},{"krate":0,"index":3228},{"krate":0,"index":3232},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3246},{"krate":0,"index":3274},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3256},{"krate":0,"index":3253},{"krate":0,"index":3250},{"krate":0,"index":3277},{"krate":0,"index":3290},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3312},{"krate":0,"index":3316},{"krate":0,"index":3319},{"krate":0,"index":3322},{"krate":0,"index":3326},{"krate":0,"index":3354},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3336},{"krate":0,"index":3333},{"krate":0,"index":3330},{"krate":0,"index":3357},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3402},{"krate":0,"index":3406},{"krate":0,"index":3434},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3416},{"krate":0,"index":3413},{"krate":0,"index":3410},{"krate":0,"index":3437},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":3472},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3482}],"decl_id":null,"docs":" This module contains strings with a specific format, such as a valid\n Interface name, a valid Error name, etc.","sig":null,"attributes":[{"value":"! This module contains strings with a specific format, such as a valid","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":140401,"byte_end":140473,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"! Interface name, a valid Error name, etc.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":140474,"byte_end":140518,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":140519,"byte_end":140522,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! (The internal representation of these strings are `Cow<CStr>`, which","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":140523,"byte_end":140595,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! makes it possible to use them in libdbus without conversion costs.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":140596,"byte_end":140667,"line_start":5,"line_end":5,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3006},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145039,"byte_end":145048,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"Signature","qualname":"::strings::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid (single) D-Bus type signature.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":144874,"byte_end":144928,"line_start":144,"line_end":144,"column_start":1,"column_end":55}},{"value":"/ a valid (single) D-Bus type signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":144929,"byte_end":144971,"line_start":145,"line_end":145,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145224,"byte_end":145228,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"make","qualname":"<Signature>::make","value":"fn <A> () -> Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Makes a D-Bus signature that corresponds to A.\n","sig":null,"attributes":[{"value":"/ Makes a D-Bus signature that corresponds to A.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145162,"byte_end":145212,"line_start":152,"line_end":152,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3086},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145448,"byte_end":145452,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"Path","qualname":"::strings::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus object path.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145295,"byte_end":145349,"line_start":156,"line_end":156,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145350,"byte_end":145380,"line_start":157,"line_end":157,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3166},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145911,"byte_end":145917,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"Member","qualname":"::strings::Member","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus member, i e, a signal or method name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145733,"byte_end":145787,"line_start":168,"line_end":168,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus member, i e, a signal or method name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145788,"byte_end":145843,"line_start":169,"line_end":169,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3246},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146144,"byte_end":146153,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"Interface","qualname":"::strings::Interface","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus interface name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145988,"byte_end":146042,"line_start":175,"line_end":175,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus interface name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146043,"byte_end":146076,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3326},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146380,"byte_end":146387,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BusName","qualname":"::strings::BusName","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus bus name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146230,"byte_end":146284,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus bus name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146285,"byte_end":146312,"line_start":183,"line_end":183,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3406},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146613,"byte_end":146622,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"ErrorName","qualname":"::strings::ErrorName","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus error name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146461,"byte_end":146515,"line_start":189,"line_end":189,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus error name.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":146516,"byte_end":146545,"line_start":190,"line_end":190,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":940},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arg","qualname":"::arg","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":1037},{"krate":0,"index":1132},{"krate":0,"index":1194},{"krate":0,"index":1471},{"krate":0,"index":1647},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1668},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":4986},{"krate":0,"index":4998},{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4988},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":5000},{"krate":0,"index":5007},{"krate":0,"index":5005},{"krate":0,"index":1699},{"krate":0,"index":5010},{"krate":0,"index":5018},{"krate":0,"index":5016},{"krate":0,"index":1717},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":5021},{"krate":0,"index":5093},{"krate":0,"index":5091},{"krate":0,"index":5089},{"krate":0,"index":5086},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5078},{"krate":0,"index":5076},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":5094},{"krate":0,"index":5108},{"krate":0,"index":5107},{"krate":0,"index":5105},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":1746},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1755}],"decl_id":null,"docs":" Types and traits for easily getting a message's arguments, or appening a message with arguments.","sig":null,"attributes":[{"value":"! Types and traits for easily getting a message's arguments, or appening a message with arguments.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147634,"byte_end":147734,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147735,"byte_end":147738,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Also see the arguments guide (in the examples directory).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147739,"byte_end":147800,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147801,"byte_end":147804,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A message has `read1`, `read2` etc, and `append1`, `append2` etc, which is your","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147805,"byte_end":147888,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! starting point into this module's types.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147889,"byte_end":147933,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147934,"byte_end":147937,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! **Append a**:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147938,"byte_end":147955,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147956,"byte_end":147959,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! `bool, u8, u16, u32, u64, i16, i32, i64, f64` - the corresponding D-Bus basic type","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":147960,"byte_end":148046,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148047,"byte_end":148050,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! `&str` - a D-Bus string. D-Bus strings do not allow null characters, so","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148051,"byte_end":148126,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"! if the string contains null characters, it will be cropped","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148127,"byte_end":148189,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"! to only include the data before the null character. (Tip: This allows for skipping an","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148190,"byte_end":148279,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"! allocation by writing a string literal which ends with a null character.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148280,"byte_end":148357,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148358,"byte_end":148361,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! `&[T] where T: Append` - a D-Bus array. Note: can use an efficient fast-path in case of","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148362,"byte_end":148453,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"! T being an FixedArray type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148454,"byte_end":148485,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148486,"byte_end":148489,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! `Array<T, I> where T: Append, I: Iterator<Item=T>` - a D-Bus array, maximum flexibility.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148490,"byte_end":148582,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148583,"byte_end":148586,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! `Variant<T> where T: Append` - a D-Bus variant.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148587,"byte_end":148638,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148639,"byte_end":148642,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! `(T1, T2) where T1: Append, T2: Append` - tuples are D-Bus structs. Implemented up to 12.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148643,"byte_end":148736,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148737,"byte_end":148740,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! `Dict<K, V, I> where K: Append + DictKey, V: Append, I: Iterator<Item=(&K, &V)>` - A D-Bus dict (array of dict entries).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148741,"byte_end":148865,"line_start":26,"line_end":26,"column_start":1,"column_end":125}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148866,"byte_end":148869,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! `Path` - a D-Bus object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148870,"byte_end":148903,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148904,"byte_end":148907,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! `Signature` - a D-Bus signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148908,"byte_end":148944,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148945,"byte_end":148948,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! `OwnedFd` - shares the file descriptor with the remote side.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":148949,"byte_end":149013,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149014,"byte_end":149017,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! **Get / read a**:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149018,"byte_end":149039,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149040,"byte_end":149043,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! `bool, u8, u16, u32, u64, i16, i32, i64, f64` - the corresponding D-Bus basic type","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149044,"byte_end":149130,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149131,"byte_end":149134,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! `&str`, `&CStr` - a D-Bus string. D-Bus strings are always UTF-8 and do not contain null characters.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149135,"byte_end":149239,"line_start":38,"line_end":38,"column_start":1,"column_end":105}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149240,"byte_end":149243,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! `&[T] where T: FixedArray` - a D-Bus array of integers or f64.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149244,"byte_end":149310,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149311,"byte_end":149314,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! `Array<T, Iter> where T: Get` - a D-Bus array, maximum flexibility. Implements Iterator so you can easily","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149315,"byte_end":149424,"line_start":42,"line_end":42,"column_start":1,"column_end":110}},{"value":"! collect it into, e g, a `Vec`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149425,"byte_end":149459,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149460,"byte_end":149463,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! `Variant<T> where T: Get` - a D-Bus variant. Use this type of Variant if you know the inner type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149464,"byte_end":149565,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149566,"byte_end":149569,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! `Variant<Iter>` - a D-Bus variant. This type of Variant allows you to examine the inner type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149570,"byte_end":149667,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149668,"byte_end":149671,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! `(T1, T2) where T1: Get, T2: Get` - tuples are D-Bus structs. Implemented up to 12.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149672,"byte_end":149759,"line_start":49,"line_end":49,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149760,"byte_end":149763,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! `Dict<K, V, Iter> where K: Get + DictKey, V: Get` - A D-Bus dict (array of dict entries). Implements Iterator so you can easily","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149764,"byte_end":149895,"line_start":51,"line_end":51,"column_start":1,"column_end":132}},{"value":"! collect it into, e g, a `HashMap`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149896,"byte_end":149934,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149935,"byte_end":149938,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! `Path` - a D-Bus object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149939,"byte_end":149972,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149973,"byte_end":149976,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! `Signature` - a D-Bus signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":149977,"byte_end":150013,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150014,"byte_end":150017,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! `OwnedFd` - a file descriptor sent from the remote side.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150018,"byte_end":150078,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150079,"byte_end":150082,"line_start":59,"line_end":59,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":954},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":166971,"byte_end":166974,"line_start":13,"line_end":13,"column_start":11,"column_end":14},"name":"Arg","qualname":"::arg::msgarg::Arg","value":"Arg","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"decl_id":null,"docs":" Types that can represent a D-Bus message argument implement this trait.","sig":null,"attributes":[{"value":"/ Types that can represent a D-Bus message argument implement this trait.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":166814,"byte_end":166889,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":166890,"byte_end":166893,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Types should also implement either Append or Get to be useful.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":166894,"byte_end":166960,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":955},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167039,"byte_end":167047,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"ARG_TYPE","qualname":"::arg::msgarg::Arg::ARG_TYPE","value":"ArgType","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The corresponding D-Bus argument type code.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus argument type code.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":166981,"byte_end":167028,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167127,"byte_end":167136,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"signature","qualname":"::arg::msgarg::Arg::signature","value":"fn () -> Signature<'static>","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":" The corresponding D-Bus type signature for this type.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus type signature for this type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167062,"byte_end":167119,"line_start":16,"line_end":16,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":957},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167222,"byte_end":167228,"line_start":21,"line_end":21,"column_start":11,"column_end":17},"name":"ArgAll","qualname":"::arg::msgarg::ArgAll","value":"ArgAll","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" Helper trait to introspect many arguments.\n","sig":null,"attributes":[{"value":"/ Helper trait to introspect many arguments.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167165,"byte_end":167211,"line_start":20,"line_end":20,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":958},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167422,"byte_end":167426,"line_start":24,"line_end":24,"column_start":10,"column_end":14},"name":"strs","qualname":"::arg::msgarg::ArgAll::strs","value":"type strs;","parent":{"krate":0,"index":957},"children":[],"decl_id":null,"docs":" A tuple of &static str. Used for introspection.\n","sig":null,"attributes":[{"value":"/ A tuple of &static str. Used for introspection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167235,"byte_end":167286,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167291,"byte_end":167321,"line_start":23,"line_end":23,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167521,"byte_end":167529,"line_start":26,"line_end":26,"column_start":8,"column_end":16},"name":"strs_sig","qualname":"::arg::msgarg::ArgAll::strs_sig","value":"fn <F> (a: Self::strs, f: F) -> ()","parent":{"krate":0,"index":957},"children":[],"decl_id":null,"docs":" Enumerates all arguments with their signatures (introspection helper method).\n","sig":null,"attributes":[{"value":"/ Enumerates all arguments with their signatures (introspection helper method).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167432,"byte_end":167513,"line_start":25,"line_end":25,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":961},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167688,"byte_end":167694,"line_start":30,"line_end":30,"column_start":11,"column_end":17},"name":"Append","qualname":"::arg::msgarg::Append","value":"Append","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"decl_id":null,"docs":" Types that can be appended to a message as arguments implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be appended to a message as arguments implement this trait.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167599,"byte_end":167677,"line_start":29,"line_end":29,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167761,"byte_end":167767,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::Append::append","value":"fn (self, ia: &mut IterAppend) -> ()","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" Performs the append operation by consuming self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by consuming self.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167701,"byte_end":167753,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167905,"byte_end":167918,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"append_by_ref","qualname":"::arg::msgarg::Append::append_by_ref","value":"fn (&self, _: &mut IterAppend) -> ()","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" Performs the append operation by borrowing self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by borrowing self.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167845,"byte_end":167897,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":964},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168016,"byte_end":168025,"line_start":39,"line_end":39,"column_start":11,"column_end":20},"name":"AppendAll","qualname":"::arg::msgarg::AppendAll","value":"AppendAll","parent":null,"children":[{"krate":0,"index":965}],"decl_id":null,"docs":" Helper trait to append many arguments to a message.\n","sig":null,"attributes":[{"value":"/ Helper trait to append many arguments to a message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":167950,"byte_end":168005,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168092,"byte_end":168098,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::AppendAll::append","value":"fn (&self, _: &mut IterAppend) -> ()","parent":{"krate":0,"index":964},"children":[],"decl_id":null,"docs":" Performs the append operation by borrowing self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by borrowing self.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168032,"byte_end":168084,"line_start":40,"line_end":40,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":966},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168222,"byte_end":168225,"line_start":45,"line_end":45,"column_start":11,"column_end":14},"name":"Get","qualname":"::arg::msgarg::Get","value":"Get<'a>: Sized","parent":null,"children":[{"krate":0,"index":968}],"decl_id":null,"docs":" Types that can be retrieved from a message as arguments implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be retrieved from a message as arguments implement this trait.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168130,"byte_end":168211,"line_start":44,"line_end":44,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168282,"byte_end":168285,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"get","qualname":"::arg::msgarg::Get::get","value":"fn (i: &mut Iter<'a>) -> Option<Self>","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" Performs the get operation.\n","sig":null,"attributes":[{"value":"/ Performs the get operation.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168243,"byte_end":168274,"line_start":46,"line_end":46,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":969},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168389,"byte_end":168396,"line_start":51,"line_end":51,"column_start":11,"column_end":18},"name":"ReadAll","qualname":"::arg::msgarg::ReadAll","value":"ReadAll: Sized","parent":null,"children":[{"krate":0,"index":970}],"decl_id":null,"docs":" Helper trait to read all arguments from a message.\n","sig":null,"attributes":[{"value":"/ Helper trait to read all arguments from a message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168324,"byte_end":168378,"line_start":50,"line_end":50,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168450,"byte_end":168454,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"read","qualname":"::arg::msgarg::ReadAll::read","value":"fn (i: &mut Iter) -> Result<Self, TypeMismatchError>","parent":{"krate":0,"index":969},"children":[],"decl_id":null,"docs":" Performs the read operation.\n","sig":null,"attributes":[{"value":"/ Performs the read operation.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168410,"byte_end":168442,"line_start":52,"line_end":52,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":971},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168566,"byte_end":168572,"line_start":58,"line_end":58,"column_start":11,"column_end":17},"name":"RefArg","qualname":"::arg::msgarg::RefArg","value":"RefArg: fmt::Debug","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":984}],"decl_id":null,"docs":" Object safe version of Arg + Append + Get.\n","sig":null,"attributes":[{"value":"/ Object safe version of Arg + Append + Get.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168509,"byte_end":168555,"line_start":57,"line_end":57,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168646,"byte_end":168654,"line_start":60,"line_end":60,"column_start":8,"column_end":16},"name":"arg_type","qualname":"::arg::msgarg::RefArg::arg_type","value":"fn (&self) -> ArgType","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" The corresponding D-Bus argument type code.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus argument type code.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168591,"byte_end":168638,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168743,"byte_end":168752,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"signature","qualname":"::arg::msgarg::RefArg::signature","value":"fn (&self) -> Signature<'static>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" The corresponding D-Bus type signature for this type.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus type signature for this type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168678,"byte_end":168735,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168829,"byte_end":168835,"line_start":64,"line_end":64,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::RefArg::append","value":"fn (&self, _: &mut IterAppend) -> ()","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Performs the append operation.\n","sig":null,"attributes":[{"value":"/ Performs the append operation.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168787,"byte_end":168821,"line_start":63,"line_end":63,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169378,"byte_end":169384,"line_start":73,"line_end":73,"column_start":8,"column_end":14},"name":"as_any","qualname":"::arg::msgarg::RefArg::as_any","value":"fn (&self) -> &dyn any::Any","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Transforms this argument to Any (which can be downcasted to read the current value).","sig":null,"attributes":[{"value":"/ Transforms this argument to Any (which can be downcasted to read the current value).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168868,"byte_end":168956,"line_start":65,"line_end":65,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168961,"byte_end":168964,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ If the type is an array, and the element type is byte, numeric, boolean, or string, then the","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168969,"byte_end":169065,"line_start":67,"line_end":67,"column_start":5,"column_end":101}},{"value":"/ representation is guaranteed to be a Vec<T>. Arrays of structs, dicts, and so on are not","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169070,"byte_end":169162,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ safe to use with this.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169167,"byte_end":169193,"line_start":69,"line_end":69,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169198,"byte_end":169201,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note: The internal representation of complex types (Dict, Struct) is unstable","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169206,"byte_end":169287,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ and as_any should not be relied upon for these types. Use as_iter instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169292,"byte_end":169370,"line_start":72,"line_end":72,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170096,"byte_end":170106,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::arg::msgarg::RefArg::as_any_mut","value":"fn (&mut self) -> &mut dyn any::Any","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Transforms this argument to Any (which can be downcasted to read the current value).","sig":null,"attributes":[{"value":"/ Transforms this argument to Any (which can be downcasted to read the current value).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169434,"byte_end":169522,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169527,"byte_end":169530,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ If the type is an array, and the element type is byte, numeric, boolean, or string, then the","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169535,"byte_end":169631,"line_start":76,"line_end":76,"column_start":5,"column_end":101}},{"value":"/ representation is guaranteed to be a Vec<T>. Arrays of structs, dicts, and so on are not","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169636,"byte_end":169728,"line_start":77,"line_end":77,"column_start":5,"column_end":97}},{"value":"/ safe to use with this.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169733,"byte_end":169759,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169764,"byte_end":169767,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note: The internal representation of complex types (Dict, Struct) is unstable","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169772,"byte_end":169853,"line_start":80,"line_end":80,"column_start":5,"column_end":86}},{"value":"/ and as_any should not be relied upon for these types. Use as_iter instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169858,"byte_end":169936,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169941,"byte_end":169944,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169949,"byte_end":169960,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ Will panic if the interior cannot be made mutable, e g, if encapsulated","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":169965,"byte_end":170040,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ inside a Rc with a reference count > 1.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170045,"byte_end":170088,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170312,"byte_end":170318,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"as_i64","qualname":"::arg::msgarg::RefArg::as_i64","value":"fn (&self) -> Option<i64>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the argument as an i64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an i64.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170164,"byte_end":170203,"line_start":87,"line_end":87,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170208,"byte_end":170211,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, Int64, UnixFd.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170216,"byte_end":170290,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170295,"byte_end":170304,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170495,"byte_end":170501,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"as_u64","qualname":"::arg::msgarg::RefArg::as_u64","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the argument as an u64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an u64.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170354,"byte_end":170393,"line_start":92,"line_end":92,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170398,"byte_end":170401,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, UInt64.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170406,"byte_end":170473,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170478,"byte_end":170487,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170678,"byte_end":170684,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"as_f64","qualname":"::arg::msgarg::RefArg::as_f64","value":"fn (&self) -> Option<f64>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the argument as an f64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an f64.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170537,"byte_end":170576,"line_start":97,"line_end":97,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170581,"byte_end":170584,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, Double.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170589,"byte_end":170656,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170661,"byte_end":170670,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170838,"byte_end":170844,"line_start":106,"line_end":106,"column_start":8,"column_end":14},"name":"as_str","qualname":"::arg::msgarg::RefArg::as_str","value":"fn (&self) -> Option<&str>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the argument as a str.","sig":null,"attributes":[{"value":"/ Try to read the argument as a str.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170720,"byte_end":170758,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170763,"byte_end":170766,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Works for: String, ObjectPath, Signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170771,"byte_end":170816,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170821,"byte_end":170830,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171055,"byte_end":171062,"line_start":112,"line_end":112,"column_start":8,"column_end":15},"name":"as_iter","qualname":"::arg::msgarg::RefArg::as_iter","value":"fn <'a> (&'a self) -> Option<Box<dyn Iterator<Item = &'a dyn RefArg> + 'a>>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the argument as an iterator.","sig":null,"attributes":[{"value":"/ Try to read the argument as an iterator.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170881,"byte_end":170925,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170930,"byte_end":170933,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Works for: Array/Dict, Struct, Variant.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170938,"byte_end":170981,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ For Dicts, keys and values are interleaved.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":170986,"byte_end":171033,"line_start":110,"line_end":110,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171038,"byte_end":171047,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171377,"byte_end":171392,"line_start":118,"line_end":118,"column_start":8,"column_end":23},"name":"as_static_inner","qualname":"::arg::msgarg::RefArg::as_static_inner","value":"fn (&self, _index: usize) -> Option<&(dyn RefArg + 'static)>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Try to read the inner of an argument, as another argument, specifying an index.","sig":null,"attributes":[{"value":"/ Try to read the inner of an argument, as another argument, specifying an index.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171145,"byte_end":171228,"line_start":113,"line_end":113,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171233,"byte_end":171236,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Works for: Variant, Array, Struct, Dict.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171241,"byte_end":171285,"line_start":115,"line_end":115,"column_start":5,"column_end":49}},{"value":"/ For Dicts, even indices gets a key, odd indices gets a value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171290,"byte_end":171355,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171360,"byte_end":171369,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171796,"byte_end":171805,"line_start":125,"line_end":125,"column_start":8,"column_end":17},"name":"box_clone","qualname":"::arg::msgarg::RefArg::box_clone","value":"fn (&self) -> Box<dyn RefArg + 'static>","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":" Deep clone of the RefArg, causing the result to be 'static.","sig":null,"attributes":[{"value":"/ Deep clone of the RefArg, causing the result to be 'static.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171483,"byte_end":171546,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171551,"byte_end":171554,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Usable as an escape hatch in case of lifetime problems with RefArg.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171559,"byte_end":171630,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171635,"byte_end":171638,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ In case of complex types (Array, Dict, Struct), the clone is not guaranteed","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171643,"byte_end":171722,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"/ to have the same internal representation as the original.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171727,"byte_end":171788,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172088,"byte_end":172092,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"cast","qualname":"::arg::msgarg::cast","value":"fn <'a, T> (a: &'a (dyn RefArg + 'static)) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Cast a RefArg as a specific type (shortcut for any + downcast)\n","sig":null,"attributes":[{"value":"/ Cast a RefArg as a specific type (shortcut for any + downcast)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172004,"byte_end":172070,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172071,"byte_end":172080,"line_start":133,"line_end":133,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":991},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172416,"byte_end":172424,"line_start":142,"line_end":142,"column_start":8,"column_end":16},"name":"cast_mut","qualname":"::arg::msgarg::cast_mut","value":"fn <'a, T> (a: &'a mut (dyn RefArg + 'static)) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" Cast a RefArg as a specific type (shortcut for any_mut + downcast_mut)","sig":null,"attributes":[{"value":"/ Cast a RefArg as a specific type (shortcut for any_mut + downcast_mut)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172188,"byte_end":172262,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172263,"byte_end":172266,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172267,"byte_end":172278,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ Will panic if the interior cannot be made mutable, e g, if encapsulated","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172279,"byte_end":172354,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ inside a Rc with a reference count > 1.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172355,"byte_end":172398,"line_start":140,"line_end":140,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172399,"byte_end":172408,"line_start":141,"line_end":141,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":994},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172831,"byte_end":172841,"line_start":148,"line_end":148,"column_start":18,"column_end":28},"name":"FixedArray","qualname":"::arg::msgarg::FixedArray","value":"FixedArray: Arg + 'static + Clone + Copy","parent":null,"children":[],"decl_id":null,"docs":" If a type implements this trait, it means the size and alignment is the same\n as in D-Bus. This means that you can quickly append and get slices of this type.","sig":null,"attributes":[{"value":"/ If a type implements this trait, it means the size and alignment is the same","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172532,"byte_end":172612,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ as in D-Bus. This means that you can quickly append and get slices of this type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172613,"byte_end":172697,"line_start":145,"line_end":145,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172698,"byte_end":172701,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Note: Booleans do not implement this trait because D-Bus booleans are 4 bytes and Rust booleans are 1 byte.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172702,"byte_end":172813,"line_start":147,"line_end":147,"column_start":1,"column_end":112}}]},{"kind":"Trait","id":{"krate":0,"index":995},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172958,"byte_end":172965,"line_start":151,"line_end":151,"column_start":11,"column_end":18},"name":"DictKey","qualname":"::arg::msgarg::DictKey","value":"DictKey: Arg","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used as keys in a dict type implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be used as keys in a dict type implement this trait.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172876,"byte_end":172947,"line_start":150,"line_end":150,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196594,"byte_end":196601,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Variant","qualname":"::arg::variantstruct_impl::Variant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper to specify a D-Bus variant.","sig":null,"attributes":[{"value":"/ A simple wrapper to specify a D-Bus variant.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196446,"byte_end":196494,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196495,"byte_end":196498,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and examples.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196499,"byte_end":196582,"line_start":8,"line_end":8,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196725,"byte_end":196735,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"new_refarg","qualname":"<Variant<Box<RefArg>>>::new_refarg","value":"fn <'a> (i: &mut Iter<'a>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new refarg from an Iter. Mainly for internal use.\n","sig":null,"attributes":[{"value":"/ Creates a new refarg from an Iter. Mainly for internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196650,"byte_end":196713,"line_start":12,"line_end":12,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4753},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208438,"byte_end":208442,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"Dict","qualname":"::arg::array_impl::Dict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Append a D-Bus dict type (i e, an array of dict entries).","sig":null,"attributes":[{"value":"/ Append a D-Bus dict type (i e, an array of dict entries).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208273,"byte_end":208334,"line_start":124,"line_end":124,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208335,"byte_end":208338,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and alternatives.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208339,"byte_end":208426,"line_start":126,"line_end":126,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208813,"byte_end":208816,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<Dict>::new","value":"fn <J> (j: J) -> Dict<'a, K, V, I>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Dict from an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new Dict from an iterator.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208761,"byte_end":208801,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4778},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213114,"byte_end":213119,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"Array","qualname":"::arg::array_impl::Array","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a D-Bus Array. Maximum flexibility (wraps an iterator of items to append).","sig":null,"attributes":[{"value":"/ Represents a D-Bus Array. Maximum flexibility (wraps an iterator of items to append).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212921,"byte_end":213010,"line_start":246,"line_end":246,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213011,"byte_end":213014,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and alternatives.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213015,"byte_end":213102,"line_start":248,"line_end":248,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213285,"byte_end":213288,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"fn <J> (j: J) -> Array<'a, T, I>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Array from an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new Array from an iterator.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213232,"byte_end":213273,"line_start":252,"line_end":252,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1471},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"messageitem","qualname":"::arg::messageitem","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":4811},{"krate":0,"index":4821},{"krate":0,"index":4820},{"krate":0,"index":4818},{"krate":0,"index":4823},{"krate":0,"index":4842},{"krate":0,"index":4840},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4826},{"krate":0,"index":1494},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":4844},{"krate":0,"index":4863},{"krate":0,"index":4861},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4847},{"krate":0,"index":1506},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":4865},{"krate":0,"index":4929},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4919},{"krate":0,"index":4917},{"krate":0,"index":1518},{"krate":0,"index":1540},{"krate":0,"index":4932},{"krate":0,"index":4934},{"krate":0,"index":4938},{"krate":0,"index":4940},{"krate":0,"index":4944},{"krate":0,"index":4946},{"krate":0,"index":4950},{"krate":0,"index":4952},{"krate":0,"index":4956},{"krate":0,"index":4958},{"krate":0,"index":4962},{"krate":0,"index":4964},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4980},{"krate":0,"index":4982},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1567},{"krate":0,"index":1571},{"krate":0,"index":1575},{"krate":0,"index":1579},{"krate":0,"index":1583},{"krate":0,"index":1587},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1600},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1624},{"krate":0,"index":1635},{"krate":0,"index":1639}],"decl_id":null,"docs":" MessageItem - old, enum design that is used as parameters and return values from\n method calls, or as data added to a signal.","sig":null,"attributes":[{"value":"! MessageItem - old, enum design that is used as parameters and return values from","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224276,"byte_end":224360,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"! method calls, or as data added to a signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224361,"byte_end":224408,"line_start":2,"line_end":2,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224409,"byte_end":224412,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! Note that the newer generic design (see `arg` module) is, in general, both faster","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224413,"byte_end":224498,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"! and smaller than MessageItem, and should be your first hand choice","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224499,"byte_end":224569,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"! whenever applicable. There is also a trait object design called `RefArg` in","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224570,"byte_end":224649,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"! case the generic design is too inflexible.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":224650,"byte_end":224696,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4812},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225130,"byte_end":225140,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"EmptyArray","qualname":"::arg::messageitem::ArrayError::EmptyArray","value":"ArrayError::EmptyArray","parent":{"krate":0,"index":4811},"children":[],"decl_id":null,"docs":" The array is empty.\n","sig":null,"attributes":[{"value":"/ The array is empty.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225102,"byte_end":225125,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4814},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225204,"byte_end":225225,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"DifferentElementTypes","qualname":"::arg::messageitem::ArrayError::DifferentElementTypes","value":"ArrayError::DifferentElementTypes","parent":{"krate":0,"index":4811},"children":[],"decl_id":null,"docs":" The array is composed of different element types.\n","sig":null,"attributes":[{"value":"/ The array is composed of different element types.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225146,"byte_end":225199,"line_start":25,"line_end":25,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4816},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225293,"byte_end":225309,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::arg::messageitem::ArrayError::InvalidSignature","value":"ArrayError::InvalidSignature","parent":{"krate":0,"index":4811},"children":[],"decl_id":null,"docs":" The supplied signature is not a valid array signature\n","sig":null,"attributes":[{"value":"/ The supplied signature is not a valid array signature","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225231,"byte_end":225288,"line_start":27,"line_end":27,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":4811},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225085,"byte_end":225095,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"ArrayError","qualname":"::arg::messageitem::ArrayError","value":"ArrayError::{EmptyArray, DifferentElementTypes, InvalidSignature}","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4814},{"krate":0,"index":4816}],"decl_id":null,"docs":" Errors that can happen when creating a MessageItem::Array.\n","sig":null,"attributes":[{"value":"/ Errors that can happen when creating a MessageItem::Array.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225013,"byte_end":225075,"line_start":21,"line_end":21,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4823},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225446,"byte_end":225462,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"MessageItemArray","qualname":"::arg::messageitem::MessageItemArray","value":"MessageItemArray {  }","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4825}],"decl_id":null,"docs":" An array of MessageItem where every MessageItem is of the same type.\n","sig":null,"attributes":[{"value":"/ An array of MessageItem where every MessageItem is of the same type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225362,"byte_end":225434,"line_start":33,"line_end":33,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225757,"byte_end":225760,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<MessageItemArray>::new","value":"fn (v: Vec<MessageItem>, sig: Signature<'static>) -> Result<MessageItemArray, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array where every element has the supplied signature.","sig":null,"attributes":[{"value":"/ Creates a new array where every element has the supplied signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225585,"byte_end":225656,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225661,"byte_end":225664,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Signature is the full array signature, not the signature of the element.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225669,"byte_end":225745,"line_start":43,"line_end":43,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226595,"byte_end":226604,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItemArray>::signature","value":"fn (&self) -> &Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Signature of array (full array signature)\n","sig":null,"attributes":[{"value":"/ Signature of array (full array signature)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226538,"byte_end":226583,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226766,"byte_end":226774,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MessageItemArray>::into_vec","value":"fn (self) -> Vec<MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the MessageItemArray in order to allow you to modify the individual items of the array.\n","sig":null,"attributes":[{"value":"/ Consumes the MessageItemArray in order to allow you to modify the individual items of the array.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226654,"byte_end":226754,"line_start":68,"line_end":68,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":4844},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227314,"byte_end":227329,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"MessageItemDict","qualname":"::arg::messageitem::MessageItemDict","value":"MessageItemDict {  }","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4846}],"decl_id":null,"docs":" An array of MessageItem where every MessageItem is of the same type.\n","sig":null,"attributes":[{"value":"/ An array of MessageItem where every MessageItem is of the same type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227230,"byte_end":227302,"line_start":86,"line_end":86,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227564,"byte_end":227567,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<MessageItemDict>::new","value":"fn (v: Vec<(MessageItem, MessageItem)>, keysig: Signature<'static>, valuesig: Signature<'static>) -> Result<MessageItemDict, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dict where every key and value elements have the supplied signature.\n","sig":null,"attributes":[{"value":"/ Creates a new dict where every key and value elements have the supplied signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227466,"byte_end":227552,"line_start":94,"line_end":94,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228267,"byte_end":228276,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItemDict>::signature","value":"fn (&self) -> &Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Signature of array (full array signature)\n","sig":null,"attributes":[{"value":"/ Signature of array (full array signature)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228210,"byte_end":228255,"line_start":111,"line_end":111,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228436,"byte_end":228444,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MessageItemDict>::into_vec","value":"fn (self) -> Vec<(MessageItem, MessageItem)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the MessageItemDict in order to allow you to modify the individual items of the dict.\n","sig":null,"attributes":[{"value":"/ Consumes the MessageItemDict in order to allow you to modify the individual items of the dict.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228326,"byte_end":228424,"line_start":114,"line_end":114,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4866},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229548,"byte_end":229553,"line_start":146,"line_end":146,"column_start":5,"column_end":10},"name":"Array","qualname":"::arg::messageitem::MessageItem::Array","value":"MessageItem::Array(MessageItemArray)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus array requires all elements to be of the same type.\n All elements must match the Signature.\n","sig":null,"attributes":[{"value":"/ A D-Bus array requires all elements to be of the same type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229433,"byte_end":229496,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/ All elements must match the Signature.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229501,"byte_end":229543,"line_start":145,"line_end":145,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4869},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229638,"byte_end":229644,"line_start":148,"line_end":148,"column_start":5,"column_end":11},"name":"Struct","qualname":"::arg::messageitem::MessageItem::Struct","value":"MessageItem::Struct(Vec<MessageItem>)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus struct allows for values of different types.\n","sig":null,"attributes":[{"value":"/ A D-Bus struct allows for values of different types.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229577,"byte_end":229633,"line_start":147,"line_end":147,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4872},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229769,"byte_end":229776,"line_start":151,"line_end":151,"column_start":5,"column_end":12},"name":"Variant","qualname":"::arg::messageitem::MessageItem::Variant","value":"MessageItem::Variant(Box<MessageItem>)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus variant is a wrapper around another `MessageItem`, which\n can be of any type.\n","sig":null,"attributes":[{"value":"/ A D-Bus variant is a wrapper around another `MessageItem`, which","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229668,"byte_end":229736,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/ can be of any type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229741,"byte_end":229764,"line_start":150,"line_end":150,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4875},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229965,"byte_end":229969,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"Dict","qualname":"::arg::messageitem::MessageItem::Dict","value":"MessageItem::Dict(MessageItemDict)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus dictionary. All keys and values are required to be of the same type.\n Not all types can be dictionary keys, but all can be dictionary values.\n","sig":null,"attributes":[{"value":"/ A D-Bus dictionary. All keys and values are required to be of the same type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229800,"byte_end":229880,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ Not all types can be dictionary keys, but all can be dictionary values.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229885,"byte_end":229960,"line_start":153,"line_end":153,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4878},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230104,"byte_end":230114,"line_start":157,"line_end":157,"column_start":5,"column_end":15},"name":"ObjectPath","qualname":"::arg::messageitem::MessageItem::ObjectPath","value":"MessageItem::ObjectPath(Path<'static>)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus objectpath requires its content to be a valid objectpath,\n so this cannot be any string.\n","sig":null,"attributes":[{"value":"/ A D-Bus objectpath requires its content to be a valid objectpath,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229992,"byte_end":230061,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ so this cannot be any string.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230066,"byte_end":230099,"line_start":156,"line_end":156,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4881},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230250,"byte_end":230259,"line_start":160,"line_end":160,"column_start":5,"column_end":14},"name":"Signature","qualname":"::arg::messageitem::MessageItem::Signature","value":"MessageItem::Signature(Signature<'static>)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus signature requires its content to be a valid type signature,\n so this cannot be any string.\n","sig":null,"attributes":[{"value":"/ A D-Bus signature requires its content to be a valid type signature,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230135,"byte_end":230207,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ so this cannot be any string.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230212,"byte_end":230245,"line_start":159,"line_end":159,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4884},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230445,"byte_end":230448,"line_start":163,"line_end":163,"column_start":5,"column_end":8},"name":"Str","qualname":"::arg::messageitem::MessageItem::Str","value":"MessageItem::Str(String)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus String is zero terminated, so no \\0 s in the String, please.\n (D-Bus strings are also - like Rust strings - required to be valid UTF-8.)\n","sig":null,"attributes":[{"value":"/ A D-Bus String is zero terminated, so no \\0 s in the String, please.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230285,"byte_end":230357,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ (D-Bus strings are also - like Rust strings - required to be valid UTF-8.)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230362,"byte_end":230440,"line_start":162,"line_end":162,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4887},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230492,"byte_end":230496,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Bool","qualname":"::arg::messageitem::MessageItem::Bool","value":"MessageItem::Bool(bool)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus boolean type.\n","sig":null,"attributes":[{"value":"/ A D-Bus boolean type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230462,"byte_end":230487,"line_start":164,"line_end":164,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4890},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230545,"byte_end":230549,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Byte","qualname":"::arg::messageitem::MessageItem::Byte","value":"MessageItem::Byte(u8)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 8 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 8 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230508,"byte_end":230540,"line_start":166,"line_end":166,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4893},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230595,"byte_end":230600,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Int16","qualname":"::arg::messageitem::MessageItem::Int16","value":"MessageItem::Int16(i16)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus signed 16 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 16 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230559,"byte_end":230590,"line_start":168,"line_end":168,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4896},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230647,"byte_end":230652,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"Int32","qualname":"::arg::messageitem::MessageItem::Int32","value":"MessageItem::Int32(i32)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus signed 32 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 32 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230611,"byte_end":230642,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4899},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230699,"byte_end":230704,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"Int64","qualname":"::arg::messageitem::MessageItem::Int64","value":"MessageItem::Int64(i64)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus signed 64 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 64 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230663,"byte_end":230694,"line_start":172,"line_end":172,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4902},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230753,"byte_end":230759,"line_start":175,"line_end":175,"column_start":5,"column_end":11},"name":"UInt16","qualname":"::arg::messageitem::MessageItem::UInt16","value":"MessageItem::UInt16(u16)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 16 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 16 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230715,"byte_end":230748,"line_start":174,"line_end":174,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4905},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230808,"byte_end":230814,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"UInt32","qualname":"::arg::messageitem::MessageItem::UInt32","value":"MessageItem::UInt32(u32)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 32 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 32 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230770,"byte_end":230803,"line_start":176,"line_end":176,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4908},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230863,"byte_end":230869,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"UInt64","qualname":"::arg::messageitem::MessageItem::UInt64","value":"MessageItem::UInt64(u64)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 64 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 64 bit type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230825,"byte_end":230858,"line_start":178,"line_end":178,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4911},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230943,"byte_end":230949,"line_start":181,"line_end":181,"column_start":5,"column_end":11},"name":"Double","qualname":"::arg::messageitem::MessageItem::Double","value":"MessageItem::Double(f64)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" A D-Bus IEEE-754 double-precision floating point type.\n","sig":null,"attributes":[{"value":"/ A D-Bus IEEE-754 double-precision floating point type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230880,"byte_end":230938,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4914},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231097,"byte_end":231103,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"UnixFd","qualname":"::arg::messageitem::MessageItem::UnixFd","value":"MessageItem::UnixFd(OwnedFd)","parent":{"krate":0,"index":4865},"children":[],"decl_id":null,"docs":" D-Bus allows for sending file descriptors, which can be used to\n set up SHM, unix pipes, or other communication channels.\n","sig":null,"attributes":[{"value":"/ D-Bus allows for sending file descriptors, which can be used to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":230960,"byte_end":231027,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/ set up SHM, unix pipes, or other communication channels.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231032,"byte_end":231092,"line_start":183,"line_end":183,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4865},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229415,"byte_end":229426,"line_start":143,"line_end":143,"column_start":10,"column_end":21},"name":"MessageItem","qualname":"::arg::messageitem::MessageItem","value":"MessageItem::{Array, Struct, Variant, Dict, ObjectPath, Signature, Str, Bool, Byte, Int16, Int32, Int64, UInt16, UInt32, UInt64, Double, UnixFd}","parent":null,"children":[{"krate":0,"index":4866},{"krate":0,"index":4869},{"krate":0,"index":4872},{"krate":0,"index":4875},{"krate":0,"index":4878},{"krate":0,"index":4881},{"krate":0,"index":4884},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4902},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4914}],"decl_id":null,"docs":" MessageItem - used as parameters and return values from\n method calls, or as data added to a signal (old, enum version).","sig":null,"attributes":[{"value":"/ MessageItem - used as parameters and return values from","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229049,"byte_end":229108,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ method calls, or as data added to a signal (old, enum version).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229109,"byte_end":229176,"line_start":137,"line_end":137,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229177,"byte_end":229180,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Note that the newer generic design (see `arg` module) is both faster","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229181,"byte_end":229253,"line_start":139,"line_end":139,"column_start":1,"column_end":73}},{"value":"/ and less error prone than MessageItem, and should be your first hand choice","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229254,"byte_end":229333,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ whenever applicable.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":229334,"byte_end":229358,"line_start":141,"line_end":141,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231201,"byte_end":231210,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItem>::signature","value":"fn (&self) -> Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Get the D-Bus Signature for this MessageItem.\n","sig":null,"attributes":[{"value":"/ Get the D-Bus Signature for this MessageItem.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231140,"byte_end":231189,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":232553,"byte_end":232561,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"arg_type","qualname":"<MessageItem>::arg_type","value":"fn (&self) -> arg::ArgType","parent":null,"children":[],"decl_id":null,"docs":" Get the arg type of this MessageItem.\n","sig":null,"attributes":[{"value":"/ Get the arg type of this MessageItem.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":232500,"byte_end":232541,"line_start":212,"line_end":212,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":233696,"byte_end":233705,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"from_dict","qualname":"<MessageItem>::from_dict","value":"fn <E, I> (i: I) -> Result<MessageItem, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)\n","sig":null,"attributes":[{"value":"/ Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":233561,"byte_end":233684,"line_start":235,"line_end":235,"column_start":5,"column_end":128}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234289,"byte_end":234298,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"new_array","qualname":"<MessageItem>::new_array","value":"fn (v: Vec<MessageItem>) -> Result<MessageItem, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an MessageItem::Array from a list of MessageItems.","sig":null,"attributes":[{"value":"/ Creates an MessageItem::Array from a list of MessageItems.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234075,"byte_end":234137,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234142,"byte_end":234145,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note: This requires `v` to be non-empty. See also","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234150,"byte_end":234203,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/ `MessageItem::from(&[T])`, which can handle empty arrays as well.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234208,"byte_end":234277,"line_start":248,"line_end":248,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234789,"byte_end":234797,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"new_dict","qualname":"<MessageItem>::new_dict","value":"fn (v: Vec<(MessageItem, MessageItem)>) -> Result<MessageItem, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an MessageItem::Dict from a list of MessageItem pairs.","sig":null,"attributes":[{"value":"/ Creates an MessageItem::Dict from a list of MessageItem pairs.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234564,"byte_end":234630,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234635,"byte_end":234638,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note: This requires `v` to be non-empty. See also","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234643,"byte_end":234696,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/ `MessageItem::from(&[(T1, T2)])`, which can handle empty arrays as well.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":234701,"byte_end":234777,"line_start":260,"line_end":260,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235360,"byte_end":235365,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"inner","qualname":"<MessageItem>::inner","value":"fn <'a, T> (&'a self) -> Result<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner value of a `MessageItem`","sig":null,"attributes":[{"value":"/ Get the inner value of a `MessageItem`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235095,"byte_end":235137,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235142,"byte_end":235145,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235150,"byte_end":235163,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235168,"byte_end":235175,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use dbus::arg::messageitem::MessageItem;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235180,"byte_end":235224,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ let m: MessageItem = 5i64.into();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235229,"byte_end":235266,"line_start":274,"line_end":274,"column_start":5,"column_end":42}},{"value":"/ let s: i64 = m.inner().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235271,"byte_end":235307,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s, 5i64);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235312,"byte_end":235336,"line_start":276,"line_end":276,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235341,"byte_end":235348,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235948,"byte_end":235952,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"peel","qualname":"<MessageItem>::peel","value":"fn (&self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `MessageItem` of a `MessageItem::Variant`","sig":null,"attributes":[{"value":"/ Get the underlying `MessageItem` of a `MessageItem::Variant`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235471,"byte_end":235535,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235540,"byte_end":235543,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Nested `MessageItem::Variant`s are unwrapped recursively until a","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235548,"byte_end":235616,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ non-`Variant` is found.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235621,"byte_end":235648,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235653,"byte_end":235656,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235661,"byte_end":235674,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235679,"byte_end":235686,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use dbus::arg::messageitem::MessageItem;","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235691,"byte_end":235735,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ let nested = MessageItem::Variant(Box::new(6i64.into()));","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235740,"byte_end":235801,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/ let flat: MessageItem = 6i64.into();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235806,"byte_end":235846,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ assert_ne!(&nested, &flat);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235851,"byte_end":235882,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(nested.peel(), &flat);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235887,"byte_end":235924,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":235929,"byte_end":235936,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1617},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246188,"byte_end":246193,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"Props","qualname":"::arg::messageitem::Props","value":"Props {  }","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623}],"decl_id":null,"docs":" Client side properties - get and set properties on a remote application.\n","sig":null,"attributes":[{"value":"/ Client side properties - get and set properties on a remote application.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246100,"byte_end":246176,"line_start":547,"line_end":547,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246383,"byte_end":246386,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"new","qualname":"<Props>::new","value":"fn <N, P, I> (conn: &'a Connection, name: N, path: P, interface: I, timeout_ms: i32) -> Props<'a>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Props.\n","sig":null,"attributes":[{"value":"/ Create a new Props.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246348,"byte_end":246371,"line_start":557,"line_end":557,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246802,"byte_end":246805,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"get","qualname":"<Props>::get","value":"fn (&self, propname: &str) -> Result<MessageItem, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a single property's value.\n","sig":null,"attributes":[{"value":"/ Get a single property's value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246756,"byte_end":246790,"line_start":569,"line_end":569,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":247561,"byte_end":247564,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"set","qualname":"<Props>::set","value":"fn (&self, propname: &str, value: MessageItem) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a single property's value.\n","sig":null,"attributes":[{"value":"/ Set a single property's value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":247515,"byte_end":247549,"line_start":585,"line_end":585,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":248082,"byte_end":248089,"line_start":596,"line_end":596,"column_start":12,"column_end":19},"name":"get_all","qualname":"<Props>::get_all","value":"fn (&self) -> Result<BTreeMap<String, MessageItem>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a map of all the properties' names and their values.\n","sig":null,"attributes":[{"value":"/ Get a map of all the properties' names and their values.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":248010,"byte_end":248070,"line_start":595,"line_end":595,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1635},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249118,"byte_end":249129,"line_start":620,"line_end":620,"column_start":12,"column_end":23},"name":"PropHandler","qualname":"::arg::messageitem::PropHandler","value":"PropHandler {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" Wrapper around Props that keeps a map of fetched properties.\n","sig":null,"attributes":[{"value":"/ Wrapper around Props that keeps a map of fetched properties.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249042,"byte_end":249106,"line_start":619,"line_end":619,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249282,"byte_end":249285,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"new","qualname":"<PropHandler>::new","value":"fn (p: Props) -> PropHandler","parent":null,"children":[],"decl_id":null,"docs":" Create a new PropHandler from a Props.\n","sig":null,"attributes":[{"value":"/ Create a new PropHandler from a Props.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249228,"byte_end":249270,"line_start":626,"line_end":626,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249447,"byte_end":249454,"line_start":632,"line_end":632,"column_start":12,"column_end":19},"name":"get_all","qualname":"<PropHandler>::get_all","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a map of all the properties' names and their values.\n","sig":null,"attributes":[{"value":"/ Get a map of all the properties' names and their values.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249375,"byte_end":249435,"line_start":631,"line_end":631,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249633,"byte_end":249640,"line_start":638,"line_end":638,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<PropHandler>::map_mut","value":"fn (&mut self) -> &mut BTreeMap<String, MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the PropHandler's fetched properties.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the PropHandler's fetched properties.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249553,"byte_end":249621,"line_start":637,"line_end":637,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249785,"byte_end":249788,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"map","qualname":"<PropHandler>::map","value":"fn (&self) -> &BTreeMap<String, MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the PropHandler's fetched properties.\n","sig":null,"attributes":[{"value":"/ Get a reference to the PropHandler's fetched properties.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249713,"byte_end":249773,"line_start":640,"line_end":640,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249895,"byte_end":249898,"line_start":644,"line_end":644,"column_start":12,"column_end":15},"name":"get","qualname":"<PropHandler>::get","value":"fn (&mut self, propname: &str) -> Result<&MessageItem, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a single property's value.\n","sig":null,"attributes":[{"value":"/ Get a single property's value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249849,"byte_end":249883,"line_start":643,"line_end":643,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":250149,"byte_end":250152,"line_start":651,"line_end":651,"column_start":12,"column_end":15},"name":"set","qualname":"<PropHandler>::set","value":"fn (&mut self, propname: &str, value: MessageItem) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a single property's value.\n","sig":null,"attributes":[{"value":"/ Set a single property's value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":250103,"byte_end":250137,"line_start":650,"line_end":650,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4986},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151001,"byte_end":151008,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"OwnedFd","qualname":"::arg::OwnedFd","value":"OwnedFd {  }","parent":null,"children":[{"krate":0,"index":4987}],"decl_id":null,"docs":" An RAII wrapper around Fd to ensure that file descriptor is closed\n when the scope ends.\n","sig":null,"attributes":[{"value":"/ An RAII wrapper around Fd to ensure that file descriptor is closed","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150854,"byte_end":150924,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/ when the scope ends.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150925,"byte_end":150949,"line_start":86,"line_end":86,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151302,"byte_end":151305,"line_start":97,"line_end":97,"column_start":19,"column_end":22},"name":"new","qualname":"<OwnedFd>::new","value":"fn (fd: RawFd) -> OwnedFd","parent":null,"children":[],"decl_id":null,"docs":" Create a new OwnedFd from a RawFd.","sig":null,"attributes":[{"value":"/ Create a new OwnedFd from a RawFd.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151047,"byte_end":151085,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151090,"byte_end":151093,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe, because you could potentially send in an invalid file descriptor,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151098,"byte_end":151192,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ or close it during the lifetime of this struct. This could potentially be unsound.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151197,"byte_end":151283,"line_start":96,"line_end":96,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151421,"byte_end":151428,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"into_fd","qualname":"<OwnedFd>::into_fd","value":"fn (self) -> RawFd","parent":null,"children":[],"decl_id":null,"docs":" Convert an OwnedFD back into a RawFd.\n","sig":null,"attributes":[{"value":"/ Convert an OwnedFD back into a RawFd.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151368,"byte_end":151409,"line_start":101,"line_end":101,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5000},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152224,"byte_end":152234,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"IterAppend","qualname":"::arg::IterAppend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper struct for appending one or more arguments to a Message.\n","sig":null,"attributes":[{"value":"/ Helper struct for appending one or more arguments to a Message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152145,"byte_end":152212,"line_start":140,"line_end":140,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152354,"byte_end":152357,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<IterAppend>::new","value":"fn (m: &'a mut Message) -> IterAppend<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IterAppend struct.\n","sig":null,"attributes":[{"value":"/ Creates a new IterAppend struct.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152306,"byte_end":152342,"line_start":144,"line_end":144,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152575,"byte_end":152581,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"append","qualname":"<IterAppend>::append","value":"fn <T> (&mut self, a: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends the argument.\n","sig":null,"attributes":[{"value":"/ Appends the argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152538,"byte_end":152563,"line_start":151,"line_end":151,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153633,"byte_end":153647,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"append_variant","qualname":"<IterAppend>::append_variant","value":"fn <F> (&mut self, inner_sig: &Signature, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a variant.","sig":null,"attributes":[{"value":"/ Low-level function to append a variant.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153186,"byte_end":153229,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153234,"byte_end":153237,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Variant` struct is not flexible enough -","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153242,"byte_end":153303,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Variant` parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153308,"byte_end":153403,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153408,"byte_end":153411,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\" you need to call \"append\" on","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153416,"byte_end":153505,"line_start":169,"line_end":169,"column_start":5,"column_end":94}},{"value":"/ the supplied `IterAppend` exactly once,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153510,"byte_end":153553,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/ and with a value which has the same signature as inner_sig.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153558,"byte_end":153621,"line_start":171,"line_end":171,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154232,"byte_end":154244,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"append_array","qualname":"<IterAppend>::append_array","value":"fn <F> (&mut self, inner_sig: &Signature, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append an array.","sig":null,"attributes":[{"value":"/ Low-level function to append an array.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153811,"byte_end":153853,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153858,"byte_end":153861,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Array` struct is not flexible enough -","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153866,"byte_end":153925,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply an `Array` parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":153930,"byte_end":154024,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154029,"byte_end":154032,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should only call \"append\" on","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154037,"byte_end":154131,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ the supplied `IterAppend` with values which has the same signature as inner_sig.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154136,"byte_end":154220,"line_start":182,"line_end":182,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154617,"byte_end":154630,"line_start":191,"line_end":191,"column_start":12,"column_end":25},"name":"append_struct","qualname":"<IterAppend>::append_struct","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a struct.","sig":null,"attributes":[{"value":"/ Low-level function to append a struct.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154406,"byte_end":154448,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154453,"byte_end":154456,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Use in case tuples are not flexible enough -","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154461,"byte_end":154509,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a tuple parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154514,"byte_end":154605,"line_start":190,"line_end":190,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155288,"byte_end":155305,"line_start":203,"line_end":203,"column_start":12,"column_end":29},"name":"append_dict_entry","qualname":"<IterAppend>::append_dict_entry","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a dict entry.","sig":null,"attributes":[{"value":"/ Low-level function to append a dict entry.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154749,"byte_end":154795,"line_start":195,"line_end":195,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154800,"byte_end":154803,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Dict` struct is not flexible enough -","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154808,"byte_end":154866,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Dict` parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154871,"byte_end":154963,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154968,"byte_end":154971,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should call \"append\" once","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":154976,"byte_end":155067,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ for the key, then once for the value. You should only call this function for a subiterator","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155072,"byte_end":155166,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ you got from calling \"append_dict\", and signatures need to match what you specified in \"append_dict\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155171,"byte_end":155276,"line_start":202,"line_end":202,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155845,"byte_end":155856,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"append_dict","qualname":"<IterAppend>::append_dict","value":"fn <F> (&mut self, key_sig: &Signature, value_sig: &Signature, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a dict.","sig":null,"attributes":[{"value":"/ Low-level function to append a dict.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155427,"byte_end":155467,"line_start":207,"line_end":207,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155472,"byte_end":155475,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Dict` struct is not flexible enough -","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155480,"byte_end":155538,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Dict` parameter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155543,"byte_end":155635,"line_start":210,"line_end":210,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155640,"byte_end":155643,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should only call \"append_dict_entry\"","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155648,"byte_end":155750,"line_start":212,"line_end":212,"column_start":5,"column_end":107}},{"value":"/ for the subiterator - do this as many times as the number of dict entries.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":155755,"byte_end":155833,"line_start":213,"line_end":213,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":5010},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156222,"byte_end":156226,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"Iter","qualname":"::arg::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper struct for retrieve one or more arguments from a Message.\n","sig":null,"attributes":[{"value":"/ Helper struct for retrieve one or more arguments from a Message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156142,"byte_end":156210,"line_start":223,"line_end":223,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156414,"byte_end":156417,"line_start":228,"line_end":228,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"fn (m: &'a Message) -> Iter<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new struct for iterating over the arguments of a message, starting with the first argument.\n","sig":null,"attributes":[{"value":"/ Creates a new struct for iterating over the arguments of a message, starting with the first argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156297,"byte_end":156402,"line_start":227,"line_end":227,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156674,"byte_end":156677,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"get","qualname":"<Iter>::get","value":"fn <T> (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current argument, if T is the argument type. Otherwise returns None.\n","sig":null,"attributes":[{"value":"/ Returns the current argument, if T is the argument type. Otherwise returns None.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156578,"byte_end":156662,"line_start":234,"line_end":234,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":157266,"byte_end":157276,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"get_refarg","qualname":"<Iter>::get_refarg","value":"fn (&mut self) -> Option<Box<dyn RefArg + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current argument as a trait object.","sig":null,"attributes":[{"value":"/ Returns the current argument as a trait object.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156748,"byte_end":156799,"line_start":239,"line_end":239,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156804,"byte_end":156807,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Note: For the more complex arguments (arrays / dicts / structs, and especially","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156812,"byte_end":156894,"line_start":241,"line_end":241,"column_start":5,"column_end":87}},{"value":"/ combinations thereof), their internal representations are still a bit in flux.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156899,"byte_end":156981,"line_start":242,"line_end":242,"column_start":5,"column_end":87}},{"value":"/ Instead, use as_iter() to read the values of those.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156986,"byte_end":157041,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":157046,"byte_end":157049,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The rest are unlikely to change - Variants are `Variant<Box<dyn RefArg>>`, strings are `String`,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":157054,"byte_end":157154,"line_start":245,"line_end":245,"column_start":5,"column_end":105}},{"value":"/ paths are `Path<'static>`, signatures are `Signature<'static>`, Int32 are `i32s` and so on.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":157159,"byte_end":157254,"line_start":246,"line_end":246,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":158738,"byte_end":158747,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"signature","qualname":"<Iter>::signature","value":"fn (&mut self) -> Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type signature for the current argument.\n","sig":null,"attributes":[{"value":"/ Returns the type signature for the current argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":158670,"byte_end":158726,"line_start":270,"line_end":270,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159434,"byte_end":159442,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"arg_type","qualname":"<Iter>::arg_type","value":"fn (&mut self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The raw arg_type for the current item.","sig":null,"attributes":[{"value":"/ The raw arg_type for the current item.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159095,"byte_end":159137,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159142,"byte_end":159145,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Unlike Arg::arg_type, this requires access to self and is not a static method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159150,"byte_end":159232,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ You can match this against Arg::arg_type for different types to understand what type the current item is.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159237,"byte_end":159346,"line_start":285,"line_end":285,"column_start":5,"column_end":114}},{"value":"/ In case you're past the last argument, this function will return 0.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159351,"byte_end":159422,"line_start":286,"line_end":286,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159657,"byte_end":159661,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"next","qualname":"<Iter>::next","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if there are no more items.\n","sig":null,"attributes":[{"value":"/ Returns false if there are no more items.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159600,"byte_end":159645,"line_start":292,"line_end":292,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160696,"byte_end":160700,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"read","qualname":"<Iter>::read","value":"fn <T> (&mut self) -> Result<T, TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around `get` and `next`. Calls `get`, and then `next` if `get` succeeded.","sig":null,"attributes":[{"value":"/ Wrapper around `get` and `next`. Calls `get`, and then `next` if `get` succeeded.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159780,"byte_end":159865,"line_start":298,"line_end":298,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159870,"byte_end":159873,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Also returns a `Result` rather than an `Option` to give an error if successful.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159878,"byte_end":159961,"line_start":300,"line_end":300,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159966,"byte_end":159969,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159974,"byte_end":159987,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ ```ignore","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":159992,"byte_end":160005,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/ struct ServiceBrowserItemNew {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160010,"byte_end":160044,"line_start":304,"line_end":304,"column_start":5,"column_end":39}},{"value":"/     interface: i32,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160049,"byte_end":160072,"line_start":305,"line_end":305,"column_start":5,"column_end":28}},{"value":"/     protocol: i32,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160077,"byte_end":160099,"line_start":306,"line_end":306,"column_start":5,"column_end":27}},{"value":"/     name: String,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160104,"byte_end":160125,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/     item_type: String,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160130,"byte_end":160156,"line_start":308,"line_end":308,"column_start":5,"column_end":31}},{"value":"/     domain: String,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160161,"byte_end":160184,"line_start":309,"line_end":309,"column_start":5,"column_end":28}},{"value":"/     flags: u32,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160189,"byte_end":160208,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160213,"byte_end":160218,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160223,"byte_end":160226,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ fn service_browser_item_new_msg(m: &Message) -> Result<ServiceBrowserItemNew, TypeMismatchError> {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160231,"byte_end":160333,"line_start":313,"line_end":313,"column_start":5,"column_end":107}},{"value":"/     let mut iter = m.iter_init();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160338,"byte_end":160375,"line_start":314,"line_end":314,"column_start":5,"column_end":42}},{"value":"/     Ok(ServiceBrowserItemNew {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160380,"byte_end":160414,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/         interface: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160419,"byte_end":160455,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/         protocol: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160460,"byte_end":160495,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/         name: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160500,"byte_end":160531,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/         item_type: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160536,"byte_end":160572,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/         domain: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160577,"byte_end":160610,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/         flags: iter.read()?,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160615,"byte_end":160647,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/     })","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160652,"byte_end":160662,"line_start":322,"line_end":322,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160667,"byte_end":160672,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160677,"byte_end":160684,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161294,"byte_end":161301,"line_start":337,"line_end":337,"column_start":12,"column_end":19},"name":"recurse","qualname":"<Iter>::recurse","value":"fn (&mut self, arg_type: ArgType) -> Option<Iter<'a>>","parent":null,"children":[],"decl_id":null,"docs":" If the current argument is a container of the specified arg_type, then a new\n Iter is returned which is for iterating over the contents inside the container.","sig":null,"attributes":[{"value":"/ If the current argument is a container of the specified arg_type, then a new","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":160953,"byte_end":161033,"line_start":332,"line_end":332,"column_start":5,"column_end":85}},{"value":"/ Iter is returned which is for iterating over the contents inside the container.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161038,"byte_end":161121,"line_start":333,"line_end":333,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161126,"byte_end":161129,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Primarily for internal use (the \"get\" function is more ergonomic), but could be","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161134,"byte_end":161217,"line_start":335,"line_end":335,"column_start":5,"column_end":88}},{"value":"/ useful for recursing into containers with unknown types.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161222,"byte_end":161282,"line_start":336,"line_end":336,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5022},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162625,"byte_end":162630,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"Array","qualname":"::arg::ArgType::Array","value":"ArgType::Array","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Dicts are Arrays of dict entries, so Dict types will have Array as ArgType.\n","sig":null,"attributes":[{"value":"/ Dicts are Arrays of dict entries, so Dict types will have Array as ArgType.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162541,"byte_end":162620,"line_start":377,"line_end":377,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5025},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162681,"byte_end":162688,"line_start":380,"line_end":380,"column_start":5,"column_end":12},"name":"Variant","qualname":"::arg::ArgType::Variant","value":"ArgType::Variant","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Variant\n","sig":null,"attributes":[{"value":"/ Variant","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162665,"byte_end":162676,"line_start":379,"line_end":379,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5028},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162738,"byte_end":162745,"line_start":382,"line_end":382,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::arg::ArgType::Boolean","value":"ArgType::Boolean","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" bool\n","sig":null,"attributes":[{"value":"/ bool","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162725,"byte_end":162733,"line_start":381,"line_end":381,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5031},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162887,"byte_end":162894,"line_start":384,"line_end":384,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::arg::ArgType::Invalid","value":"ArgType::Invalid","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Invalid arg type - this is also the ArgType returned when there are no more arguments available.\n","sig":null,"attributes":[{"value":"/ Invalid arg type - this is also the ArgType returned when there are no more arguments available.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162782,"byte_end":162882,"line_start":383,"line_end":383,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5034},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162946,"byte_end":162952,"line_start":386,"line_end":386,"column_start":5,"column_end":11},"name":"String","qualname":"::arg::ArgType::String","value":"ArgType::String","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162931,"byte_end":162941,"line_start":385,"line_end":385,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5037},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163083,"byte_end":163092,"line_start":388,"line_end":388,"column_start":5,"column_end":14},"name":"DictEntry","qualname":"::arg::ArgType::DictEntry","value":"ArgType::DictEntry","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Dict entry; you'll usually not encounter this one as dicts are arrays of dict entries.\n","sig":null,"attributes":[{"value":"/ Dict entry; you'll usually not encounter this one as dicts are arrays of dict entries.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162988,"byte_end":163078,"line_start":387,"line_end":387,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5040},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163143,"byte_end":163147,"line_start":390,"line_end":390,"column_start":5,"column_end":9},"name":"Byte","qualname":"::arg::ArgType::Byte","value":"ArgType::Byte","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" u8\n","sig":null,"attributes":[{"value":"/ u8","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163132,"byte_end":163138,"line_start":389,"line_end":389,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5043},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163193,"byte_end":163198,"line_start":392,"line_end":392,"column_start":5,"column_end":10},"name":"Int16","qualname":"::arg::ArgType::Int16","value":"ArgType::Int16","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" i16\n","sig":null,"attributes":[{"value":"/ i16","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163181,"byte_end":163188,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5046},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163245,"byte_end":163251,"line_start":394,"line_end":394,"column_start":5,"column_end":11},"name":"UInt16","qualname":"::arg::ArgType::UInt16","value":"ArgType::UInt16","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" u16\n","sig":null,"attributes":[{"value":"/ u16","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163233,"byte_end":163240,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5049},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163299,"byte_end":163304,"line_start":396,"line_end":396,"column_start":5,"column_end":10},"name":"Int32","qualname":"::arg::ArgType::Int32","value":"ArgType::Int32","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" i32\n","sig":null,"attributes":[{"value":"/ i32","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163287,"byte_end":163294,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5052},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163351,"byte_end":163357,"line_start":398,"line_end":398,"column_start":5,"column_end":11},"name":"UInt32","qualname":"::arg::ArgType::UInt32","value":"ArgType::UInt32","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" u32\n","sig":null,"attributes":[{"value":"/ u32","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163339,"byte_end":163346,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5055},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163405,"byte_end":163410,"line_start":400,"line_end":400,"column_start":5,"column_end":10},"name":"Int64","qualname":"::arg::ArgType::Int64","value":"ArgType::Int64","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" i64\n","sig":null,"attributes":[{"value":"/ i64","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163393,"byte_end":163400,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5058},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163457,"byte_end":163463,"line_start":402,"line_end":402,"column_start":5,"column_end":11},"name":"UInt64","qualname":"::arg::ArgType::UInt64","value":"ArgType::UInt64","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" u64\n","sig":null,"attributes":[{"value":"/ u64","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163445,"byte_end":163452,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5061},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163511,"byte_end":163517,"line_start":404,"line_end":404,"column_start":5,"column_end":11},"name":"Double","qualname":"::arg::ArgType::Double","value":"ArgType::Double","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" f64\n","sig":null,"attributes":[{"value":"/ f64","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163499,"byte_end":163506,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5064},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163569,"byte_end":163575,"line_start":406,"line_end":406,"column_start":5,"column_end":11},"name":"UnixFd","qualname":"::arg::ArgType::UnixFd","value":"ArgType::UnixFd","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" OwnedFd\n","sig":null,"attributes":[{"value":"/ OwnedFd","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163553,"byte_end":163564,"line_start":405,"line_end":405,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5067},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163678,"byte_end":163684,"line_start":408,"line_end":408,"column_start":5,"column_end":11},"name":"Struct","qualname":"::arg::ArgType::Struct","value":"ArgType::Struct","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Use tuples or Vec<Box<dyn RefArg>> to read/write structs.\n","sig":null,"attributes":[{"value":"/ Use tuples or Vec<Box<dyn RefArg>> to read/write structs.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163612,"byte_end":163673,"line_start":407,"line_end":407,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5070},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163733,"byte_end":163743,"line_start":410,"line_end":410,"column_start":5,"column_end":15},"name":"ObjectPath","qualname":"::arg::ArgType::ObjectPath","value":"ArgType::ObjectPath","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Path\n","sig":null,"attributes":[{"value":"/ Path","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163720,"byte_end":163728,"line_start":409,"line_end":409,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5073},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163802,"byte_end":163811,"line_start":412,"line_end":412,"column_start":5,"column_end":14},"name":"Signature","qualname":"::arg::ArgType::Signature","value":"ArgType::Signature","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":" Signature\n","sig":null,"attributes":[{"value":"/ Signature","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":163784,"byte_end":163797,"line_start":411,"line_end":411,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":5021},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162527,"byte_end":162534,"line_start":376,"line_end":376,"column_start":10,"column_end":17},"name":"ArgType","qualname":"::arg::ArgType","value":"ArgType::{Array, Variant, Boolean, Invalid, String, DictEntry, Byte, Int16, UInt16, Int32, UInt32, Int64, UInt64, Double, UnixFd, Struct, ObjectPath, Signature}","parent":null,"children":[{"krate":0,"index":5022},{"krate":0,"index":5025},{"krate":0,"index":5028},{"krate":0,"index":5031},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5040},{"krate":0,"index":5043},{"krate":0,"index":5046},{"krate":0,"index":5049},{"krate":0,"index":5052},{"krate":0,"index":5055},{"krate":0,"index":5058},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":5073}],"decl_id":null,"docs":" Type of Argument","sig":null,"attributes":[{"value":"/ Type of Argument","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162321,"byte_end":162341,"line_start":371,"line_end":371,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162342,"byte_end":162345,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ use this to figure out, e g, which type of argument is at the current position of Iter.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162346,"byte_end":162437,"line_start":373,"line_end":373,"column_start":1,"column_end":92}},{"value":"repr(u8)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162438,"byte_end":162449,"line_start":374,"line_end":374,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164565,"byte_end":164571,"line_start":437,"line_end":437,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArgType>::as_str","value":"fn (self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" A str corresponding to the name of a Rust type.\n","sig":null,"attributes":[{"value":"/ A str corresponding to the name of a Rust type.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164502,"byte_end":164553,"line_start":436,"line_end":436,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164737,"byte_end":164740,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"all","qualname":"<ArgType>::all","value":"fn () -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Vec of all possible argtypes.\n","sig":null,"attributes":[{"value":"/ Returns a Vec of all possible argtypes.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164682,"byte_end":164725,"line_start":441,"line_end":441,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164881,"byte_end":164889,"line_start":447,"line_end":447,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<ArgType>::from_i32","value":"fn (i: i32) -> Result<ArgType, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts an i32 to an ArgType (or an error).\n","sig":null,"attributes":[{"value":"/ Converts an i32 to an ArgType (or an error).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164821,"byte_end":164869,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":5094},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165266,"byte_end":165283,"line_start":460,"line_end":460,"column_start":12,"column_end":29},"name":"TypeMismatchError","qualname":"::arg::TypeMismatchError","value":"TypeMismatchError {  }","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097}],"decl_id":null,"docs":" Error struct to indicate a D-Bus argument type mismatch.","sig":null,"attributes":[{"value":"/ Error struct to indicate a D-Bus argument type mismatch.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165102,"byte_end":165162,"line_start":456,"line_end":456,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165163,"byte_end":165166,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Might be returned from `iter::read()`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165167,"byte_end":165209,"line_start":458,"line_end":458,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165442,"byte_end":165459,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"expected_arg_type","qualname":"<TypeMismatchError>::expected_arg_type","value":"fn (&self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The ArgType we were trying to read, but failed\n","sig":null,"attributes":[{"value":"/ The ArgType we were trying to read, but failed","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165380,"byte_end":165430,"line_start":467,"line_end":467,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165597,"byte_end":165611,"line_start":471,"line_end":471,"column_start":12,"column_end":26},"name":"found_arg_type","qualname":"<TypeMismatchError>::found_arg_type","value":"fn (&self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The ArgType we should have been trying to read, if we wanted the read to succeed\n","sig":null,"attributes":[{"value":"/ The ArgType we should have been trying to read, if we wanted the read to succeed","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165501,"byte_end":165585,"line_start":470,"line_end":470,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165777,"byte_end":165780,"line_start":476,"line_end":476,"column_start":12,"column_end":15},"name":"pos","qualname":"<TypeMismatchError>::pos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" At what argument was the error found?","sig":null,"attributes":[{"value":"/ At what argument was the error found?","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165650,"byte_end":165691,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165696,"byte_end":165699,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Returns 0 for first argument, 1 for second argument, etc.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165704,"byte_end":165765,"line_start":475,"line_end":475,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1756},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tree","qualname":"::tree","value":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1809},{"krate":0,"index":1939},{"krate":0,"index":2132},{"krate":0,"index":2352},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2432},{"krate":0,"index":2438},{"krate":0,"index":2443}],"decl_id":null,"docs":" Contains functionality for dispatching methods on a D-Bus \"server\".","sig":null,"attributes":[{"value":"! Contains functionality for dispatching methods on a D-Bus \"server\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262458,"byte_end":262529,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262530,"byte_end":262533,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262534,"byte_end":262547,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"! ```rust,no_run","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262548,"byte_end":262566,"line_start":4,"line_end":4,"column_start":1,"column_end":19}},{"value":"! use dbus::{tree, ffidisp::Connection};","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262567,"byte_end":262609,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"! let f = tree::Factory::new_fn::<()>();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262610,"byte_end":262652,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"! /* Add a method returning \"Thanks!\" on interface \"com.example.dbus.rs\"","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262653,"byte_end":262727,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!    on object path \"/example\". */","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262728,"byte_end":262764,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"! let t = f.tree(()).add(f.object_path(\"/example\", ()).introspectable()","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262765,"byte_end":262838,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"!     .add(f.interface(\"com.example.dbus.rs\", ())","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262839,"byte_end":262890,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"!         .add_m(f.method(\"CallMe\", (), |m| {","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262891,"byte_end":262938,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"!             Ok(vec!(m.msg.method_return().append1(\"Thanks!\"))) }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":262939,"byte_end":263007,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!         ).out_arg(\"s\"))","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263008,"byte_end":263035,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"! ));","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263036,"byte_end":263043,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263044,"byte_end":263047,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! let c = Connection::new_session().unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263048,"byte_end":263095,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"! t.set_registered(&c, true).unwrap();","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263096,"byte_end":263136,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"! c.add_handler(t);","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263137,"byte_end":263158,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"! /* Run forever */","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263159,"byte_end":263180,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"! loop { c.incoming(1000).next(); }","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263181,"byte_end":263218,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"! ```","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263219,"byte_end":263226,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263227,"byte_end":263230,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! See `examples/server.rs` and `examples/adv_server.rs` for more thorough examples.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/mod.rs","byte_start":263231,"byte_end":263316,"line_start":23,"line_end":23,"column_start":1,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5113},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264015,"byte_end":264019,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Path","qualname":"::tree::utils::IterE::Path","value":"IterE::Path(btree_map::Values<'a, Arc<Path<'static>>, Arc<V>>)","parent":{"krate":0,"index":5110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5116},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264076,"byte_end":264081,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Iface","qualname":"::tree::utils::IterE::Iface","value":"IterE::Iface(btree_map::Values<'a, Arc<IfaceName<'static>>, Arc<V>>)","parent":{"krate":0,"index":5110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5119},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264143,"byte_end":264149,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Member","qualname":"::tree::utils::IterE::Member","value":"IterE::Member(btree_map::Values<'a, Member<'static>, Arc<V>>)","parent":{"krate":0,"index":5110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5122},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264203,"byte_end":264209,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"String","qualname":"::tree::utils::IterE::String","value":"IterE::String(btree_map::Values<'a, String, Arc<V>>)","parent":{"krate":0,"index":5110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5110},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":263992,"byte_end":263997,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"IterE","qualname":"::tree::utils::IterE","value":"IterE::{Path, Iface, Member, String}","parent":null,"children":[{"krate":0,"index":5113},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5133},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264375,"byte_end":264379,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"Iter","qualname":"::tree::utils::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator struct, returned from iterator methods on Tree, Objectpath and Interface.\n","sig":null,"attributes":[{"value":"/ Iterator struct, returned from iterator methods on Tree, Objectpath and Interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264277,"byte_end":264363,"line_start":18,"line_end":18,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":5146},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264960,"byte_end":264968,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Argument","qualname":"::tree::utils::Argument","value":"","parent":null,"children":[],"decl_id":null,"docs":" A D-Bus Argument.\n","sig":null,"attributes":[{"value":"/ A D-Bus Argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264927,"byte_end":264948,"line_start":36,"line_end":36,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265065,"byte_end":265068,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Argument>::new","value":"fn (name: Option<String>, sig: Signature<'static>) -> Argument","parent":null,"children":[],"decl_id":null,"docs":" Create a new Argument.\n","sig":null,"attributes":[{"value":"/ Create a new Argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265027,"byte_end":265053,"line_start":40,"line_end":40,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265199,"byte_end":265203,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"name","qualname":"<Argument>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Descriptive name (if any).\n","sig":null,"attributes":[{"value":"/ Descriptive name (if any).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265157,"byte_end":265187,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265309,"byte_end":265318,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"signature","qualname":"<Argument>::signature","value":"fn (&self) -> &Signature<'static>","parent":null,"children":[],"decl_id":null,"docs":" Type signature of argument.\n","sig":null,"attributes":[{"value":"/ Type signature of argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265266,"byte_end":265297,"line_start":46,"line_end":46,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5182},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267743,"byte_end":267752,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"MethodErr","qualname":"::tree::methodtype::MethodErr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A D-Bus Method Error, containing an error name and a description.\n","sig":null,"attributes":[{"value":"/ A D-Bus Method Error, containing an error name and a description.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267662,"byte_end":267731,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267853,"byte_end":267864,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"invalid_arg","qualname":"<MethodErr>::invalid_arg","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create an Invalid Args MethodErr.\n","sig":null,"attributes":[{"value":"/ Create an Invalid Args MethodErr.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267804,"byte_end":267841,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268093,"byte_end":268099,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"no_arg","qualname":"<MethodErr>::no_arg","value":"fn () -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that there are not enough arguments given.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that there are not enough arguments given.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268016,"byte_end":268081,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268288,"byte_end":268294,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"failed","qualname":"<MethodErr>::failed","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the method failed in the way specified.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the method failed in the way specified.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268209,"byte_end":268276,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268490,"byte_end":268497,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"no_path","qualname":"<MethodErr>::no_path","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Object path was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Object path was unknown.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268422,"byte_end":268478,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268721,"byte_end":268733,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"no_interface","qualname":"<MethodErr>::no_interface","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Interface was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Interface was unknown.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268655,"byte_end":268709,"line_start":37,"line_end":37,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268954,"byte_end":268963,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"no_method","qualname":"<MethodErr>::no_method","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Method was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Method was unknown.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":268891,"byte_end":268942,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269180,"byte_end":269191,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"no_property","qualname":"<MethodErr>::no_property","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Property was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Property was unknown.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269115,"byte_end":269168,"line_start":45,"line_end":45,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269414,"byte_end":269425,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"ro_property","qualname":"<MethodErr>::ro_property","value":"fn <T> (a: &T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Property was read-only.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Property was read-only.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269347,"byte_end":269402,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269623,"byte_end":269632,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"errorname","qualname":"<MethodErr>::errorname","value":"fn (&self) -> &ErrorName<'static>","parent":null,"children":[],"decl_id":null,"docs":" Error name accessor\n","sig":null,"attributes":[{"value":"/ Error name accessor","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269588,"byte_end":269611,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269715,"byte_end":269726,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"description","qualname":"<MethodErr>::description","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Description accessor\n","sig":null,"attributes":[{"value":"/ Description accessor","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269679,"byte_end":269703,"line_start":56,"line_end":56,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269947,"byte_end":269957,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"to_message","qualname":"<MethodErr>::to_message","value":"fn (&self, msg: &Message) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates an error reply from a method call message.","sig":null,"attributes":[{"value":"/ Creates an error reply from a method call message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269759,"byte_end":269813,"line_start":59,"line_end":59,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269818,"byte_end":269821,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note: You normally don't need to use this function,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269826,"byte_end":269881,"line_start":61,"line_end":61,"column_start":5,"column_end":60}},{"value":"/ as it is called internally from Tree::handle.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":269886,"byte_end":269935,"line_start":62,"line_end":62,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":1856},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270738,"byte_end":270750,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"name":"MethodResult","qualname":"::tree::methodtype::MethodResult","value":"Result<Vec<Message>, MethodErr>","parent":null,"children":[],"decl_id":null,"docs":" Result containing the Messages returned from the Method, or a MethodErr.\n","sig":null,"attributes":[{"value":"/ Result containing the Messages returned from the Method, or a MethodErr.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270652,"byte_end":270728,"line_start":85,"line_end":85,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1857},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270951,"byte_end":270959,"line_start":91,"line_end":91,"column_start":11,"column_end":19},"name":"DataType","qualname":"::tree::methodtype::DataType","value":"DataType: Sized + Default","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863}],"decl_id":null,"docs":" Associated data for different objects in a tree.","sig":null,"attributes":[{"value":"/ Associated data for different objects in a tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270787,"byte_end":270839,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270840,"byte_end":270843,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ These currently require a debug bound, due to https://github.com/rust-lang/rust/issues/31518","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270844,"byte_end":270940,"line_start":90,"line_end":90,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":1858},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271033,"byte_end":271037,"line_start":93,"line_end":93,"column_start":10,"column_end":14},"name":"Tree","qualname":"::tree::methodtype::DataType::Tree","value":"type Tree: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on the Tree.\n","sig":null,"attributes":[{"value":"/ Type of associated data on the Tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270983,"byte_end":271023,"line_start":92,"line_end":92,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1859},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271113,"byte_end":271123,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"ObjectPath","qualname":"::tree::methodtype::DataType::ObjectPath","value":"type ObjectPath: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on every ObjectPath.\n","sig":null,"attributes":[{"value":"/ Type of associated data on every ObjectPath.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271055,"byte_end":271103,"line_start":94,"line_end":94,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1860},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271197,"byte_end":271205,"line_start":97,"line_end":97,"column_start":10,"column_end":18},"name":"Property","qualname":"::tree::methodtype::DataType::Property","value":"type Property: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on every Property.\n","sig":null,"attributes":[{"value":"/ Type of associated data on every Property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271141,"byte_end":271187,"line_start":96,"line_end":96,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":1861},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271280,"byte_end":271289,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Interface","qualname":"::tree::methodtype::DataType::Interface","value":"type Interface: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on every Interface.\n","sig":null,"attributes":[{"value":"/ Type of associated data on every Interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271223,"byte_end":271270,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1862},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271361,"byte_end":271367,"line_start":101,"line_end":101,"column_start":10,"column_end":16},"name":"Method","qualname":"::tree::methodtype::DataType::Method","value":"type Method: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on every Method.\n","sig":null,"attributes":[{"value":"/ Type of associated data on every Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271307,"byte_end":271351,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1863},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271439,"byte_end":271445,"line_start":103,"line_end":103,"column_start":10,"column_end":16},"name":"Signal","qualname":"::tree::methodtype::DataType::Signal","value":"type Signal: fmt::Debug;","parent":{"krate":0,"index":1857},"children":[],"decl_id":null,"docs":" Type of associated data on every Signal.\n","sig":null,"attributes":[{"value":"/ Type of associated data on every Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271385,"byte_end":271429,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1871},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271858,"byte_end":271868,"line_start":119,"line_end":119,"column_start":11,"column_end":21},"name":"MethodType","qualname":"::tree::methodtype::MethodType","value":"MethodType<D: DataType>: Sized + Default","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1881}],"decl_id":null,"docs":" A helper trait used internally to make the tree generic over MTFn, MTFnMut and MTSync.","sig":null,"attributes":[{"value":"/ A helper trait used internally to make the tree generic over MTFn, MTFnMut and MTSync.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271664,"byte_end":271754,"line_start":116,"line_end":116,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271755,"byte_end":271758,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ You should not need to call these methods directly, it's primarily for internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271759,"byte_end":271847,"line_start":118,"line_end":118,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":1873},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271936,"byte_end":271942,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"name":"Method","qualname":"::tree::methodtype::MethodType::Method","value":"type Method: ?Sized;","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271905,"byte_end":271926,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":1874},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271987,"byte_end":271994,"line_start":123,"line_end":123,"column_start":10,"column_end":17},"name":"GetProp","qualname":"::tree::methodtype::MethodType::GetProp","value":"type GetProp: ?Sized;","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271956,"byte_end":271977,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":1875},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272039,"byte_end":272046,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"SetProp","qualname":"::tree::methodtype::MethodType::SetProp","value":"type SetProp: ?Sized;","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272008,"byte_end":272029,"line_start":124,"line_end":124,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272090,"byte_end":272102,"line_start":128,"line_end":128,"column_start":8,"column_end":20},"name":"call_getprop","qualname":"::tree::methodtype::MethodType::call_getprop","value":"fn (_: &Self::GetProp, _: &mut IterAppend, _: &PropInfo<Self, D>) -> Result<(), MethodErr>","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272061,"byte_end":272082,"line_start":127,"line_end":127,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272224,"byte_end":272236,"line_start":130,"line_end":130,"column_start":8,"column_end":20},"name":"call_setprop","qualname":"::tree::methodtype::MethodType::call_setprop","value":"fn (_: &Self::SetProp, _: &mut Iter, _: &PropInfo<Self, D>) -> Result<(), MethodErr>","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272195,"byte_end":272216,"line_start":129,"line_end":129,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272352,"byte_end":272363,"line_start":132,"line_end":132,"column_start":8,"column_end":19},"name":"call_method","qualname":"::tree::methodtype::MethodType::call_method","value":"fn (_: &Self::Method, _: &MethodInfo<Self, D>) -> MethodResult","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272323,"byte_end":272344,"line_start":131,"line_end":131,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272458,"byte_end":272470,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"make_getprop","qualname":"::tree::methodtype::MethodType::make_getprop","value":"fn <H> (h: H) -> Box<Self::GetProp>","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272429,"byte_end":272450,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272637,"byte_end":272648,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"make_method","qualname":"::tree::methodtype::MethodType::make_method","value":"fn <H> (h: H) -> Box<Self::Method>","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" For internal use.\n","sig":null,"attributes":[{"value":"/ For internal use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272608,"byte_end":272629,"line_start":137,"line_end":137,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5209},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272859,"byte_end":272863,"line_start":145,"line_end":145,"column_start":12,"column_end":16},"name":"MTFn","qualname":"::tree::methodtype::MTFn","value":"","parent":null,"children":[],"decl_id":null,"docs":" An abstract type to represent Fn functions.\n","sig":null,"attributes":[{"value":"/ An abstract type to represent Fn functions.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272761,"byte_end":272808,"line_start":143,"line_end":143,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":273960,"byte_end":273967,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"MTFnMut","qualname":"::tree::methodtype::MTFnMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An abstract type to represent FnMut functions.\n","sig":null,"attributes":[{"value":"/ An abstract type to represent FnMut functions.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":273859,"byte_end":273909,"line_start":165,"line_end":165,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5239},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":275260,"byte_end":275266,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"MTSync","qualname":"::tree::methodtype::MTSync","value":"","parent":null,"children":[],"decl_id":null,"docs":" An abstract type to represent Fn + Send + Sync functions (that can be called from several threads in parallel).\n","sig":null,"attributes":[{"value":"/ An abstract type to represent Fn + Send + Sync functions (that can be called from several threads in parallel).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":275094,"byte_end":275209,"line_start":188,"line_end":188,"column_start":1,"column_end":116}}]},{"kind":"Struct","id":{"krate":0,"index":5254},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276437,"byte_end":276447,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"MethodInfo","qualname":"::tree::methodtype::MethodInfo","value":"MethodInfo { msg, method, iface, path, tree }","parent":null,"children":[{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262}],"decl_id":null,"docs":" Contains information about the incoming method call.\n","sig":null,"attributes":[{"value":"/ Contains information about the incoming method call.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276369,"byte_end":276425,"line_start":213,"line_end":213,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5258},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276519,"byte_end":276522,"line_start":216,"line_end":216,"column_start":9,"column_end":12},"name":"msg","qualname":"::tree::methodtype::MethodInfo::msg","value":"&'a message::Message","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Message\n","sig":null,"attributes":[{"value":"/ Message","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276499,"byte_end":276510,"line_start":215,"line_end":215,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":5259},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276577,"byte_end":276583,"line_start":218,"line_end":218,"column_start":9,"column_end":15},"name":"method","qualname":"::tree::methodtype::MethodInfo::method","value":"&'a tree::leaves::Method<M, D>","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" The method to be called\n","sig":null,"attributes":[{"value":"/ The method to be called","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276541,"byte_end":276568,"line_start":217,"line_end":217,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5260},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276629,"byte_end":276634,"line_start":220,"line_end":220,"column_start":9,"column_end":14},"name":"iface","qualname":"::tree::methodtype::MethodInfo::iface","value":"&'a tree::objectpath::Interface<M, D>","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Interface\n","sig":null,"attributes":[{"value":"/ Interface","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276607,"byte_end":276620,"line_start":219,"line_end":219,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5261},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276685,"byte_end":276689,"line_start":222,"line_end":222,"column_start":9,"column_end":13},"name":"path","qualname":"::tree::methodtype::MethodInfo::path","value":"&'a tree::objectpath::ObjectPath<M, D>","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Object path\n","sig":null,"attributes":[{"value":"/ Object path","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276661,"byte_end":276676,"line_start":221,"line_end":221,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5262},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276734,"byte_end":276738,"line_start":224,"line_end":224,"column_start":9,"column_end":13},"name":"tree","qualname":"::tree::methodtype::MethodInfo::tree","value":"&'a tree::objectpath::Tree<M, D>","parent":{"krate":0,"index":5254},"children":[],"decl_id":null,"docs":" Tree\n","sig":null,"attributes":[{"value":"/ Tree","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276717,"byte_end":276725,"line_start":223,"line_end":223,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276885,"byte_end":276897,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"to_prop_info","qualname":"<MethodInfo>::to_prop_info","value":"fn (&self, iface: &'a Interface<M, D>, prop: &'a Property<M, D>) -> PropInfo<'a, M, D>","parent":null,"children":[],"decl_id":null,"docs":" MethodInfo to PropInfo conversion\n","sig":null,"attributes":[{"value":"/ MethodInfo to PropInfo conversion","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276836,"byte_end":276873,"line_start":228,"line_end":228,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5277},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278209,"byte_end":278217,"line_start":262,"line_end":262,"column_start":12,"column_end":20},"name":"PropInfo","qualname":"::tree::methodtype::PropInfo","value":"PropInfo { msg, method, prop, iface, path, tree }","parent":null,"children":[{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5285},{"krate":0,"index":5286}],"decl_id":null,"docs":" Contains information about the incoming property get/set request.\n","sig":null,"attributes":[{"value":"/ Contains information about the incoming property get/set request.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278128,"byte_end":278197,"line_start":261,"line_end":261,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5281},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278289,"byte_end":278292,"line_start":264,"line_end":264,"column_start":9,"column_end":12},"name":"msg","qualname":"::tree::methodtype::PropInfo::msg","value":"&'a message::Message","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Message\n","sig":null,"attributes":[{"value":"/ Message","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278269,"byte_end":278280,"line_start":263,"line_end":263,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":5282},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278342,"byte_end":278348,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"method","qualname":"::tree::methodtype::PropInfo::method","value":"&'a tree::leaves::Method<M, D>","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Get, Set or GetAll\n","sig":null,"attributes":[{"value":"/ Get, Set or GetAll","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278311,"byte_end":278333,"line_start":265,"line_end":265,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":5283},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278411,"byte_end":278415,"line_start":268,"line_end":268,"column_start":9,"column_end":13},"name":"prop","qualname":"::tree::methodtype::PropInfo::prop","value":"&'a tree::leaves::Property<M, D>","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" The property to be set/get\n","sig":null,"attributes":[{"value":"/ The property to be set/get","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278372,"byte_end":278402,"line_start":267,"line_end":267,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5284},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278491,"byte_end":278496,"line_start":270,"line_end":270,"column_start":9,"column_end":14},"name":"iface","qualname":"::tree::methodtype::PropInfo::iface","value":"&'a tree::objectpath::Interface<M, D>","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" The interface the property belongs to\n","sig":null,"attributes":[{"value":"/ The interface the property belongs to","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278441,"byte_end":278482,"line_start":269,"line_end":269,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5285},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278547,"byte_end":278551,"line_start":272,"line_end":272,"column_start":9,"column_end":13},"name":"path","qualname":"::tree::methodtype::PropInfo::path","value":"&'a tree::objectpath::ObjectPath<M, D>","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Object path\n","sig":null,"attributes":[{"value":"/ Object path","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278523,"byte_end":278538,"line_start":271,"line_end":271,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5286},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278596,"byte_end":278600,"line_start":274,"line_end":274,"column_start":9,"column_end":13},"name":"tree","qualname":"::tree::methodtype::PropInfo::tree","value":"&'a tree::objectpath::Tree<M, D>","parent":{"krate":0,"index":5277},"children":[],"decl_id":null,"docs":" Tree\n","sig":null,"attributes":[{"value":"/ Tree","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278579,"byte_end":278587,"line_start":273,"line_end":273,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278746,"byte_end":278760,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"to_method_info","qualname":"<PropInfo>::to_method_info","value":"fn (&self) -> MethodInfo<'a, M, D>","parent":null,"children":[],"decl_id":null,"docs":" PropInfo to MethodInfo conversion.\n","sig":null,"attributes":[{"value":"/ PropInfo to MethodInfo conversion.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278696,"byte_end":278734,"line_start":278,"line_end":278,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280150,"byte_end":280156,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Method","qualname":"::tree::leaves::Method","value":"Method {  }","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" A D-Bus Method.\n","sig":null,"attributes":[{"value":"/ A D-Bus Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280119,"byte_end":280138,"line_start":27,"line_end":27,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280474,"byte_end":280480,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"in_arg","qualname":"<Method<M, D>>::in_arg","value":"fn <A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an \"in\" Argument to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an \"in\" Argument to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280401,"byte_end":280462,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280638,"byte_end":280643,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"inarg","qualname":"<Method<M, D>>::inarg","value":"fn <A, S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an \"in\" Argument to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an \"in\" Argument to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280565,"byte_end":280626,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280844,"byte_end":280851,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"in_args","qualname":"<Method<M, D>>::in_args","value":"fn <Z, A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds multiple \"in\" Arguments to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds multiple \"in\" Arguments to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280764,"byte_end":280832,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281073,"byte_end":281080,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"out_arg","qualname":"<Method<M, D>>::out_arg","value":"fn <A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an \"out\" Argument to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an \"out\" Argument to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280999,"byte_end":281061,"line_start":48,"line_end":48,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281239,"byte_end":281245,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"outarg","qualname":"<Method<M, D>>::outarg","value":"fn <A, S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an \"out\" Argument to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an \"out\" Argument to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281165,"byte_end":281227,"line_start":50,"line_end":50,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281447,"byte_end":281455,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"out_args","qualname":"<Method<M, D>>::out_args","value":"fn <Z, A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds multiple \"out\" Arguments to this Method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds multiple \"out\" Arguments to this Method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281366,"byte_end":281435,"line_start":52,"line_end":52,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281672,"byte_end":281680,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"annotate","qualname":"<Method<M, D>>::annotate","value":"fn <N, V> (mut self, name: N, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an annotation to the method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an annotation to the method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281603,"byte_end":281660,"line_start":57,"line_end":57,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281894,"byte_end":281904,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<Method<M, D>>::deprecated","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an annotation that this entity is deprecated.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an annotation that this entity is deprecated.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281808,"byte_end":281882,"line_start":61,"line_end":61,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282016,"byte_end":282020,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"call","qualname":"<Method<M, D>>::call","value":"fn (&self, minfo: &MethodInfo<M, D>) -> MethodResult","parent":null,"children":[],"decl_id":null,"docs":" Call the Method\n","sig":null,"attributes":[{"value":"/ Call the Method","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":281985,"byte_end":282004,"line_start":64,"line_end":64,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282144,"byte_end":282152,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Method<M, D>>::get_name","value":"fn (&self) -> &Member<'static>","parent":null,"children":[],"decl_id":null,"docs":" Get method name\n","sig":null,"attributes":[{"value":"/ Get method name","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282113,"byte_end":282132,"line_start":67,"line_end":67,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282235,"byte_end":282243,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Method<M, D>>::get_data","value":"fn (&self) -> &D::Method","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282200,"byte_end":282223,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5314},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283013,"byte_end":283019,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"Signal","qualname":"::tree::leaves::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319}],"decl_id":null,"docs":" A D-Bus Signal.\n","sig":null,"attributes":[{"value":"/ A D-Bus Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282982,"byte_end":283001,"line_start":93,"line_end":93,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283241,"byte_end":283244,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"arg","qualname":"<Signal<D>>::arg","value":"fn <A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an Argument to the Signal.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an Argument to the Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283174,"byte_end":283229,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283400,"byte_end":283404,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"sarg","qualname":"<Signal<D>>::sarg","value":"fn <A, S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an Argument to the Signal.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an Argument to the Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283333,"byte_end":283388,"line_start":106,"line_end":106,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283603,"byte_end":283607,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"args","qualname":"<Signal<D>>::args","value":"fn <Z, A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds multiple Arguments to the Signal.\n","sig":null,"attributes":[{"value":"/ Builder method that adds multiple Arguments to the Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283529,"byte_end":283591,"line_start":109,"line_end":109,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283807,"byte_end":283815,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"annotate","qualname":"<Signal<D>>::annotate","value":"fn <N, V> (mut self, name: N, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an annotation to this Signal.\n","sig":null,"attributes":[{"value":"/ Add an annotation to this Signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283758,"byte_end":283795,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284008,"byte_end":284018,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<Signal<D>>::deprecated","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an annotation that this entity is deprecated.\n","sig":null,"attributes":[{"value":"/ Add an annotation that this entity is deprecated.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283943,"byte_end":283996,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284130,"byte_end":284138,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Signal<D>>::get_name","value":"fn (&self) -> &Member<'static>","parent":null,"children":[],"decl_id":null,"docs":" Get signal name\n","sig":null,"attributes":[{"value":"/ Get signal name","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284099,"byte_end":284118,"line_start":121,"line_end":121,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284221,"byte_end":284229,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Signal<D>>::get_data","value":"fn (&self) -> &D::Signal","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284186,"byte_end":284209,"line_start":124,"line_end":124,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284412,"byte_end":284416,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"emit","qualname":"<Signal<D>>::emit","value":"fn <A> (&self, p: &Path<'static>, i: &IfaceName<'static>, items: &[A]) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Returns a message which emits the signal when sent.","sig":null,"attributes":[{"value":"/ Returns a message which emits the signal when sent.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284271,"byte_end":284326,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284331,"byte_end":284334,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Same as \"msg\" but also takes a list of arguments to send.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284339,"byte_end":284400,"line_start":129,"line_end":129,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284806,"byte_end":284809,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"msg","qualname":"<Signal<D>>::msg","value":"fn (&self, p: &Path<'static>, i: &IfaceName<'static>) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Returns a message which emits the signal when sent.","sig":null,"attributes":[{"value":"/ Returns a message which emits the signal when sent.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284669,"byte_end":284724,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284729,"byte_end":284732,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Same as \"emit\" but does not take an \"items\" argument.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284737,"byte_end":284794,"line_start":139,"line_end":139,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285669,"byte_end":285673,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"True","qualname":"::tree::leaves::EmitsChangedSignal::True","value":"EmitsChangedSignal::True","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The Property emits a signal that includes the new value.\n","sig":null,"attributes":[{"value":"/ The Property emits a signal that includes the new value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285604,"byte_end":285664,"line_start":164,"line_end":164,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5326},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285752,"byte_end":285763,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Invalidates","qualname":"::tree::leaves::EmitsChangedSignal::Invalidates","value":"EmitsChangedSignal::Invalidates","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The Property emits a signal that does not include the new value.\n","sig":null,"attributes":[{"value":"/ The Property emits a signal that does not include the new value.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285679,"byte_end":285747,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5328},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285809,"byte_end":285814,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Const","qualname":"::tree::leaves::EmitsChangedSignal::Const","value":"EmitsChangedSignal::Const","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The Property cannot be changed.\n","sig":null,"attributes":[{"value":"/ The Property cannot be changed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285769,"byte_end":285804,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5330},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285878,"byte_end":285883,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"False","qualname":"::tree::leaves::EmitsChangedSignal::False","value":"EmitsChangedSignal::False","parent":{"krate":0,"index":5323},"children":[],"decl_id":null,"docs":" The Property does not emit a signal when changed.\n","sig":null,"attributes":[{"value":"/ The Property does not emit a signal when changed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285820,"byte_end":285873,"line_start":170,"line_end":170,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":5323},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285579,"byte_end":285597,"line_start":163,"line_end":163,"column_start":10,"column_end":28},"name":"EmitsChangedSignal","qualname":"::tree::leaves::EmitsChangedSignal","value":"EmitsChangedSignal::{True, Invalidates, Const, False}","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5328},{"krate":0,"index":5330}],"decl_id":null,"docs":" Enumerates the different signaling behaviors a Property can have\n to being changed.\n","sig":null,"attributes":[{"value":"/ Enumerates the different signaling behaviors a Property can have","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285479,"byte_end":285547,"line_start":161,"line_end":161,"column_start":1,"column_end":69}},{"value":"/ to being changed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285548,"byte_end":285569,"line_start":162,"line_end":162,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5348},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286078,"byte_end":286082,"line_start":178,"line_end":178,"column_start":5,"column_end":9},"name":"Read","qualname":"::tree::leaves::Access::Read","value":"Access::Read","parent":{"krate":0,"index":5347},"children":[],"decl_id":null,"docs":" The Property can only be read (Get).\n","sig":null,"attributes":[{"value":"/ The Property can only be read (Get).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286033,"byte_end":286073,"line_start":177,"line_end":177,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5350},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286133,"byte_end":286142,"line_start":180,"line_end":180,"column_start":5,"column_end":14},"name":"ReadWrite","qualname":"::tree::leaves::Access::ReadWrite","value":"Access::ReadWrite","parent":{"krate":0,"index":5347},"children":[],"decl_id":null,"docs":" The Property can be read or written.\n","sig":null,"attributes":[{"value":"/ The Property can be read or written.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286088,"byte_end":286128,"line_start":179,"line_end":179,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5352},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286196,"byte_end":286201,"line_start":182,"line_end":182,"column_start":5,"column_end":10},"name":"Write","qualname":"::tree::leaves::Access::Write","value":"Access::Write","parent":{"krate":0,"index":5347},"children":[],"decl_id":null,"docs":" The Property can only be written (Set).\n","sig":null,"attributes":[{"value":"/ The Property can only be written (Set).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286148,"byte_end":286191,"line_start":181,"line_end":181,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":5347},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286020,"byte_end":286026,"line_start":176,"line_end":176,"column_start":10,"column_end":16},"name":"Access","qualname":"::tree::leaves::Access","value":"Access::{Read, ReadWrite, Write}","parent":null,"children":[{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5352}],"decl_id":null,"docs":" The possible access characteristics a Property can have.\n","sig":null,"attributes":[{"value":"/ The possible access characteristics a Property can have.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":285950,"byte_end":286010,"line_start":175,"line_end":175,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5369},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287224,"byte_end":287232,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"Property","qualname":"::tree::leaves::Property","value":"Property {  }","parent":null,"children":[{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380}],"decl_id":null,"docs":" A D-Bus Property.\n","sig":null,"attributes":[{"value":"/ A D-Bus Property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287191,"byte_end":287212,"line_start":215,"line_end":215,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287747,"byte_end":287760,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"emits_changed","qualname":"<Property<M, D>>::emits_changed","value":"fn (mut self, e: EmitsChangedSignal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that allows setting the Property's signal\n behavior when changed.","sig":null,"attributes":[{"value":"/ Builder method that allows setting the Property's signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287568,"byte_end":287628,"line_start":230,"line_end":230,"column_start":5,"column_end":65}},{"value":"/ behavior when changed.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287633,"byte_end":287659,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287664,"byte_end":287667,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note: if e is set to const, the property will be read only.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287672,"byte_end":287735,"line_start":233,"line_end":233,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288445,"byte_end":288461,"line_start":248,"line_end":248,"column_start":12,"column_end":28},"name":"auto_emit_on_set","qualname":"<Property<M, D>>::auto_emit_on_set","value":"fn (mut self, b: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that determines whether or not setting this property\n will result in an PropertiesChanged signal. Defaults to true.","sig":null,"attributes":[{"value":"/ Builder method that determines whether or not setting this property","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287931,"byte_end":288002,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ will result in an PropertiesChanged signal. Defaults to true.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288007,"byte_end":288072,"line_start":241,"line_end":241,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288077,"byte_end":288080,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ When set to true (the default), the behaviour is determined by \"emits_changed\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288085,"byte_end":288168,"line_start":243,"line_end":243,"column_start":5,"column_end":88}},{"value":"/ When set to false, no PropertiesChanged signal will be emitted (but the signal","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288173,"byte_end":288255,"line_start":244,"line_end":244,"column_start":5,"column_end":87}},{"value":"/ still shows up in introspection data).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288260,"byte_end":288302,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/ You can still emit the signal manually by, e g, calling `add_propertieschanged`","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288307,"byte_end":288390,"line_start":246,"line_end":246,"column_start":5,"column_end":88}},{"value":"/ and send the resulting message(s).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288395,"byte_end":288433,"line_start":247,"line_end":247,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288771,"byte_end":288777,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"access","qualname":"<Property<M, D>>::access","value":"fn (mut self, e: Access) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that allows setting the Property as readable,\n writable, or both.","sig":null,"attributes":[{"value":"/ Builder method that allows setting the Property as readable,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288543,"byte_end":288607,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/ writable, or both.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288612,"byte_end":288634,"line_start":254,"line_end":254,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288639,"byte_end":288642,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Note: might modify emits_changed as well, if property is changed to non-readonly and emit is set to \"Const\".","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288647,"byte_end":288759,"line_start":256,"line_end":256,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289065,"byte_end":289073,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"annotate","qualname":"<Property<M, D>>::annotate","value":"fn <N, V> (mut self, name: N, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an annotation to the method.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an annotation to the method.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":288996,"byte_end":289053,"line_start":265,"line_end":265,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289288,"byte_end":289298,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<Property<M, D>>::deprecated","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds an annotation that this entity is deprecated.\n","sig":null,"attributes":[{"value":"/ Builder method that adds an annotation that this entity is deprecated.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289202,"byte_end":289276,"line_start":270,"line_end":270,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289412,"byte_end":289420,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Property<M, D>>::get_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get property name\n","sig":null,"attributes":[{"value":"/ Get property name","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289379,"byte_end":289400,"line_start":273,"line_end":273,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289491,"byte_end":289499,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Property<M, D>>::get_data","value":"fn (&self) -> &D::Property","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289456,"byte_end":289479,"line_start":276,"line_end":276,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289597,"byte_end":289604,"line_start":280,"line_end":280,"column_start":12,"column_end":19},"name":"can_get","qualname":"<Property<M, D>>::can_get","value":"fn (&self) -> Result<(), MethodErr>","parent":null,"children":[],"decl_id":null,"docs":" Returns Ok if the property is gettable\n","sig":null,"attributes":[{"value":"/ Returns Ok if the property is gettable","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289543,"byte_end":289585,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289958,"byte_end":289972,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"get_as_variant","qualname":"<Property<M, D>>::get_as_variant","value":"fn (&self, i: &mut arg::IterAppend, pinfo: &PropInfo<M, D>) -> Result<(), MethodErr>","parent":null,"children":[],"decl_id":null,"docs":" Calls the on_get function and appends the result as a variant.","sig":null,"attributes":[{"value":"/ Calls the on_get function and appends the result as a variant.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289825,"byte_end":289891,"line_start":286,"line_end":286,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289896,"byte_end":289899,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Note: Will panic if get_cb is not set.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":289904,"byte_end":289946,"line_start":288,"line_end":288,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":290425,"byte_end":290432,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"can_set","qualname":"<Property<M, D>>::can_set","value":"fn (&self, i: Option<arg::Iter>) -> Result<(), MethodErr>","parent":null,"children":[],"decl_id":null,"docs":" Returns Ok if the property is settable.","sig":null,"attributes":[{"value":"/ Returns Ok if the property is settable.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":290243,"byte_end":290286,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":290291,"byte_end":290294,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Will verify signature in case iter is not None; iter is supposed to point at the Variant with the item inside.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":290299,"byte_end":290413,"line_start":299,"line_end":299,"column_start":5,"column_end":119}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291252,"byte_end":291266,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"set_as_variant","qualname":"<Property<M, D>>::set_as_variant","value":"fn (&self, i: &mut arg::Iter, pinfo: &PropInfo<M, D>) -> Result<Option<Message>, MethodErr>","parent":null,"children":[],"decl_id":null,"docs":" Calls the on_set function, which reads from i.","sig":null,"attributes":[{"value":"/ Calls the on_set function, which reads from i.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291043,"byte_end":291093,"line_start":314,"line_end":314,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291098,"byte_end":291101,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The return value might contain an extra message containing the EmitsChanged signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291106,"byte_end":291193,"line_start":316,"line_end":316,"column_start":5,"column_end":92}},{"value":"/ Note: Will panic if set_cb is not set.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291198,"byte_end":291240,"line_start":317,"line_end":317,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":292266,"byte_end":292287,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"add_propertieschanged","qualname":"<Property<M, D>>::add_propertieschanged","value":"fn <F> (&self, v: &mut Vec<PropertiesPropertiesChanged>, iface: &IfaceName, new_value: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds this property to a list of PropertiesChanged signals.","sig":null,"attributes":[{"value":"/ Adds this property to a list of PropertiesChanged signals.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291923,"byte_end":291985,"line_start":331,"line_end":331,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291990,"byte_end":291993,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ \"v\" is updated with the signal for this property. \"new_value\" is only called if self.emits is \"true\",","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":291998,"byte_end":292103,"line_start":333,"line_end":333,"column_start":5,"column_end":110}},{"value":"/ it should return the value of the property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":292108,"byte_end":292155,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ If no PropertiesChanged signal should be emitted for this property, \"v\" is left unchanged.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":292160,"byte_end":292254,"line_start":335,"line_end":335,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294464,"byte_end":294470,"line_start":385,"line_end":385,"column_start":12,"column_end":18},"name":"on_get","qualname":"<Property<MTFn<D>, D>>::on_get","value":"fn <H> (mut self, handler: H) -> Property<MTFn<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for getting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for getting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294368,"byte_end":294413,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294418,"byte_end":294421,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ For single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294426,"byte_end":294452,"line_start":384,"line_end":384,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294813,"byte_end":294819,"line_start":394,"line_end":394,"column_start":12,"column_end":18},"name":"on_set","qualname":"<Property<MTFn<D>, D>>::on_set","value":"fn <H> (mut self, handler: H) -> Property<MTFn<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for setting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for setting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294717,"byte_end":294762,"line_start":391,"line_end":391,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294767,"byte_end":294770,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ For single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294775,"byte_end":294801,"line_start":393,"line_end":393,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295207,"byte_end":295213,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"on_get","qualname":"<Property<MTFnMut<D>, D>>::on_get","value":"fn <H> (mut self, handler: H) -> Property<MTFnMut<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for getting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for getting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295111,"byte_end":295156,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295161,"byte_end":295164,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ For single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295169,"byte_end":295195,"line_start":405,"line_end":405,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295576,"byte_end":295582,"line_start":415,"line_end":415,"column_start":12,"column_end":18},"name":"on_set","qualname":"<Property<MTFnMut<D>, D>>::on_set","value":"fn <H> (mut self, handler: H) -> Property<MTFnMut<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for setting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for setting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295480,"byte_end":295525,"line_start":412,"line_end":412,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295530,"byte_end":295533,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295538,"byte_end":295564,"line_start":414,"line_end":414,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295983,"byte_end":295989,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"name":"on_get","qualname":"<Property<MTSync<D>, D>>::on_get","value":"fn <H> (mut self, handler: H) -> Property<MTSync<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for getting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for getting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295888,"byte_end":295933,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295938,"byte_end":295941,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ For multi-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295946,"byte_end":295971,"line_start":425,"line_end":425,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296350,"byte_end":296356,"line_start":435,"line_end":435,"column_start":12,"column_end":18},"name":"on_set","qualname":"<Property<MTSync<D>, D>>::on_set","value":"fn <H> (mut self, handler: H) -> Property<MTSync<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Sets the callback for setting a property.","sig":null,"attributes":[{"value":"/ Sets the callback for setting a property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296254,"byte_end":296299,"line_start":432,"line_end":432,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296304,"byte_end":296307,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ For single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296312,"byte_end":296338,"line_start":434,"line_end":434,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296756,"byte_end":296767,"line_start":445,"line_end":445,"column_start":12,"column_end":23},"name":"default_get","qualname":"<Property<M, D>>::default_get","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a \"standard\" get handler.\n","sig":null,"attributes":[{"value":"/ Adds a \"standard\" get handler.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296710,"byte_end":296744,"line_start":444,"line_end":444,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297124,"byte_end":297142,"line_start":455,"line_end":455,"column_start":12,"column_end":30},"name":"default_get_refarg","qualname":"<Property<M, D>>::default_get_refarg","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a \"standard\" get handler (for RefArgs).\n","sig":null,"attributes":[{"value":"/ Adds a \"standard\" get handler (for RefArgs).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297064,"byte_end":297112,"line_start":454,"line_end":454,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":5385},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306426,"byte_end":306435,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Interface","qualname":"::tree::objectpath::Interface","value":"Interface {  }","parent":null,"children":[{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393}],"decl_id":null,"docs":" Represents a D-Bus interface.\n","sig":null,"attributes":[{"value":"/ Represents a D-Bus interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306381,"byte_end":306414,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306830,"byte_end":306835,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"add_m","qualname":"<Interface<M, D>>::add_m","value":"fn <I> (mut self, m: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds a method to the interface.\n","sig":null,"attributes":[{"value":"/ Builder function that adds a method to the interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306761,"byte_end":306818,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307063,"byte_end":307068,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"add_s","qualname":"<Interface<M, D>>::add_s","value":"fn <I> (mut self, s: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds a signal to the interface.\n","sig":null,"attributes":[{"value":"/ Builder function that adds a signal to the interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306994,"byte_end":307051,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307295,"byte_end":307300,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"add_p","qualname":"<Interface<M, D>>::add_p","value":"fn <I> (mut self, p: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds a property to the interface.\n","sig":null,"attributes":[{"value":"/ Builder function that adds a property to the interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307224,"byte_end":307283,"line_start":53,"line_end":53,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307542,"byte_end":307550,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"annotate","qualname":"<Interface<M, D>>::annotate","value":"fn <N, V> (mut self, name: N, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds an annotation to this interface.\n","sig":null,"attributes":[{"value":"/ Builder function that adds an annotation to this interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307467,"byte_end":307530,"line_start":60,"line_end":60,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307767,"byte_end":307777,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"deprecated","qualname":"<Interface<M, D>>::deprecated","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds an annotation that this entity is deprecated.\n","sig":null,"attributes":[{"value":"/ Builder function that adds an annotation that this entity is deprecated.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307679,"byte_end":307755,"line_start":65,"line_end":65,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307892,"byte_end":307900,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"get_name","qualname":"<Interface<M, D>>::get_name","value":"fn (&self) -> &IfaceName<'static>","parent":null,"children":[],"decl_id":null,"docs":" Get interface name\n","sig":null,"attributes":[{"value":"/ Get interface name","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307858,"byte_end":307880,"line_start":68,"line_end":68,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307986,"byte_end":307994,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Interface<M, D>>::get_data","value":"fn (&self) -> &D::Interface","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":307951,"byte_end":307974,"line_start":71,"line_end":71,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308107,"byte_end":308113,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"iter_m","qualname":"<Interface<M, D>>::iter_m","value":"fn <'a> (&'a self) -> Iter<'a, Method<M, D>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over methods implemented by this interface.\n","sig":null,"attributes":[{"value":"/ Iterates over methods implemented by this interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308039,"byte_end":308095,"line_start":74,"line_end":74,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308275,"byte_end":308281,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"iter_s","qualname":"<Interface<M, D>>::iter_s","value":"fn <'a> (&'a self) -> Iter<'a, Signal<D>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over signals implemented by this interface.\n","sig":null,"attributes":[{"value":"/ Iterates over signals implemented by this interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308207,"byte_end":308263,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308443,"byte_end":308449,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"iter_p","qualname":"<Interface<M, D>>::iter_p","value":"fn <'a> (&'a self) -> Iter<'a, Property<M, D>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over properties implemented by this interface.\n","sig":null,"attributes":[{"value":"/ Iterates over properties implemented by this interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308372,"byte_end":308431,"line_start":80,"line_end":80,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5398},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":309415,"byte_end":309425,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"IfaceCache","qualname":"::tree::objectpath::IfaceCache","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cache of built-in interfaces, in order to save memory when many object paths implement the same interface(s).\n","sig":null,"attributes":[{"value":"/ Cache of built-in interfaces, in order to save memory when many object paths implement the same interface(s).","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":309290,"byte_end":309403,"line_start":105,"line_end":105,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":309605,"byte_end":309608,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"get","qualname":"<IfaceCache<M, D>>::get","value":"fn <S, F> (&self, s: S, f: F) -> Arc<Interface<M, D>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310059,"byte_end":310070,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"get_factory","qualname":"<IfaceCache<M, D>>::get_factory","value":"fn <S, F> (&self, s: S, f: F) -> Arc<Interface<M, D>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310384,"byte_end":310387,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<IfaceCache<M, D>>::new","value":"fn () -> Arc<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5407},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310511,"byte_end":310521,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"ObjectPath","qualname":"::tree::objectpath::ObjectPath","value":"ObjectPath {  }","parent":null,"children":[{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414}],"decl_id":null,"docs":" A D-Bus Object Path.\n","sig":null,"attributes":[{"value":"/ A D-Bus Object Path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310475,"byte_end":310499,"line_start":136,"line_end":136,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310854,"byte_end":310862,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"get_name","qualname":"<ObjectPath<M, D>>::get_name","value":"fn (&self) -> &Path<'static>","parent":null,"children":[],"decl_id":null,"docs":" Get property name\n","sig":null,"attributes":[{"value":"/ Get property name","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310821,"byte_end":310842,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310943,"byte_end":310951,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"get_data","qualname":"<ObjectPath<M, D>>::get_data","value":"fn (&self) -> &D::ObjectPath","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310908,"byte_end":310931,"line_start":150,"line_end":150,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":311070,"byte_end":311074,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"iter","qualname":"<ObjectPath<M, D>>::iter","value":"fn <'a> (&'a self) -> Iter<'a, Interface<M, D>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over interfaces implemented by this object path.\n","sig":null,"attributes":[{"value":"/ Iterates over interfaces implemented by this object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310997,"byte_end":311058,"line_start":153,"line_end":153,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":315863,"byte_end":315877,"line_start":263,"line_end":263,"column_start":12,"column_end":26},"name":"introspectable","qualname":"<ObjectPath<M, D>>::introspectable","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds introspection support for this object path.\n","sig":null,"attributes":[{"value":"/ Adds introspection support for this object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":315799,"byte_end":315851,"line_start":262,"line_end":262,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316250,"byte_end":316253,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"add","qualname":"<ObjectPath<M, D>>::add","value":"fn <I> (mut self, s: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds a interface to the object path.\n","sig":null,"attributes":[{"value":"/ Builder function that adds a interface to the object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316176,"byte_end":316238,"line_start":271,"line_end":271,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316609,"byte_end":316626,"line_start":281,"line_end":281,"column_start":12,"column_end":29},"name":"default_interface","qualname":"<ObjectPath<M, D>>::default_interface","value":"fn (mut self, i: IfaceName<'static>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that sets what interface should be dispatched on an incoming\n method call without interface.\n","sig":null,"attributes":[{"value":"/ Builder function that sets what interface should be dispatched on an incoming","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316477,"byte_end":316558,"line_start":279,"line_end":279,"column_start":5,"column_end":86}},{"value":"/ method call without interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316563,"byte_end":316597,"line_start":280,"line_end":280,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316968,"byte_end":316982,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"object_manager","qualname":"<ObjectPath<M, D>>::object_manager","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds ObjectManager support for this object path.","sig":null,"attributes":[{"value":"/ Adds ObjectManager support for this object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316732,"byte_end":316784,"line_start":286,"line_end":286,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316789,"byte_end":316792,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ It is not possible to add/remove interfaces while the object path belongs to a tree,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316797,"byte_end":316885,"line_start":288,"line_end":288,"column_start":5,"column_end":93}},{"value":"/ hence no InterfacesAdded / InterfacesRemoved signals are sent.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":316890,"byte_end":316956,"line_start":289,"line_end":289,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5419},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319375,"byte_end":319379,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"Tree","qualname":"::tree::objectpath::Tree","value":"Tree {  }","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"decl_id":null,"docs":" A collection of object paths.\n","sig":null,"attributes":[{"value":"/ A collection of object paths.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319304,"byte_end":319337,"line_start":337,"line_end":337,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319819,"byte_end":319822,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"add","qualname":"<Tree<M, D>>::add","value":"fn <I> (mut self, s: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder function that adds an object path to this tree.","sig":null,"attributes":[{"value":"/ Builder function that adds an object path to this tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319545,"byte_end":319604,"line_start":345,"line_end":345,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319609,"byte_end":319612,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Note: This does not register a path with the connection, so if the tree is currently registered,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319617,"byte_end":319717,"line_start":347,"line_end":347,"column_start":5,"column_end":105}},{"value":"/ you might want to call Connection::register_object_path to add the path manually.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319722,"byte_end":319807,"line_start":348,"line_end":348,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319993,"byte_end":319996,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"get","qualname":"<Tree<M, D>>::get","value":"fn (&self, p: &Path<'static>) -> Option<&Arc<ObjectPath<M, D>>>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to an object path from the tree.\n","sig":null,"attributes":[{"value":"/ Get a reference to an object path from the tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319929,"byte_end":319981,"line_start":354,"line_end":354,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320152,"byte_end":320156,"line_start":360,"line_end":360,"column_start":12,"column_end":16},"name":"iter","qualname":"<Tree<M, D>>::iter","value":"fn <'a> (&'a self) -> Iter<'a, ObjectPath<M, D>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates over object paths in this tree.\n","sig":null,"attributes":[{"value":"/ Iterates over object paths in this tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320096,"byte_end":320140,"line_start":359,"line_end":359,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320528,"byte_end":320534,"line_start":366,"line_end":366,"column_start":12,"column_end":18},"name":"insert","qualname":"<Tree<M, D>>::insert","value":"fn <I> (&mut self, s: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Non-builder function that adds an object path to this tree.","sig":null,"attributes":[{"value":"/ Non-builder function that adds an object path to this tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320250,"byte_end":320313,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320318,"byte_end":320321,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Note: This does not register a path with the connection, so if the tree is currently registered,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320326,"byte_end":320426,"line_start":364,"line_end":364,"column_start":5,"column_end":105}},{"value":"/ you might want to call Connection::register_object_path to add the path manually.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320431,"byte_end":320516,"line_start":365,"line_end":365,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320986,"byte_end":320992,"line_start":376,"line_end":376,"column_start":12,"column_end":18},"name":"remove","qualname":"<Tree<M, D>>::remove","value":"fn (&mut self, p: &Path<'static>) -> Option<Arc<ObjectPath<M, D>>>","parent":null,"children":[],"decl_id":null,"docs":" Remove a object path from the Tree. Returns the object path removed, or None if not found.","sig":null,"attributes":[{"value":"/ Remove a object path from the Tree. Returns the object path removed, or None if not found.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320670,"byte_end":320764,"line_start":372,"line_end":372,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320769,"byte_end":320772,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Note: This does not unregister a path with the connection, so if the tree is currently registered,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320777,"byte_end":320879,"line_start":374,"line_end":374,"column_start":5,"column_end":107}},{"value":"/ you might want to call Connection::unregister_object_path to remove the path manually.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":320884,"byte_end":320974,"line_start":375,"line_end":375,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":321316,"byte_end":321330,"line_start":383,"line_end":383,"column_start":12,"column_end":26},"name":"set_registered","qualname":"<Tree<M, D>>::set_registered","value":"fn (&self, c: &Connection, b: bool) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers or unregisters all object paths in the tree to a ffidisp::Connection.\n","sig":null,"attributes":[{"value":"/ Registers or unregisters all object paths in the tree to a ffidisp::Connection.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":321221,"byte_end":321304,"line_start":382,"line_end":382,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322160,"byte_end":322163,"line_start":405,"line_end":405,"column_start":12,"column_end":15},"name":"run","qualname":"<Tree<M, D>>::run","value":"fn <'a, I> (&'a self, c: &'a Connection, i: I) -> TreeServer<'a, I, M, D>","parent":null,"children":[],"decl_id":null,"docs":" This method takes an `ConnectionItem` iterator (you get it from `Connection::iter()`)\n and handles all matching items. Non-matching items (e g signals) are passed through.\n","sig":null,"attributes":[{"value":"/ This method takes an `ConnectionItem` iterator (you get it from `Connection::iter()`)","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":321966,"byte_end":322055,"line_start":403,"line_end":403,"column_start":5,"column_end":94}},{"value":"/ and handles all matching items. Non-matching items (e g signals) are passed through.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322060,"byte_end":322148,"line_start":404,"line_end":404,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322506,"byte_end":322512,"line_start":413,"line_end":413,"column_start":12,"column_end":18},"name":"handle","qualname":"<Tree<M, D>>::handle","value":"fn (&self, m: &Message) -> Option<Vec<Message>>","parent":null,"children":[],"decl_id":null,"docs":" Handles a message.","sig":null,"attributes":[{"value":"/ Handles a message.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322330,"byte_end":322352,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322357,"byte_end":322360,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Will return None in case the object path was not","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322365,"byte_end":322417,"line_start":411,"line_end":411,"column_start":5,"column_end":57}},{"value":"/ found in this tree, or otherwise a list of messages to be sent back.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322422,"byte_end":322494,"line_start":412,"line_end":412,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322921,"byte_end":322936,"line_start":421,"line_end":421,"column_start":12,"column_end":27},"name":"process_channel","qualname":"<Tree<M, D>>::process_channel","value":"fn (&self, channel: &Channel, timeout: Duration) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tries to handle an incoming message from the provided channel if there is one. If there isn't one,\n it will wait up to timeout\n","sig":null,"attributes":[{"value":"/ Tries to handle an incoming message from the provided channel if there is one. If there isn't one,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322772,"byte_end":322874,"line_start":419,"line_end":419,"column_start":5,"column_end":107}},{"value":"/ it will wait up to timeout","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":322879,"byte_end":322909,"line_start":420,"line_end":420,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324399,"byte_end":324407,"line_start":461,"line_end":461,"column_start":12,"column_end":20},"name":"get_data","qualname":"<Tree<M, D>>::get_data","value":"fn (&self) -> &D::Tree","parent":null,"children":[],"decl_id":null,"docs":" Get associated data\n","sig":null,"attributes":[{"value":"/ Get associated data","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324364,"byte_end":324387,"line_start":460,"line_end":460,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324667,"byte_end":324685,"line_start":468,"line_end":468,"column_start":12,"column_end":30},"name":"start_receive_sync","qualname":"<Tree<M, D>>::start_receive_sync","value":"fn <C> (self, connection: &C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Connects a SyncConnection with a Tree so that incoming method calls are handled.","sig":null,"attributes":[{"value":"/ Connects a SyncConnection with a Tree so that incoming method calls are handled.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324518,"byte_end":324602,"line_start":465,"line_end":465,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324607,"byte_end":324610,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The tree needs to be of type MTSync.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324615,"byte_end":324655,"line_start":467,"line_end":467,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":325493,"byte_end":325511,"line_start":486,"line_end":486,"column_start":12,"column_end":30},"name":"start_receive_send","qualname":"<Tree<M, D>>::start_receive_send","value":"fn <C> (self, connection: &C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Connects a Connection with a Tree so that incoming method calls are handled.","sig":null,"attributes":[{"value":"/ Connects a Connection with a Tree so that incoming method calls are handled.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":325348,"byte_end":325428,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":325433,"byte_end":325436,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The tree needs to be of type MTSync.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":325441,"byte_end":325481,"line_start":485,"line_end":485,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":326265,"byte_end":326278,"line_start":503,"line_end":503,"column_start":12,"column_end":25},"name":"start_receive","qualname":"<Tree<M, D>>::start_receive","value":"fn <C> (self, connection: &C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Connects a LocalConnection with a Tree so that incoming method calls are handled.\n","sig":null,"attributes":[{"value":"/ Connects a LocalConnection with a Tree so that incoming method calls are handled.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":326168,"byte_end":326253,"line_start":502,"line_end":502,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2337},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327688,"byte_end":327698,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"TreeServer","qualname":"::tree::objectpath::TreeServer","value":"TreeServer {  }","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344}],"decl_id":null,"docs":" An iterator adapter that handles incoming method calls.","sig":null,"attributes":[{"value":"/ An iterator adapter that handles incoming method calls.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327476,"byte_end":327535,"line_start":535,"line_end":535,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327536,"byte_end":327539,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ Method calls that match an object path in the tree are handled and consumed by this","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327540,"byte_end":327627,"line_start":537,"line_end":537,"column_start":1,"column_end":88}},{"value":"/ iterator. Other messages are passed through.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327628,"byte_end":327676,"line_start":538,"line_end":538,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5432},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335818,"byte_end":335825,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Factory","qualname":"::tree::factory::Factory","value":"","parent":null,"children":[],"decl_id":null,"docs":" The factory is used to create object paths, interfaces, methods etc.","sig":null,"attributes":[{"value":"/ The factory is used to create object paths, interfaces, methods etc.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335291,"byte_end":335363,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335364,"byte_end":335367,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are three factories:","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335368,"byte_end":335398,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335399,"byte_end":335402,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/  **MTFn** - all methods are `Fn()`.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335403,"byte_end":335442,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335443,"byte_end":335446,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/  **MTFnMut** - all methods are `FnMut()`. This means they can mutate their environment,","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335447,"byte_end":335538,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/  which has the side effect that if you call it recursively, it will RefCell panic.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335539,"byte_end":335625,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335626,"byte_end":335629,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/  **MTSync** - all methods are `Fn() + Send + Sync + 'static`. This means that the methods","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335630,"byte_end":335723,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/  can be called from different threads in parallel.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335724,"byte_end":335778,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335779,"byte_end":335782,"line_start":20,"line_end":20,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336126,"byte_end":336132,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"new_fn","qualname":"<Factory<MTFn<()>, ()>>::new_fn","value":"fn <D> () -> Factory<MTFn<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new factory for single-thread use.\n","sig":null,"attributes":[{"value":"/ Creates a new factory for single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336066,"byte_end":336114,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336313,"byte_end":336322,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"new_fnmut","qualname":"<Factory<MTFn<()>, ()>>::new_fnmut","value":"fn <D> () -> Factory<MTFnMut<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new factory for single-thread use, where callbacks can mutate their environment.\n","sig":null,"attributes":[{"value":"/ Creates a new factory for single-thread use, where callbacks can mutate their environment.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336207,"byte_end":336301,"line_start":32,"line_end":32,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336459,"byte_end":336467,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_sync","qualname":"<Factory<MTFn<()>, ()>>::new_sync","value":"fn <D> () -> Factory<MTSync<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new factory for multi-thread use.\n","sig":null,"attributes":[{"value":"/ Creates a new factory for multi-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336400,"byte_end":336447,"line_start":35,"line_end":35,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336649,"byte_end":336655,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"method","qualname":"<Factory<MTFn<D>, D>>::method","value":"fn <H, T> (&self, t: T, data: D::Method, handler: H) -> Method<MTFn<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method for single-thread use.\n","sig":null,"attributes":[{"value":"/ Creates a new method for single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336590,"byte_end":336637,"line_start":41,"line_end":41,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337019,"byte_end":337025,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"method","qualname":"<Factory<MTFnMut<D>, D>>::method","value":"fn <H, T> (&self, t: T, data: D::Method, handler: H) -> Method<MTFnMut<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method for single-thread use.\n","sig":null,"attributes":[{"value":"/ Creates a new method for single-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336960,"byte_end":337007,"line_start":49,"line_end":49,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337410,"byte_end":337416,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"method","qualname":"<Factory<MTSync<D>, D>>::method","value":"fn <H, T> (&self, t: T, data: D::Method, handler: H) -> Method<MTSync<D>, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method for multi-thread use.\n","sig":null,"attributes":[{"value":"/ Creates a new method for multi-thread use.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337352,"byte_end":337398,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337866,"byte_end":337874,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"property","qualname":"<Factory<M, D>>::property","value":"fn <A, T> (&self, name: T, data: D::Property) -> Property<M, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new property.","sig":null,"attributes":[{"value":"/ Creates a new property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337750,"byte_end":337777,"line_start":67,"line_end":67,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337782,"byte_end":337785,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ `A` is used to calculate the type signature of the property.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337790,"byte_end":337854,"line_start":69,"line_end":69,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338102,"byte_end":338108,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"signal","qualname":"<Factory<M, D>>::signal","value":"fn <T> (&self, name: T, data: D::Signal) -> Signal<D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signal.\n","sig":null,"attributes":[{"value":"/ Creates a new signal.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338065,"byte_end":338090,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338287,"byte_end":338296,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"interface","qualname":"<Factory<M, D>>::interface","value":"fn <T> (&self, name: T, data: D::Interface) -> Interface<M, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new interface.\n","sig":null,"attributes":[{"value":"/ Creates a new interface.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338247,"byte_end":338275,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338496,"byte_end":338507,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"object_path","qualname":"<Factory<M, D>>::object_path","value":"fn <T> (&self, name: T, data: D::ObjectPath) -> ObjectPath<M, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object path.\n","sig":null,"attributes":[{"value":"/ Creates a new object path.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338454,"byte_end":338484,"line_start":85,"line_end":85,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338714,"byte_end":338718,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"tree","qualname":"<Factory<M, D>>::tree","value":"fn (&self, data: D::Tree) -> Tree<M, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new tree.\n","sig":null,"attributes":[{"value":"/ Creates a new tree.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338679,"byte_end":338702,"line_start":90,"line_end":90,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338991,"byte_end":339002,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"method_sync","qualname":"<Factory<M, D>>::method_sync","value":"fn <H, T> (&self, t: T, data: D::Method, handler: H) -> Method<M, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method - usually you'll use \"method\" instead.","sig":null,"attributes":[{"value":"/ Creates a new method - usually you'll use \"method\" instead.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338810,"byte_end":338873,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338878,"byte_end":338881,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This is useful for being able to create methods in code which is generic over methodtype.","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":338886,"byte_end":338979,"line_start":97,"line_end":97,"column_start":5,"column_end":98}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27514,"byte_end":27523,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3118,"byte_end":3125,"line_start":36,"line_end":36,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3135,"byte_end":3142,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":154},{"krate":0,"index":160},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":185},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20587,"byte_end":20594,"line_start":442,"line_end":442,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20725,"byte_end":20732,"line_start":450,"line_end":450,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43743,"byte_end":43751,"line_start":37,"line_end":37,"column_start":88,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44757,"byte_end":44765,"line_start":58,"line_end":58,"column_start":84,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46805,"byte_end":46832,"line_start":105,"line_end":105,"column_start":25,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47088,"byte_end":47115,"line_start":113,"line_end":113,"column_start":23,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47410,"byte_end":47437,"line_start":123,"line_end":123,"column_start":30,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":48070,"byte_end":48078,"line_start":134,"line_end":134,"column_start":87,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49227,"byte_end":49255,"line_start":155,"line_end":155,"column_start":25,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49433,"byte_end":49461,"line_start":162,"line_end":162,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49694,"byte_end":49722,"line_start":171,"line_end":171,"column_start":30,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50227,"byte_end":50257,"line_start":184,"line_end":184,"column_start":25,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50435,"byte_end":50465,"line_start":191,"line_end":191,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50700,"byte_end":50730,"line_start":200,"line_end":200,"column_start":30,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51218,"byte_end":51226,"line_start":212,"line_end":212,"column_start":78,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":54923,"byte_end":54933,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70541,"byte_end":70551,"line_start":458,"line_end":458,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70741,"byte_end":70751,"line_start":467,"line_end":467,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70927,"byte_end":70937,"line_start":473,"line_end":473,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71068,"byte_end":71078,"line_start":477,"line_end":477,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71957,"byte_end":71972,"line_start":508,"line_end":508,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73614,"byte_end":73629,"line_start":551,"line_end":551,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75396,"byte_end":75404,"line_start":591,"line_end":591,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31995,"byte_end":32003,"line_start":33,"line_end":33,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78721,"byte_end":78731,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79516,"byte_end":79521,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":80160,"byte_end":80165,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":80480,"byte_end":80489,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35074,"byte_end":35082,"line_start":104,"line_end":104,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35624,"byte_end":35638,"line_start":123,"line_end":123,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36476,"byte_end":36490,"line_start":152,"line_end":152,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":38083,"byte_end":38095,"line_start":195,"line_end":195,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86725,"byte_end":86730,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86951,"byte_end":86956,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86966,"byte_end":86971,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88263,"byte_end":88268,"line_start":60,"line_end":60,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88384,"byte_end":88389,"line_start":66,"line_end":66,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88619,"byte_end":88624,"line_start":73,"line_end":73,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88709,"byte_end":88714,"line_start":77,"line_end":77,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88957,"byte_end":88962,"line_start":85,"line_end":85,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":89138,"byte_end":89143,"line_start":92,"line_end":92,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89766,"byte_end":89776,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89801,"byte_end":89811,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89830,"byte_end":89840,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90114,"byte_end":90125,"line_start":31,"line_end":31,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90150,"byte_end":90161,"line_start":32,"line_end":32,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90993,"byte_end":90998,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":91940,"byte_end":91948,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":93897,"byte_end":93905,"line_start":133,"line_end":133,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94966,"byte_end":94973,"line_start":161,"line_end":161,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95110,"byte_end":95117,"line_start":167,"line_end":167,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103906,"byte_end":103913,"line_start":396,"line_end":396,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104680,"byte_end":104687,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/filters.rs","byte_start":108819,"byte_end":108826,"line_start":12,"line_end":12,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/filters.rs","byte_start":108944,"byte_end":108951,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124950,"byte_end":124955,"line_start":40,"line_end":40,"column_start":96,"column_end":101},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":712},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126137,"byte_end":126164,"line_start":64,"line_end":64,"column_start":25,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126420,"byte_end":126447,"line_start":72,"line_end":72,"column_start":23,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126748,"byte_end":126775,"line_start":82,"line_end":82,"column_start":36,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127080,"byte_end":127085,"line_start":91,"line_end":91,"column_start":90,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127489,"byte_end":127494,"line_start":104,"line_end":104,"column_start":80,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128153,"byte_end":128158,"line_start":120,"line_end":120,"column_start":89,"column_end":94},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128969,"byte_end":128997,"line_start":134,"line_end":134,"column_start":25,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129175,"byte_end":129203,"line_start":141,"line_end":141,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129442,"byte_end":129470,"line_start":150,"line_end":150,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129758,"byte_end":129788,"line_start":161,"line_end":161,"column_start":25,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129966,"byte_end":129996,"line_start":168,"line_end":168,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":130237,"byte_end":130267,"line_start":177,"line_end":177,"column_start":36,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":133913,"byte_end":133918,"line_start":256,"line_end":256,"column_start":90,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":138632,"byte_end":138652,"line_start":370,"line_end":370,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":138866,"byte_end":138886,"line_start":378,"line_end":378,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139138,"byte_end":139158,"line_start":388,"line_end":388,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139367,"byte_end":139379,"line_start":398,"line_end":398,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139505,"byte_end":139517,"line_start":404,"line_end":404,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139703,"byte_end":139715,"line_start":412,"line_end":412,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139920,"byte_end":139936,"line_start":422,"line_end":422,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":140062,"byte_end":140078,"line_start":428,"line_end":428,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":140268,"byte_end":140284,"line_start":436,"line_end":436,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116364,"byte_end":116374,"line_start":189,"line_end":189,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116481,"byte_end":116496,"line_start":193,"line_end":193,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116608,"byte_end":116622,"line_start":197,"line_end":197,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117169,"byte_end":117176,"line_start":209,"line_end":209,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118089,"byte_end":118094,"line_start":232,"line_end":232,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118408,"byte_end":118413,"line_start":239,"line_end":239,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145137,"byte_end":145146,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145606,"byte_end":145610,"line_start":164,"line_end":164,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171919,"byte_end":171922,"line_start":128,"line_end":128,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":176056,"byte_end":176059,"line_start":236,"line_end":236,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":192757,"byte_end":192763,"line_start":183,"line_end":183,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":192931,"byte_end":192937,"line_start":187,"line_end":187,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193184,"byte_end":193190,"line_start":197,"line_end":197,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193215,"byte_end":193221,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193970,"byte_end":193977,"line_start":224,"line_end":224,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194141,"byte_end":194148,"line_start":228,"line_end":228,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194296,"byte_end":194303,"line_start":233,"line_end":233,"column_start":18,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194328,"byte_end":194335,"line_start":234,"line_end":234,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196619,"byte_end":196626,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196897,"byte_end":196904,"line_start":18,"line_end":18,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196981,"byte_end":196988,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197174,"byte_end":197181,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197389,"byte_end":197396,"line_start":35,"line_end":35,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197627,"byte_end":197634,"line_start":42,"line_end":42,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197800,"byte_end":197807,"line_start":48,"line_end":48,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":198184,"byte_end":198191,"line_start":60,"line_end":60,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":202459,"byte_end":202462,"line_start":182,"line_end":182,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":206570,"byte_end":206573,"line_start":79,"line_end":79,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208555,"byte_end":208559,"line_start":129,"line_end":129,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208737,"byte_end":208741,"line_start":133,"line_end":133,"column_start":75,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208966,"byte_end":208970,"line_start":138,"line_end":138,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209241,"byte_end":209245,"line_start":144,"line_end":144,"column_start":103,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209693,"byte_end":209697,"line_start":157,"line_end":157,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209952,"byte_end":209956,"line_start":164,"line_end":164,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210443,"byte_end":210450,"line_start":180,"line_end":180,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210716,"byte_end":210723,"line_start":186,"line_end":186,"column_start":83,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210942,"byte_end":210949,"line_start":192,"line_end":192,"column_start":100,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":211198,"byte_end":211205,"line_start":199,"line_end":199,"column_start":83,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212433,"byte_end":212436,"line_start":227,"line_end":227,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212617,"byte_end":212620,"line_start":232,"line_end":232,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212767,"byte_end":212770,"line_start":238,"line_end":238,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213210,"byte_end":213215,"line_start":251,"line_end":251,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213420,"byte_end":213425,"line_start":256,"line_end":256,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213651,"byte_end":213656,"line_start":261,"line_end":261,"column_start":72,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213918,"byte_end":213923,"line_start":268,"line_end":268,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":214166,"byte_end":214171,"line_start":275,"line_end":275,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":214682,"byte_end":214687,"line_start":287,"line_end":287,"column_start":102,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":216720,"byte_end":216732,"line_start":345,"line_end":345,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":218214,"byte_end":218226,"line_start":379,"line_end":379,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":220162,"byte_end":220175,"line_start":429,"line_end":429,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225562,"byte_end":225578,"line_start":40,"line_end":40,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226835,"byte_end":226851,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226960,"byte_end":226976,"line_start":77,"line_end":77,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227444,"byte_end":227459,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228520,"byte_end":228535,"line_start":118,"line_end":118,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228659,"byte_end":228674,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231122,"byte_end":231133,"line_start":187,"line_end":187,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":237849,"byte_end":237860,"line_start":354,"line_end":354,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238085,"byte_end":238096,"line_start":362,"line_end":362,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238320,"byte_end":238331,"line_start":369,"line_end":369,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238427,"byte_end":238438,"line_start":371,"line_end":371,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238531,"byte_end":238542,"line_start":373,"line_end":373,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238654,"byte_end":238665,"line_start":375,"line_end":375,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238770,"byte_end":238781,"line_start":377,"line_end":377,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238917,"byte_end":238928,"line_start":380,"line_end":380,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":241266,"byte_end":241277,"line_start":445,"line_end":445,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":242577,"byte_end":242588,"line_start":473,"line_end":473,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":245297,"byte_end":245308,"line_start":524,"line_end":524,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":245842,"byte_end":245849,"line_start":537,"line_end":537,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246332,"byte_end":246337,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249206,"byte_end":249217,"line_start":625,"line_end":625,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151033,"byte_end":151040,"line_start":92,"line_end":92,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151538,"byte_end":151545,"line_start":109,"line_end":109,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151638,"byte_end":151645,"line_start":115,"line_end":115,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151857,"byte_end":151864,"line_start":123,"line_end":123,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151946,"byte_end":151953,"line_start":129,"line_end":129,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152043,"byte_end":152050,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152285,"byte_end":152295,"line_start":143,"line_end":143,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156282,"byte_end":156286,"line_start":226,"line_end":226,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161833,"byte_end":161837,"line_start":350,"line_end":350,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162126,"byte_end":162130,"line_start":362,"line_end":362,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164488,"byte_end":164495,"line_start":435,"line_end":435,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165356,"byte_end":165373,"line_start":466,"line_end":466,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165838,"byte_end":165855,"line_start":479,"line_end":479,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":166010,"byte_end":166027,"line_start":484,"line_end":484,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264446,"byte_end":264450,"line_start":21,"line_end":21,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264543,"byte_end":264547,"line_start":23,"line_end":23,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265012,"byte_end":265020,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265949,"byte_end":265960,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266602,"byte_end":266610,"line_start":82,"line_end":82,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266712,"byte_end":266720,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266873,"byte_end":266881,"line_start":90,"line_end":90,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267788,"byte_end":267797,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270096,"byte_end":270105,"line_start":68,"line_end":68,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270293,"byte_end":270302,"line_start":72,"line_end":72,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270408,"byte_end":270417,"line_start":76,"line_end":76,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272931,"byte_end":272935,"line_start":147,"line_end":147,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":274035,"byte_end":274042,"line_start":169,"line_end":169,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":275334,"byte_end":275340,"line_start":192,"line_end":192,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276809,"byte_end":276819,"line_start":227,"line_end":227,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":277205,"byte_end":277215,"line_start":235,"line_end":235,"column_start":97,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278671,"byte_end":278679,"line_start":277,"line_end":277,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279541,"byte_end":279552,"line_start":13,"line_end":13,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279766,"byte_end":279778,"line_start":17,"line_end":17,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279993,"byte_end":280005,"line_start":21,"line_end":21,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280381,"byte_end":280387,"line_start":37,"line_end":37,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2014},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282335,"byte_end":282341,"line_start":75,"line_end":75,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283157,"byte_end":283163,"line_start":101,"line_end":101,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284958,"byte_end":284964,"line_start":146,"line_end":146,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286211,"byte_end":286217,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287546,"byte_end":287554,"line_start":228,"line_end":228,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294341,"byte_end":294349,"line_start":381,"line_end":381,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295081,"byte_end":295089,"line_start":402,"line_end":402,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295859,"byte_end":295867,"line_start":422,"line_end":422,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296650,"byte_end":296658,"line_start":443,"line_end":443,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297012,"byte_end":297020,"line_start":453,"line_end":453,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297414,"byte_end":297422,"line_start":462,"line_end":462,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306739,"byte_end":306748,"line_start":38,"line_end":38,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308597,"byte_end":308606,"line_start":84,"line_end":84,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":309547,"byte_end":309557,"line_start":108,"line_end":108,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310029,"byte_end":310039,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310797,"byte_end":310807,"line_start":145,"line_end":145,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":315654,"byte_end":315664,"line_start":257,"line_end":257,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319528,"byte_end":319532,"line_start":344,"line_end":344,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324501,"byte_end":324505,"line_start":464,"line_end":464,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":326848,"byte_end":326852,"line_start":521,"line_end":521,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327185,"byte_end":327188,"line_start":528,"line_end":528,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327914,"byte_end":327924,"line_start":545,"line_end":545,"column_start":98,"column_end":108},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335953,"byte_end":335960,"line_start":24,"line_end":24,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336038,"byte_end":336045,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336564,"byte_end":336571,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336931,"byte_end":336938,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337324,"byte_end":337331,"line_start":56,"line_end":56,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337729,"byte_end":337736,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1089,"byte_end":1096,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1107,"byte_end":1114,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":224}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31328,"byte_end":31335,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":241}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":571}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1191,"byte_end":1199,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":666}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":110073,"byte_end":110080,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":692}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1257,"byte_end":1264,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":940}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":150161,"byte_end":150172,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1471}},{"kind":"Mod","span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/lib.rs","byte_start":1332,"byte_end":1336,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1756}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message/matchrule.rs","byte_start":27514,"byte_end":27523,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3118,"byte_end":3125,"line_start":36,"line_end":36,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":3135,"byte_end":3142,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20587,"byte_end":20594,"line_start":442,"line_end":442,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/message.rs","byte_start":20725,"byte_end":20732,"line_start":450,"line_end":450,"column_start":21,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":43743,"byte_end":43751,"line_start":37,"line_end":37,"column_start":88,"column_end":96},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":251}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":44757,"byte_end":44765,"line_start":58,"line_end":58,"column_start":84,"column_end":92},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":260}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":46805,"byte_end":46832,"line_start":105,"line_end":105,"column_start":25,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2504},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47088,"byte_end":47115,"line_start":113,"line_end":113,"column_start":23,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2504},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":47410,"byte_end":47437,"line_start":123,"line_end":123,"column_start":30,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2504},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":48070,"byte_end":48078,"line_start":134,"line_end":134,"column_start":87,"column_end":95},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":288}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49227,"byte_end":49255,"line_start":155,"line_end":155,"column_start":25,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2512},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49433,"byte_end":49461,"line_start":162,"line_end":162,"column_start":23,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2512},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":49694,"byte_end":49722,"line_start":171,"line_end":171,"column_start":30,"column_end":58},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2512},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50227,"byte_end":50257,"line_start":184,"line_end":184,"column_start":25,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50435,"byte_end":50465,"line_start":191,"line_end":191,"column_start":23,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":50700,"byte_end":50730,"line_start":200,"line_end":200,"column_start":30,"column_end":60},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2519},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/stdintf.rs","byte_start":51218,"byte_end":51226,"line_start":212,"line_end":212,"column_start":78,"column_end":86},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2536},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":54923,"byte_end":54933,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70541,"byte_end":70551,"line_start":458,"line_end":458,"column_start":15,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70741,"byte_end":70751,"line_start":467,"line_end":467,"column_start":21,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":70927,"byte_end":70937,"line_start":473,"line_end":473,"column_start":33,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":370},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71068,"byte_end":71078,"line_start":477,"line_end":477,"column_start":42,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":370},"to":{"krate":0,"index":881}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":71957,"byte_end":71972,"line_start":508,"line_end":508,"column_start":10,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":73614,"byte_end":73629,"line_start":551,"line_end":551,"column_start":23,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/connection.rs","byte_start":75396,"byte_end":75404,"line_start":591,"line_end":591,"column_start":55,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2526},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":31995,"byte_end":32003,"line_start":33,"line_end":33,"column_start":51,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":78721,"byte_end":78731,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":79516,"byte_end":79521,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":80160,"byte_end":80165,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2572},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp/watch.rs","byte_start":80480,"byte_end":80489,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35074,"byte_end":35082,"line_start":104,"line_end":104,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":35624,"byte_end":35638,"line_start":123,"line_end":123,"column_start":24,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2629},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":36476,"byte_end":36490,"line_start":152,"line_end":152,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/ffidisp.rs","byte_start":38083,"byte_end":38095,"line_start":195,"line_end":195,"column_start":66,"column_end":78},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86725,"byte_end":86730,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86951,"byte_end":86956,"line_start":16,"line_end":16,"column_start":22,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":86966,"byte_end":86971,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88263,"byte_end":88268,"line_start":60,"line_end":60,"column_start":15,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88384,"byte_end":88389,"line_start":66,"line_end":66,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88619,"byte_end":88624,"line_start":73,"line_end":73,"column_start":28,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88709,"byte_end":88714,"line_start":77,"line_end":77,"column_start":28,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":88957,"byte_end":88962,"line_start":85,"line_end":85,"column_start":39,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/error.rs","byte_start":89138,"byte_end":89143,"line_start":92,"line_end":92,"column_start":32,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":545},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89766,"byte_end":89776,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89801,"byte_end":89811,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":89830,"byte_end":89840,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2664},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90114,"byte_end":90125,"line_start":31,"line_end":31,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90150,"byte_end":90161,"line_start":32,"line_end":32,"column_start":22,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":90993,"byte_end":90998,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":91940,"byte_end":91948,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":93897,"byte_end":93905,"line_start":133,"line_end":133,"column_start":15,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":94966,"byte_end":94973,"line_start":161,"line_end":161,"column_start":15,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2752},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":95110,"byte_end":95117,"line_start":167,"line_end":167,"column_start":6,"column_end":13},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":103906,"byte_end":103913,"line_start":396,"line_end":396,"column_start":28,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":2,"index":2816},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/channel.rs","byte_start":104680,"byte_end":104687,"line_start":419,"line_end":419,"column_start":17,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2752},"to":{"krate":0,"index":632}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/filters.rs","byte_start":108819,"byte_end":108826,"line_start":12,"line_end":12,"column_start":21,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":651},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/filters.rs","byte_start":108944,"byte_end":108951,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":124950,"byte_end":124955,"line_start":40,"line_end":40,"column_start":96,"column_end":101},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":697}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126137,"byte_end":126164,"line_start":64,"line_end":64,"column_start":25,"column_end":52},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126420,"byte_end":126447,"line_start":72,"line_end":72,"column_start":23,"column_end":50},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":126748,"byte_end":126775,"line_start":82,"line_end":82,"column_start":36,"column_end":63},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2826},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127080,"byte_end":127085,"line_start":91,"line_end":91,"column_start":90,"column_end":95},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":127489,"byte_end":127494,"line_start":104,"line_end":104,"column_start":80,"column_end":85},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":730}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128153,"byte_end":128158,"line_start":120,"line_end":120,"column_start":89,"column_end":94},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":128969,"byte_end":128997,"line_start":134,"line_end":134,"column_start":25,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2832},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129175,"byte_end":129203,"line_start":141,"line_end":141,"column_start":23,"column_end":51},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2832},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129442,"byte_end":129470,"line_start":150,"line_end":150,"column_start":36,"column_end":64},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2832},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129758,"byte_end":129788,"line_start":161,"line_end":161,"column_start":25,"column_end":55},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2837},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":129966,"byte_end":129996,"line_start":168,"line_end":168,"column_start":23,"column_end":53},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2837},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":130237,"byte_end":130267,"line_start":177,"line_end":177,"column_start":36,"column_end":66},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2837},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":133913,"byte_end":133918,"line_start":256,"line_end":256,"column_start":90,"column_end":95},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2991},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":138632,"byte_end":138652,"line_start":370,"line_end":370,"column_start":25,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2842},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":138866,"byte_end":138886,"line_start":378,"line_end":378,"column_start":23,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2842},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139138,"byte_end":139158,"line_start":388,"line_end":388,"column_start":36,"column_end":56},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2842},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139367,"byte_end":139379,"line_start":398,"line_end":398,"column_start":25,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2848},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139505,"byte_end":139517,"line_start":404,"line_end":404,"column_start":23,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2848},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139703,"byte_end":139715,"line_start":412,"line_end":412,"column_start":36,"column_end":48},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2848},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":139920,"byte_end":139936,"line_start":422,"line_end":422,"column_start":25,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2852},"to":{"krate":0,"index":964}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":140062,"byte_end":140078,"line_start":428,"line_end":428,"column_start":23,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2852},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking/stdintf.rs","byte_start":140268,"byte_end":140284,"line_start":436,"line_end":436,"column_start":36,"column_end":52},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2852},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116364,"byte_end":116374,"line_start":189,"line_end":189,"column_start":6,"column_end":16},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116481,"byte_end":116496,"line_start":193,"line_end":193,"column_start":6,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":116608,"byte_end":116622,"line_start":197,"line_end":197,"column_start":6,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":117169,"byte_end":117176,"line_start":209,"line_end":209,"column_start":25,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2752},"to":{"krate":0,"index":881}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118089,"byte_end":118094,"line_start":232,"line_end":232,"column_start":13,"column_end":18},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/blocking.rs","byte_start":118408,"byte_end":118413,"line_start":239,"line_end":239,"column_start":59,"column_end":64},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145137,"byte_end":145146,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/strings.rs","byte_start":145606,"byte_end":145610,"line_start":164,"line_end":164,"column_start":31,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168231,"byte_end":168236,"line_start":45,"line_end":45,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168398,"byte_end":168403,"line_start":51,"line_end":51,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":969}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":168579,"byte_end":168584,"line_start":58,"line_end":58,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":171919,"byte_end":171922,"line_start":128,"line_end":128,"column_start":22,"column_end":25},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172843,"byte_end":172846,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":954},"to":{"krate":0,"index":994}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172859,"byte_end":172864,"line_start":148,"line_end":148,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":994}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172867,"byte_end":172871,"line_start":148,"line_end":148,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":994}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":172967,"byte_end":172970,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":954},"to":{"krate":0,"index":995}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/msgarg.rs","byte_start":176056,"byte_end":176059,"line_start":236,"line_end":236,"column_start":28,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":192757,"byte_end":192763,"line_start":183,"line_end":183,"column_start":18,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":192931,"byte_end":192937,"line_start":187,"line_end":187,"column_start":21,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193184,"byte_end":193190,"line_start":197,"line_end":197,"column_start":22,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":995}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193215,"byte_end":193221,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":193970,"byte_end":193977,"line_start":224,"line_end":224,"column_start":14,"column_end":21},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194141,"byte_end":194148,"line_start":228,"line_end":228,"column_start":17,"column_end":24},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194296,"byte_end":194303,"line_start":233,"line_end":233,"column_start":18,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":995}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/basic_impl.rs","byte_start":194328,"byte_end":194335,"line_start":234,"line_end":234,"column_start":22,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4986},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196619,"byte_end":196626,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196897,"byte_end":196904,"line_start":18,"line_end":18,"column_start":29,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4151},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":196981,"byte_end":196988,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197174,"byte_end":197181,"line_start":28,"line_end":28,"column_start":34,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197389,"byte_end":197396,"line_start":35,"line_end":35,"column_start":17,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197627,"byte_end":197634,"line_start":42,"line_end":42,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":197800,"byte_end":197807,"line_start":48,"line_end":48,"column_start":22,"column_end":29},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":198184,"byte_end":198191,"line_start":60,"line_end":60,"column_start":28,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/variantstruct_impl.rs","byte_start":202459,"byte_end":202462,"line_start":182,"line_end":182,"column_start":17,"column_end":20},"kind":{"Impl":{"id":120}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":206570,"byte_end":206573,"line_start":79,"line_end":79,"column_start":34,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208555,"byte_end":208559,"line_start":129,"line_end":129,"column_start":33,"column_end":37},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208737,"byte_end":208741,"line_start":133,"line_end":133,"column_start":75,"column_end":79},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":208966,"byte_end":208970,"line_start":138,"line_end":138,"column_start":41,"column_end":45},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4753},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209241,"byte_end":209245,"line_start":144,"line_end":144,"column_start":103,"column_end":107},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4753},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209693,"byte_end":209697,"line_start":157,"line_end":157,"column_start":62,"column_end":66},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4753},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":209952,"byte_end":209956,"line_start":164,"line_end":164,"column_start":63,"column_end":67},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4753},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210443,"byte_end":210450,"line_start":180,"line_end":180,"column_start":50,"column_end":57},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":6290},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210716,"byte_end":210723,"line_start":186,"line_end":186,"column_start":83,"column_end":90},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":6290},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":210942,"byte_end":210949,"line_start":192,"line_end":192,"column_start":100,"column_end":107},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":6290},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":211198,"byte_end":211205,"line_start":199,"line_end":199,"column_start":83,"column_end":90},"kind":{"Impl":{"id":131}},"from":{"krate":1,"index":6290},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212433,"byte_end":212436,"line_start":227,"line_end":227,"column_start":22,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212617,"byte_end":212620,"line_start":232,"line_end":232,"column_start":34,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":212767,"byte_end":212770,"line_start":238,"line_end":238,"column_start":40,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213210,"byte_end":213215,"line_start":251,"line_end":251,"column_start":38,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213420,"byte_end":213425,"line_start":256,"line_end":256,"column_start":29,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4778},"to":{"krate":0,"index":954}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213651,"byte_end":213656,"line_start":261,"line_end":261,"column_start":72,"column_end":77},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4778},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":213918,"byte_end":213923,"line_start":268,"line_end":268,"column_start":40,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4778},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":214166,"byte_end":214171,"line_start":275,"line_end":275,"column_start":35,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4778},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":214682,"byte_end":214687,"line_start":287,"line_end":287,"column_start":102,"column_end":107},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4778},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":216720,"byte_end":216732,"line_start":345,"line_end":345,"column_start":17,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4799},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":218214,"byte_end":218226,"line_start":379,"line_end":379,"column_start":56,"column_end":68},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4799},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/array_impl.rs","byte_start":220162,"byte_end":220175,"line_start":429,"line_end":429,"column_start":17,"column_end":30},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4806},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":225562,"byte_end":225578,"line_start":40,"line_end":40,"column_start":6,"column_end":22},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226835,"byte_end":226851,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4823},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":226960,"byte_end":226976,"line_start":77,"line_end":77,"column_start":22,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4823},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":227444,"byte_end":227459,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228520,"byte_end":228535,"line_start":118,"line_end":118,"column_start":21,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4844},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":228659,"byte_end":228674,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4844},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":231122,"byte_end":231133,"line_start":187,"line_end":187,"column_start":6,"column_end":17},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":237849,"byte_end":237860,"line_start":354,"line_end":354,"column_start":31,"column_end":42},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238085,"byte_end":238096,"line_start":362,"line_end":362,"column_start":43,"column_end":54},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238320,"byte_end":238331,"line_start":369,"line_end":369,"column_start":28,"column_end":39},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238427,"byte_end":238438,"line_start":371,"line_end":371,"column_start":23,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238531,"byte_end":238542,"line_start":373,"line_end":373,"column_start":30,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238654,"byte_end":238665,"line_start":375,"line_end":375,"column_start":35,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238770,"byte_end":238781,"line_start":377,"line_end":377,"column_start":24,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":238917,"byte_end":238928,"line_start":380,"line_end":380,"column_start":33,"column_end":44},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4865},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":241266,"byte_end":241277,"line_start":445,"line_end":445,"column_start":22,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":242577,"byte_end":242588,"line_start":473,"line_end":473,"column_start":27,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":966}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":245297,"byte_end":245308,"line_start":524,"line_end":524,"column_start":22,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4865},"to":{"krate":0,"index":971}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":245842,"byte_end":245849,"line_start":537,"line_end":537,"column_start":27,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4151},"to":{"krate":0,"index":961}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":246332,"byte_end":246337,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/messageitem.rs","byte_start":249206,"byte_end":249217,"line_start":625,"line_end":625,"column_start":10,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151033,"byte_end":151040,"line_start":92,"line_end":92,"column_start":6,"column_end":13},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151538,"byte_end":151545,"line_start":109,"line_end":109,"column_start":15,"column_end":22},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151638,"byte_end":151645,"line_start":115,"line_end":115,"column_start":16,"column_end":23},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4986},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151857,"byte_end":151864,"line_start":123,"line_end":123,"column_start":18,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4986},"to":{"krate":1,"index":8287}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":151946,"byte_end":151953,"line_start":129,"line_end":129,"column_start":20,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4986},"to":{"krate":1,"index":8291}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152043,"byte_end":152050,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4986},"to":{"krate":1,"index":8289}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":152285,"byte_end":152295,"line_start":143,"line_end":143,"column_start":10,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":156282,"byte_end":156286,"line_start":226,"line_end":226,"column_start":10,"column_end":14},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":161833,"byte_end":161837,"line_start":350,"line_end":350,"column_start":25,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":162126,"byte_end":162130,"line_start":362,"line_end":362,"column_start":23,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":164488,"byte_end":164495,"line_start":435,"line_end":435,"column_start":6,"column_end":13},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165356,"byte_end":165373,"line_start":466,"line_end":466,"column_start":6,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":165838,"byte_end":165855,"line_start":479,"line_end":479,"column_start":23,"column_end":40},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5094},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/arg/mod.rs","byte_start":166010,"byte_end":166027,"line_start":484,"line_end":484,"column_start":23,"column_end":40},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5094},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264446,"byte_end":264450,"line_start":21,"line_end":21,"column_start":40,"column_end":44},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5133},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":264543,"byte_end":264547,"line_start":23,"line_end":23,"column_start":30,"column_end":34},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5133},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265012,"byte_end":265020,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":265949,"byte_end":265960,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266602,"byte_end":266610,"line_start":82,"line_end":82,"column_start":35,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5146},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266712,"byte_end":266720,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5146},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/utils.rs","byte_start":266873,"byte_end":266881,"line_start":90,"line_end":90,"column_start":69,"column_end":77},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5146},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":267788,"byte_end":267797,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270096,"byte_end":270105,"line_start":68,"line_end":68,"column_start":34,"column_end":43},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5182},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270293,"byte_end":270302,"line_start":72,"line_end":72,"column_start":69,"column_end":78},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5182},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270408,"byte_end":270417,"line_start":76,"line_end":76,"column_start":26,"column_end":35},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5182},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270961,"byte_end":270966,"line_start":91,"line_end":91,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1857}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":270969,"byte_end":270976,"line_start":91,"line_end":91,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":1857}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271883,"byte_end":271888,"line_start":119,"line_end":119,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":271891,"byte_end":271898,"line_start":119,"line_end":119,"column_start":44,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1893},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":272931,"byte_end":272935,"line_start":147,"line_end":147,"column_start":37,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5209},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":274035,"byte_end":274042,"line_start":169,"line_end":169,"column_start":37,"column_end":44},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5224},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":275334,"byte_end":275340,"line_start":192,"line_end":192,"column_start":37,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5239},"to":{"krate":0,"index":1871}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":276809,"byte_end":276819,"line_start":227,"line_end":227,"column_start":51,"column_end":61},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":277205,"byte_end":277215,"line_start":235,"line_end":235,"column_start":97,"column_end":107},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5254},"to":{"krate":0,"index":251}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/methodtype.rs","byte_start":278671,"byte_end":278679,"line_start":277,"line_end":277,"column_start":51,"column_end":59},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279541,"byte_end":279552,"line_start":13,"line_end":13,"column_start":52,"column_end":63},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279766,"byte_end":279778,"line_start":17,"line_end":17,"column_start":52,"column_end":64},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1975},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":279993,"byte_end":280005,"line_start":21,"line_end":21,"column_start":52,"column_end":64},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1984},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":280381,"byte_end":280387,"line_start":37,"line_end":37,"column_start":37,"column_end":43},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":282335,"byte_end":282341,"line_start":75,"line_end":75,"column_start":52,"column_end":58},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5301},"to":{"krate":0,"index":1805}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":283157,"byte_end":283163,"line_start":101,"line_end":101,"column_start":19,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":284958,"byte_end":284964,"line_start":146,"line_end":146,"column_start":34,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5314},"to":{"krate":0,"index":1805}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":286211,"byte_end":286217,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":287546,"byte_end":287554,"line_start":228,"line_end":228,"column_start":37,"column_end":45},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":294341,"byte_end":294349,"line_start":381,"line_end":381,"column_start":23,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295081,"byte_end":295089,"line_start":402,"line_end":402,"column_start":23,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":295859,"byte_end":295867,"line_start":422,"line_end":422,"column_start":19,"column_end":27},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":296650,"byte_end":296658,"line_start":443,"line_end":443,"column_start":37,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297012,"byte_end":297020,"line_start":453,"line_end":453,"column_start":37,"column_end":45},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/leaves.rs","byte_start":297414,"byte_end":297422,"line_start":462,"line_end":462,"column_start":52,"column_end":60},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5369},"to":{"krate":0,"index":1805}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":306739,"byte_end":306748,"line_start":38,"line_end":38,"column_start":37,"column_end":46},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":308597,"byte_end":308606,"line_start":84,"line_end":84,"column_start":52,"column_end":61},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5385},"to":{"krate":0,"index":1805}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":309547,"byte_end":309557,"line_start":108,"line_end":108,"column_start":37,"column_end":47},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310029,"byte_end":310039,"line_start":121,"line_end":121,"column_start":37,"column_end":47},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":310797,"byte_end":310807,"line_start":145,"line_end":145,"column_start":37,"column_end":47},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":315654,"byte_end":315664,"line_start":257,"line_end":257,"column_start":37,"column_end":47},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":319528,"byte_end":319532,"line_start":344,"line_end":344,"column_start":37,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":324501,"byte_end":324505,"line_start":464,"line_end":464,"column_start":57,"column_end":61},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":326848,"byte_end":326852,"line_start":521,"line_end":521,"column_start":52,"column_end":56},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5419},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327185,"byte_end":327188,"line_start":528,"line_end":528,"column_start":52,"column_end":55},"kind":{"Impl":{"id":229}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":522}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/objectpath.rs","byte_start":327914,"byte_end":327924,"line_start":545,"line_end":545,"column_start":98,"column_end":108},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2337},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":335953,"byte_end":335960,"line_start":24,"line_end":24,"column_start":69,"column_end":76},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5432},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336038,"byte_end":336045,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336564,"byte_end":336571,"line_start":40,"line_end":40,"column_start":19,"column_end":26},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":336931,"byte_end":336938,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337324,"byte_end":337331,"line_start":56,"line_end":56,"column_start":19,"column_end":26},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/grahamk/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.8.4/src/tree/factory.rs","byte_start":337729,"byte_end":337736,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5432},"to":{"krate":4294967295,"index":4294967295}}]}